
IMU_Headtracker.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000016a  00800100  000020ee  00002182  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000020ee  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000069  0080026a  0080026a  000022ec  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000022ec  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002348  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000a0  00000000  00000000  00002388  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000be9  00000000  00000000  00002428  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000908  00000000  00000000  00003011  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000007ad  00000000  00000000  00003919  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000204  00000000  00000000  000040c8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000588  00000000  00000000  000042cc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000070a  00000000  00000000  00004854  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000098  00000000  00000000  00004f5e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 85 00 	jmp	0x10a	; 0x10a <__ctors_end>
       4:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
       8:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
       c:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      10:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      14:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      18:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      1c:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      20:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      24:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      28:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      2c:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      30:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      34:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      38:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      3c:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      40:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      44:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      48:	0c 94 a2 0a 	jmp	0x1544	; 0x1544 <__vector_18>
      4c:	0c 94 26 0b 	jmp	0x164c	; 0x164c <__vector_19>
      50:	0c 94 88 0b 	jmp	0x1710	; 0x1710 <__vector_20>
      54:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      58:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      5c:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      60:	0c 94 ca 09 	jmp	0x1394	; 0x1394 <__vector_24>
      64:	0c 94 a2 00 	jmp	0x144	; 0x144 <__bad_interrupt>
      68:	e5 09       	sbc	r30, r5
      6a:	37 0a       	sbc	r3, r23
      6c:	37 0a       	sbc	r3, r23
      6e:	37 0a       	sbc	r3, r23
      70:	37 0a       	sbc	r3, r23
      72:	37 0a       	sbc	r3, r23
      74:	37 0a       	sbc	r3, r23
      76:	37 0a       	sbc	r3, r23
      78:	e5 09       	sbc	r30, r5
      7a:	37 0a       	sbc	r3, r23
      7c:	37 0a       	sbc	r3, r23
      7e:	37 0a       	sbc	r3, r23
      80:	37 0a       	sbc	r3, r23
      82:	37 0a       	sbc	r3, r23
      84:	37 0a       	sbc	r3, r23
      86:	37 0a       	sbc	r3, r23
      88:	e7 09       	sbc	r30, r7
      8a:	37 0a       	sbc	r3, r23
      8c:	37 0a       	sbc	r3, r23
      8e:	37 0a       	sbc	r3, r23
      90:	37 0a       	sbc	r3, r23
      92:	37 0a       	sbc	r3, r23
      94:	37 0a       	sbc	r3, r23
      96:	37 0a       	sbc	r3, r23
      98:	37 0a       	sbc	r3, r23
      9a:	37 0a       	sbc	r3, r23
      9c:	37 0a       	sbc	r3, r23
      9e:	37 0a       	sbc	r3, r23
      a0:	37 0a       	sbc	r3, r23
      a2:	37 0a       	sbc	r3, r23
      a4:	37 0a       	sbc	r3, r23
      a6:	37 0a       	sbc	r3, r23
      a8:	e7 09       	sbc	r30, r7
      aa:	37 0a       	sbc	r3, r23
      ac:	37 0a       	sbc	r3, r23
      ae:	37 0a       	sbc	r3, r23
      b0:	37 0a       	sbc	r3, r23
      b2:	37 0a       	sbc	r3, r23
      b4:	37 0a       	sbc	r3, r23
      b6:	37 0a       	sbc	r3, r23
      b8:	37 0a       	sbc	r3, r23
      ba:	37 0a       	sbc	r3, r23
      bc:	37 0a       	sbc	r3, r23
      be:	37 0a       	sbc	r3, r23
      c0:	37 0a       	sbc	r3, r23
      c2:	37 0a       	sbc	r3, r23
      c4:	37 0a       	sbc	r3, r23
      c6:	37 0a       	sbc	r3, r23
      c8:	33 0a       	sbc	r3, r19
      ca:	37 0a       	sbc	r3, r23
      cc:	37 0a       	sbc	r3, r23
      ce:	37 0a       	sbc	r3, r23
      d0:	37 0a       	sbc	r3, r23
      d2:	37 0a       	sbc	r3, r23
      d4:	37 0a       	sbc	r3, r23
      d6:	37 0a       	sbc	r3, r23
      d8:	10 0a       	sbc	r1, r16
      da:	37 0a       	sbc	r3, r23
      dc:	37 0a       	sbc	r3, r23
      de:	37 0a       	sbc	r3, r23
      e0:	37 0a       	sbc	r3, r23
      e2:	37 0a       	sbc	r3, r23
      e4:	37 0a       	sbc	r3, r23
      e6:	37 0a       	sbc	r3, r23
      e8:	37 0a       	sbc	r3, r23
      ea:	37 0a       	sbc	r3, r23
      ec:	37 0a       	sbc	r3, r23
      ee:	37 0a       	sbc	r3, r23
      f0:	37 0a       	sbc	r3, r23
      f2:	37 0a       	sbc	r3, r23
      f4:	37 0a       	sbc	r3, r23
      f6:	37 0a       	sbc	r3, r23
      f8:	04 0a       	sbc	r0, r20
      fa:	37 0a       	sbc	r3, r23
      fc:	37 0a       	sbc	r3, r23
      fe:	37 0a       	sbc	r3, r23
     100:	37 0a       	sbc	r3, r23
     102:	37 0a       	sbc	r3, r23
     104:	37 0a       	sbc	r3, r23
     106:	37 0a       	sbc	r3, r23
     108:	22 0a       	sbc	r2, r18

0000010a <__ctors_end>:
     10a:	11 24       	eor	r1, r1
     10c:	1f be       	out	0x3f, r1	; 63
     10e:	cf ef       	ldi	r28, 0xFF	; 255
     110:	d8 e0       	ldi	r29, 0x08	; 8
     112:	de bf       	out	0x3e, r29	; 62
     114:	cd bf       	out	0x3d, r28	; 61

00000116 <__do_copy_data>:
     116:	12 e0       	ldi	r17, 0x02	; 2
     118:	a0 e0       	ldi	r26, 0x00	; 0
     11a:	b1 e0       	ldi	r27, 0x01	; 1
     11c:	ee ee       	ldi	r30, 0xEE	; 238
     11e:	f0 e2       	ldi	r31, 0x20	; 32
     120:	02 c0       	rjmp	.+4      	; 0x126 <__do_copy_data+0x10>
     122:	05 90       	lpm	r0, Z+
     124:	0d 92       	st	X+, r0
     126:	aa 36       	cpi	r26, 0x6A	; 106
     128:	b1 07       	cpc	r27, r17
     12a:	d9 f7       	brne	.-10     	; 0x122 <__do_copy_data+0xc>

0000012c <__do_clear_bss>:
     12c:	22 e0       	ldi	r18, 0x02	; 2
     12e:	aa e6       	ldi	r26, 0x6A	; 106
     130:	b2 e0       	ldi	r27, 0x02	; 2
     132:	01 c0       	rjmp	.+2      	; 0x136 <.do_clear_bss_start>

00000134 <.do_clear_bss_loop>:
     134:	1d 92       	st	X+, r1

00000136 <.do_clear_bss_start>:
     136:	a3 3d       	cpi	r26, 0xD3	; 211
     138:	b2 07       	cpc	r27, r18
     13a:	e1 f7       	brne	.-8      	; 0x134 <.do_clear_bss_loop>
     13c:	0e 94 90 08 	call	0x1120	; 0x1120 <main>
     140:	0c 94 75 10 	jmp	0x20ea	; 0x20ea <_exit>

00000144 <__bad_interrupt>:
     144:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000148 <_ZN6MahonyC1Ev>:
     148:	fc 01       	movw	r30, r24
     14a:	80 e0       	ldi	r24, 0x00	; 0
     14c:	90 e0       	ldi	r25, 0x00	; 0
     14e:	a0 e8       	ldi	r26, 0x80	; 128
     150:	bf e3       	ldi	r27, 0x3F	; 63
     152:	80 83       	st	Z, r24
     154:	91 83       	std	Z+1, r25	; 0x01
     156:	a2 83       	std	Z+2, r26	; 0x02
     158:	b3 83       	std	Z+3, r27	; 0x03
     15a:	14 82       	std	Z+4, r1	; 0x04
     15c:	15 82       	std	Z+5, r1	; 0x05
     15e:	16 82       	std	Z+6, r1	; 0x06
     160:	17 82       	std	Z+7, r1	; 0x07
     162:	80 87       	std	Z+8, r24	; 0x08
     164:	91 87       	std	Z+9, r25	; 0x09
     166:	a2 87       	std	Z+10, r26	; 0x0a
     168:	b3 87       	std	Z+11, r27	; 0x0b
     16a:	14 86       	std	Z+12, r1	; 0x0c
     16c:	15 86       	std	Z+13, r1	; 0x0d
     16e:	16 86       	std	Z+14, r1	; 0x0e
     170:	17 86       	std	Z+15, r1	; 0x0f
     172:	10 8a       	std	Z+16, r1	; 0x10
     174:	11 8a       	std	Z+17, r1	; 0x11
     176:	12 8a       	std	Z+18, r1	; 0x12
     178:	13 8a       	std	Z+19, r1	; 0x13
     17a:	14 8a       	std	Z+20, r1	; 0x14
     17c:	15 8a       	std	Z+21, r1	; 0x15
     17e:	16 8a       	std	Z+22, r1	; 0x16
     180:	17 8a       	std	Z+23, r1	; 0x17
     182:	10 8e       	std	Z+24, r1	; 0x18
     184:	11 8e       	std	Z+25, r1	; 0x19
     186:	12 8e       	std	Z+26, r1	; 0x1a
     188:	13 8e       	std	Z+27, r1	; 0x1b
     18a:	14 8e       	std	Z+28, r1	; 0x1c
     18c:	15 8e       	std	Z+29, r1	; 0x1d
     18e:	16 8e       	std	Z+30, r1	; 0x1e
     190:	17 8e       	std	Z+31, r1	; 0x1f
     192:	10 a2       	std	Z+32, r1	; 0x20
     194:	11 a2       	std	Z+33, r1	; 0x21
     196:	12 a2       	std	Z+34, r1	; 0x22
     198:	13 a2       	std	Z+35, r1	; 0x23
     19a:	14 aa       	std	Z+52, r1	; 0x34
     19c:	80 e0       	ldi	r24, 0x00	; 0
     19e:	90 e0       	ldi	r25, 0x00	; 0
     1a0:	a0 e0       	ldi	r26, 0x00	; 0
     1a2:	bb e3       	ldi	r27, 0x3B	; 59
     1a4:	84 a3       	std	Z+36, r24	; 0x24
     1a6:	95 a3       	std	Z+37, r25	; 0x25
     1a8:	a6 a3       	std	Z+38, r26	; 0x26
     1aa:	b7 a3       	std	Z+39, r27	; 0x27
     1ac:	08 95       	ret

000001ae <_Z19MPU_9250_initialisev>:
     1ae:	ff 92       	push	r15
     1b0:	0f 93       	push	r16
     1b2:	1f 93       	push	r17
     1b4:	cf 93       	push	r28
     1b6:	df 93       	push	r29
     1b8:	00 d0       	rcall	.+0      	; 0x1ba <_Z19MPU_9250_initialisev+0xc>
     1ba:	1f 92       	push	r1
     1bc:	cd b7       	in	r28, 0x3d	; 61
     1be:	de b7       	in	r29, 0x3e	; 62
     1c0:	0f 2e       	mov	r0, r31
     1c2:	f0 ed       	ldi	r31, 0xD0	; 208
     1c4:	ff 2e       	mov	r15, r31
     1c6:	f0 2d       	mov	r31, r0
     1c8:	f9 82       	std	Y+1, r15	; 0x01
     1ca:	8b e6       	ldi	r24, 0x6B	; 107
     1cc:	8a 83       	std	Y+2, r24	; 0x02
     1ce:	81 e0       	ldi	r24, 0x01	; 1
     1d0:	8b 83       	std	Y+3, r24	; 0x03
     1d2:	63 e0       	ldi	r22, 0x03	; 3
     1d4:	8e 01       	movw	r16, r28
     1d6:	0f 5f       	subi	r16, 0xFF	; 255
     1d8:	1f 4f       	sbci	r17, 0xFF	; 255
     1da:	c8 01       	movw	r24, r16
     1dc:	0e 94 7d 09 	call	0x12fa	; 0x12fa <TWI_Start_Transceiver_With_Data>
     1e0:	83 e0       	ldi	r24, 0x03	; 3
     1e2:	f8 01       	movw	r30, r16
     1e4:	11 92       	st	Z+, r1
     1e6:	8a 95       	dec	r24
     1e8:	e9 f7       	brne	.-6      	; 0x1e4 <_Z19MPU_9250_initialisev+0x36>
     1ea:	f9 82       	std	Y+1, r15	; 0x01
     1ec:	87 e3       	ldi	r24, 0x37	; 55
     1ee:	8a 83       	std	Y+2, r24	; 0x02
     1f0:	82 e0       	ldi	r24, 0x02	; 2
     1f2:	8b 83       	std	Y+3, r24	; 0x03
     1f4:	63 e0       	ldi	r22, 0x03	; 3
     1f6:	c8 01       	movw	r24, r16
     1f8:	0e 94 7d 09 	call	0x12fa	; 0x12fa <TWI_Start_Transceiver_With_Data>
     1fc:	0f 90       	pop	r0
     1fe:	0f 90       	pop	r0
     200:	0f 90       	pop	r0
     202:	df 91       	pop	r29
     204:	cf 91       	pop	r28
     206:	1f 91       	pop	r17
     208:	0f 91       	pop	r16
     20a:	ff 90       	pop	r15
     20c:	08 95       	ret

0000020e <_Z23read_accelerometer_dataPi>:
     20e:	0f 93       	push	r16
     210:	1f 93       	push	r17
     212:	cf 93       	push	r28
     214:	df 93       	push	r29
     216:	cd b7       	in	r28, 0x3d	; 61
     218:	de b7       	in	r29, 0x3e	; 62
     21a:	2a 97       	sbiw	r28, 0x0a	; 10
     21c:	0f b6       	in	r0, 0x3f	; 63
     21e:	f8 94       	cli
     220:	de bf       	out	0x3e, r29	; 62
     222:	0f be       	out	0x3f, r0	; 63
     224:	cd bf       	out	0x3d, r28	; 61
     226:	8c 01       	movw	r16, r24
     228:	80 ed       	ldi	r24, 0xD0	; 208
     22a:	89 83       	std	Y+1, r24	; 0x01
     22c:	8b e3       	ldi	r24, 0x3B	; 59
     22e:	8a 83       	std	Y+2, r24	; 0x02
     230:	81 ed       	ldi	r24, 0xD1	; 209
     232:	8c 83       	std	Y+4, r24	; 0x04
     234:	62 e0       	ldi	r22, 0x02	; 2
     236:	ce 01       	movw	r24, r28
     238:	01 96       	adiw	r24, 0x01	; 1
     23a:	0e 94 7d 09 	call	0x12fa	; 0x12fa <TWI_Start_Transceiver_With_Data>
     23e:	67 e0       	ldi	r22, 0x07	; 7
     240:	ce 01       	movw	r24, r28
     242:	04 96       	adiw	r24, 0x04	; 4
     244:	0e 94 7d 09 	call	0x12fa	; 0x12fa <TWI_Start_Transceiver_With_Data>
     248:	67 e0       	ldi	r22, 0x07	; 7
     24a:	ce 01       	movw	r24, r28
     24c:	04 96       	adiw	r24, 0x04	; 4
     24e:	0e 94 aa 09 	call	0x1354	; 0x1354 <TWI_Get_Data_From_Transceiver>
     252:	8d 81       	ldd	r24, Y+5	; 0x05
     254:	90 e0       	ldi	r25, 0x00	; 0
     256:	98 2f       	mov	r25, r24
     258:	88 27       	eor	r24, r24
     25a:	2e 81       	ldd	r18, Y+6	; 0x06
     25c:	82 2b       	or	r24, r18
     25e:	f8 01       	movw	r30, r16
     260:	91 83       	std	Z+1, r25	; 0x01
     262:	80 83       	st	Z, r24
     264:	8f 81       	ldd	r24, Y+7	; 0x07
     266:	90 e0       	ldi	r25, 0x00	; 0
     268:	98 2f       	mov	r25, r24
     26a:	88 27       	eor	r24, r24
     26c:	28 85       	ldd	r18, Y+8	; 0x08
     26e:	82 2b       	or	r24, r18
     270:	93 83       	std	Z+3, r25	; 0x03
     272:	82 83       	std	Z+2, r24	; 0x02
     274:	89 85       	ldd	r24, Y+9	; 0x09
     276:	90 e0       	ldi	r25, 0x00	; 0
     278:	98 2f       	mov	r25, r24
     27a:	88 27       	eor	r24, r24
     27c:	2a 85       	ldd	r18, Y+10	; 0x0a
     27e:	82 2b       	or	r24, r18
     280:	95 83       	std	Z+5, r25	; 0x05
     282:	84 83       	std	Z+4, r24	; 0x04
     284:	80 e0       	ldi	r24, 0x00	; 0
     286:	2a 96       	adiw	r28, 0x0a	; 10
     288:	0f b6       	in	r0, 0x3f	; 63
     28a:	f8 94       	cli
     28c:	de bf       	out	0x3e, r29	; 62
     28e:	0f be       	out	0x3f, r0	; 63
     290:	cd bf       	out	0x3d, r28	; 61
     292:	df 91       	pop	r29
     294:	cf 91       	pop	r28
     296:	1f 91       	pop	r17
     298:	0f 91       	pop	r16
     29a:	08 95       	ret

0000029c <_Z20set_accelerometer_4gv>:
     29c:	cf 93       	push	r28
     29e:	df 93       	push	r29
     2a0:	00 d0       	rcall	.+0      	; 0x2a2 <_Z20set_accelerometer_4gv+0x6>
     2a2:	1f 92       	push	r1
     2a4:	cd b7       	in	r28, 0x3d	; 61
     2a6:	de b7       	in	r29, 0x3e	; 62
     2a8:	80 ed       	ldi	r24, 0xD0	; 208
     2aa:	89 83       	std	Y+1, r24	; 0x01
     2ac:	8c e1       	ldi	r24, 0x1C	; 28
     2ae:	8a 83       	std	Y+2, r24	; 0x02
     2b0:	88 e0       	ldi	r24, 0x08	; 8
     2b2:	8b 83       	std	Y+3, r24	; 0x03
     2b4:	63 e0       	ldi	r22, 0x03	; 3
     2b6:	ce 01       	movw	r24, r28
     2b8:	01 96       	adiw	r24, 0x01	; 1
     2ba:	0e 94 7d 09 	call	0x12fa	; 0x12fa <TWI_Start_Transceiver_With_Data>
     2be:	80 e0       	ldi	r24, 0x00	; 0
     2c0:	0f 90       	pop	r0
     2c2:	0f 90       	pop	r0
     2c4:	0f 90       	pop	r0
     2c6:	df 91       	pop	r29
     2c8:	cf 91       	pop	r28
     2ca:	08 95       	ret

000002cc <_Z15read_accel_biasPi>:
     2cc:	ef 92       	push	r14
     2ce:	ff 92       	push	r15
     2d0:	0f 93       	push	r16
     2d2:	1f 93       	push	r17
     2d4:	cf 93       	push	r28
     2d6:	df 93       	push	r29
     2d8:	cd b7       	in	r28, 0x3d	; 61
     2da:	de b7       	in	r29, 0x3e	; 62
     2dc:	27 97       	sbiw	r28, 0x07	; 7
     2de:	0f b6       	in	r0, 0x3f	; 63
     2e0:	f8 94       	cli
     2e2:	de bf       	out	0x3e, r29	; 62
     2e4:	0f be       	out	0x3f, r0	; 63
     2e6:	cd bf       	out	0x3d, r28	; 61
     2e8:	8c 01       	movw	r16, r24
     2ea:	80 ed       	ldi	r24, 0xD0	; 208
     2ec:	89 83       	std	Y+1, r24	; 0x01
     2ee:	87 e7       	ldi	r24, 0x77	; 119
     2f0:	8a 83       	std	Y+2, r24	; 0x02
     2f2:	62 e0       	ldi	r22, 0x02	; 2
     2f4:	ce 01       	movw	r24, r28
     2f6:	01 96       	adiw	r24, 0x01	; 1
     2f8:	7c 01       	movw	r14, r24
     2fa:	0e 94 7d 09 	call	0x12fa	; 0x12fa <TWI_Start_Transceiver_With_Data>
     2fe:	87 e0       	ldi	r24, 0x07	; 7
     300:	f7 01       	movw	r30, r14
     302:	11 92       	st	Z+, r1
     304:	8a 95       	dec	r24
     306:	e9 f7       	brne	.-6      	; 0x302 <_Z15read_accel_biasPi+0x36>
     308:	81 ed       	ldi	r24, 0xD1	; 209
     30a:	89 83       	std	Y+1, r24	; 0x01
     30c:	67 e0       	ldi	r22, 0x07	; 7
     30e:	c7 01       	movw	r24, r14
     310:	0e 94 7d 09 	call	0x12fa	; 0x12fa <TWI_Start_Transceiver_With_Data>
     314:	67 e0       	ldi	r22, 0x07	; 7
     316:	c7 01       	movw	r24, r14
     318:	0e 94 aa 09 	call	0x1354	; 0x1354 <TWI_Get_Data_From_Transceiver>
     31c:	8a 81       	ldd	r24, Y+2	; 0x02
     31e:	90 e0       	ldi	r25, 0x00	; 0
     320:	98 2f       	mov	r25, r24
     322:	88 27       	eor	r24, r24
     324:	2b 81       	ldd	r18, Y+3	; 0x03
     326:	82 2b       	or	r24, r18
     328:	f8 01       	movw	r30, r16
     32a:	91 83       	std	Z+1, r25	; 0x01
     32c:	80 83       	st	Z, r24
     32e:	8c 81       	ldd	r24, Y+4	; 0x04
     330:	90 e0       	ldi	r25, 0x00	; 0
     332:	98 2f       	mov	r25, r24
     334:	88 27       	eor	r24, r24
     336:	2d 81       	ldd	r18, Y+5	; 0x05
     338:	82 2b       	or	r24, r18
     33a:	93 83       	std	Z+3, r25	; 0x03
     33c:	82 83       	std	Z+2, r24	; 0x02
     33e:	8e 81       	ldd	r24, Y+6	; 0x06
     340:	90 e0       	ldi	r25, 0x00	; 0
     342:	98 2f       	mov	r25, r24
     344:	88 27       	eor	r24, r24
     346:	2f 81       	ldd	r18, Y+7	; 0x07
     348:	82 2b       	or	r24, r18
     34a:	95 83       	std	Z+5, r25	; 0x05
     34c:	84 83       	std	Z+4, r24	; 0x04
     34e:	80 e0       	ldi	r24, 0x00	; 0
     350:	27 96       	adiw	r28, 0x07	; 7
     352:	0f b6       	in	r0, 0x3f	; 63
     354:	f8 94       	cli
     356:	de bf       	out	0x3e, r29	; 62
     358:	0f be       	out	0x3f, r0	; 63
     35a:	cd bf       	out	0x3d, r28	; 61
     35c:	df 91       	pop	r29
     35e:	cf 91       	pop	r28
     360:	1f 91       	pop	r17
     362:	0f 91       	pop	r16
     364:	ff 90       	pop	r15
     366:	ef 90       	pop	r14
     368:	08 95       	ret

0000036a <_Z14set_accel_biasPi>:
     36a:	0f 93       	push	r16
     36c:	1f 93       	push	r17
     36e:	cf 93       	push	r28
     370:	df 93       	push	r29
     372:	cd b7       	in	r28, 0x3d	; 61
     374:	de b7       	in	r29, 0x3e	; 62
     376:	61 97       	sbiw	r28, 0x11	; 17
     378:	0f b6       	in	r0, 0x3f	; 63
     37a:	f8 94       	cli
     37c:	de bf       	out	0x3e, r29	; 62
     37e:	0f be       	out	0x3f, r0	; 63
     380:	cd bf       	out	0x3d, r28	; 61
     382:	8c 01       	movw	r16, r24
     384:	ce 01       	movw	r24, r28
     386:	01 96       	adiw	r24, 0x01	; 1
     388:	0e 94 66 01 	call	0x2cc	; 0x2cc <_Z15read_accel_biasPi>
     38c:	81 11       	cpse	r24, r1
     38e:	3e c0       	rjmp	.+124    	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
     390:	fe 01       	movw	r30, r28
     392:	31 96       	adiw	r30, 0x01	; 1
     394:	de 01       	movw	r26, r28
     396:	17 96       	adiw	r26, 0x07	; 7
     398:	9d 01       	movw	r18, r26
     39a:	41 e0       	ldi	r20, 0x01	; 1
     39c:	81 91       	ld	r24, Z+
     39e:	91 91       	ld	r25, Z+
     3a0:	80 fd       	sbrc	r24, 0
     3a2:	4c 93       	st	X, r20
     3a4:	11 96       	adiw	r26, 0x01	; 1
     3a6:	e2 17       	cp	r30, r18
     3a8:	f3 07       	cpc	r31, r19
     3aa:	c1 f7       	brne	.-16     	; 0x39c <_Z14set_accel_biasPi+0x32>
     3ac:	49 81       	ldd	r20, Y+1	; 0x01
     3ae:	5a 81       	ldd	r21, Y+2	; 0x02
     3b0:	f8 01       	movw	r30, r16
     3b2:	80 81       	ld	r24, Z
     3b4:	91 81       	ldd	r25, Z+1	; 0x01
     3b6:	48 1b       	sub	r20, r24
     3b8:	59 0b       	sbc	r21, r25
     3ba:	5a 83       	std	Y+2, r21	; 0x02
     3bc:	49 83       	std	Y+1, r20	; 0x01
     3be:	2b 81       	ldd	r18, Y+3	; 0x03
     3c0:	3c 81       	ldd	r19, Y+4	; 0x04
     3c2:	82 81       	ldd	r24, Z+2	; 0x02
     3c4:	93 81       	ldd	r25, Z+3	; 0x03
     3c6:	28 1b       	sub	r18, r24
     3c8:	39 0b       	sbc	r19, r25
     3ca:	3c 83       	std	Y+4, r19	; 0x04
     3cc:	2b 83       	std	Y+3, r18	; 0x03
     3ce:	8d 81       	ldd	r24, Y+5	; 0x05
     3d0:	9e 81       	ldd	r25, Y+6	; 0x06
     3d2:	64 81       	ldd	r22, Z+4	; 0x04
     3d4:	75 81       	ldd	r23, Z+5	; 0x05
     3d6:	86 1b       	sub	r24, r22
     3d8:	97 0b       	sbc	r25, r23
     3da:	9e 83       	std	Y+6, r25	; 0x06
     3dc:	8d 83       	std	Y+5, r24	; 0x05
     3de:	6f 81       	ldd	r22, Y+7	; 0x07
     3e0:	64 2b       	or	r22, r20
     3e2:	48 85       	ldd	r20, Y+8	; 0x08
     3e4:	42 2b       	or	r20, r18
     3e6:	29 85       	ldd	r18, Y+9	; 0x09
     3e8:	82 2b       	or	r24, r18
     3ea:	20 ed       	ldi	r18, 0xD0	; 208
     3ec:	2a 87       	std	Y+10, r18	; 0x0a
     3ee:	27 e7       	ldi	r18, 0x77	; 119
     3f0:	2b 87       	std	Y+11, r18	; 0x0b
     3f2:	5c 87       	std	Y+12, r21	; 0x0c
     3f4:	6d 87       	std	Y+13, r22	; 0x0d
     3f6:	3e 87       	std	Y+14, r19	; 0x0e
     3f8:	4f 87       	std	Y+15, r20	; 0x0f
     3fa:	98 8b       	std	Y+16, r25	; 0x10
     3fc:	89 8b       	std	Y+17, r24	; 0x11
     3fe:	68 e0       	ldi	r22, 0x08	; 8
     400:	ce 01       	movw	r24, r28
     402:	0a 96       	adiw	r24, 0x0a	; 10
     404:	0e 94 7d 09 	call	0x12fa	; 0x12fa <TWI_Start_Transceiver_With_Data>
     408:	80 e0       	ldi	r24, 0x00	; 0
     40a:	01 c0       	rjmp	.+2      	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
     40c:	8f ef       	ldi	r24, 0xFF	; 255
     40e:	61 96       	adiw	r28, 0x11	; 17
     410:	0f b6       	in	r0, 0x3f	; 63
     412:	f8 94       	cli
     414:	de bf       	out	0x3e, r29	; 62
     416:	0f be       	out	0x3f, r0	; 63
     418:	cd bf       	out	0x3d, r28	; 61
     41a:	df 91       	pop	r29
     41c:	cf 91       	pop	r28
     41e:	1f 91       	pop	r17
     420:	0f 91       	pop	r16
     422:	08 95       	ret

00000424 <_Z23calibrate_accelerometerv>:
     424:	2f 92       	push	r2
     426:	3f 92       	push	r3
     428:	4f 92       	push	r4
     42a:	5f 92       	push	r5
     42c:	6f 92       	push	r6
     42e:	7f 92       	push	r7
     430:	8f 92       	push	r8
     432:	9f 92       	push	r9
     434:	af 92       	push	r10
     436:	bf 92       	push	r11
     438:	cf 92       	push	r12
     43a:	df 92       	push	r13
     43c:	ef 92       	push	r14
     43e:	ff 92       	push	r15
     440:	0f 93       	push	r16
     442:	1f 93       	push	r17
     444:	cf 93       	push	r28
     446:	df 93       	push	r29
     448:	cd b7       	in	r28, 0x3d	; 61
     44a:	de b7       	in	r29, 0x3e	; 62
     44c:	2f 97       	sbiw	r28, 0x0f	; 15
     44e:	0f b6       	in	r0, 0x3f	; 63
     450:	f8 94       	cli
     452:	de bf       	out	0x3e, r29	; 62
     454:	0f be       	out	0x3f, r0	; 63
     456:	cd bf       	out	0x3d, r28	; 61
     458:	80 ed       	ldi	r24, 0xD0	; 208
     45a:	89 83       	std	Y+1, r24	; 0x01
     45c:	8c e1       	ldi	r24, 0x1C	; 28
     45e:	8a 83       	std	Y+2, r24	; 0x02
     460:	88 e1       	ldi	r24, 0x18	; 24
     462:	8b 83       	std	Y+3, r24	; 0x03
     464:	63 e0       	ldi	r22, 0x03	; 3
     466:	ce 01       	movw	r24, r28
     468:	01 96       	adiw	r24, 0x01	; 1
     46a:	0e 94 7d 09 	call	0x12fa	; 0x12fa <TWI_Start_Transceiver_With_Data>
     46e:	00 e0       	ldi	r16, 0x00	; 0
     470:	14 e0       	ldi	r17, 0x04	; 4
     472:	ce 01       	movw	r24, r28
     474:	04 96       	adiw	r24, 0x04	; 4
     476:	0e 94 07 01 	call	0x20e	; 0x20e <_Z23read_accelerometer_dataPi>
     47a:	8c 81       	ldd	r24, Y+4	; 0x04
     47c:	9d 81       	ldd	r25, Y+5	; 0x05
     47e:	09 2e       	mov	r0, r25
     480:	00 0c       	add	r0, r0
     482:	aa 0b       	sbc	r26, r26
     484:	bb 0b       	sbc	r27, r27
     486:	c8 0e       	add	r12, r24
     488:	d9 1e       	adc	r13, r25
     48a:	ea 1e       	adc	r14, r26
     48c:	fb 1e       	adc	r15, r27
     48e:	8e 81       	ldd	r24, Y+6	; 0x06
     490:	9f 81       	ldd	r25, Y+7	; 0x07
     492:	09 2e       	mov	r0, r25
     494:	00 0c       	add	r0, r0
     496:	aa 0b       	sbc	r26, r26
     498:	bb 0b       	sbc	r27, r27
     49a:	48 0e       	add	r4, r24
     49c:	59 1e       	adc	r5, r25
     49e:	6a 1e       	adc	r6, r26
     4a0:	7b 1e       	adc	r7, r27
     4a2:	88 85       	ldd	r24, Y+8	; 0x08
     4a4:	99 85       	ldd	r25, Y+9	; 0x09
     4a6:	09 2e       	mov	r0, r25
     4a8:	00 0c       	add	r0, r0
     4aa:	aa 0b       	sbc	r26, r26
     4ac:	bb 0b       	sbc	r27, r27
     4ae:	88 0e       	add	r8, r24
     4b0:	99 1e       	adc	r9, r25
     4b2:	aa 1e       	adc	r10, r26
     4b4:	bb 1e       	adc	r11, r27
     4b6:	8f ec       	ldi	r24, 0xCF	; 207
     4b8:	97 e0       	ldi	r25, 0x07	; 7
     4ba:	01 97       	sbiw	r24, 0x01	; 1
     4bc:	f1 f7       	brne	.-4      	; 0x4ba <_Z23calibrate_accelerometerv+0x96>
     4be:	00 c0       	rjmp	.+0      	; 0x4c0 <_Z23calibrate_accelerometerv+0x9c>
     4c0:	00 00       	nop
     4c2:	01 50       	subi	r16, 0x01	; 1
     4c4:	11 09       	sbc	r17, r1
     4c6:	a9 f6       	brne	.-86     	; 0x472 <_Z23calibrate_accelerometerv+0x4e>
     4c8:	df 92       	push	r13
     4ca:	cf 92       	push	r12
     4cc:	8d e0       	ldi	r24, 0x0D	; 13
     4ce:	91 e0       	ldi	r25, 0x01	; 1
     4d0:	9f 93       	push	r25
     4d2:	8f 93       	push	r24
     4d4:	0a e6       	ldi	r16, 0x6A	; 106
     4d6:	12 e0       	ldi	r17, 0x02	; 2
     4d8:	1f 93       	push	r17
     4da:	0f 93       	push	r16
     4dc:	0e 94 8b 0d 	call	0x1b16	; 0x1b16 <sprintf>
     4e0:	f8 01       	movw	r30, r16
     4e2:	01 90       	ld	r0, Z+
     4e4:	00 20       	and	r0, r0
     4e6:	e9 f7       	brne	.-6      	; 0x4e2 <_Z23calibrate_accelerometerv+0xbe>
     4e8:	31 97       	sbiw	r30, 0x01	; 1
     4ea:	af 01       	movw	r20, r30
     4ec:	4a 56       	subi	r20, 0x6A	; 106
     4ee:	52 40       	sbci	r21, 0x02	; 2
     4f0:	60 e0       	ldi	r22, 0x00	; 0
     4f2:	70 e0       	ldi	r23, 0x00	; 0
     4f4:	c8 01       	movw	r24, r16
     4f6:	0e 94 60 0a 	call	0x14c0	; 0x14c0 <UART_tx>
     4fa:	0f 2e       	mov	r0, r31
     4fc:	f2 e3       	ldi	r31, 0x32	; 50
     4fe:	3f 2e       	mov	r3, r31
     500:	f0 2d       	mov	r31, r0
     502:	f8 01       	movw	r30, r16
     504:	23 2d       	mov	r18, r3
     506:	11 92       	st	Z+, r1
     508:	2a 95       	dec	r18
     50a:	e9 f7       	brne	.-6      	; 0x506 <_Z23calibrate_accelerometerv+0xe2>
     50c:	5f 92       	push	r5
     50e:	4f 92       	push	r4
     510:	8a e1       	ldi	r24, 0x1A	; 26
     512:	91 e0       	ldi	r25, 0x01	; 1
     514:	9f 93       	push	r25
     516:	8f 93       	push	r24
     518:	1f 93       	push	r17
     51a:	0f 93       	push	r16
     51c:	0e 94 8b 0d 	call	0x1b16	; 0x1b16 <sprintf>
     520:	f8 01       	movw	r30, r16
     522:	01 90       	ld	r0, Z+
     524:	00 20       	and	r0, r0
     526:	e9 f7       	brne	.-6      	; 0x522 <_Z23calibrate_accelerometerv+0xfe>
     528:	31 97       	sbiw	r30, 0x01	; 1
     52a:	af 01       	movw	r20, r30
     52c:	4a 56       	subi	r20, 0x6A	; 106
     52e:	52 40       	sbci	r21, 0x02	; 2
     530:	60 e0       	ldi	r22, 0x00	; 0
     532:	70 e0       	ldi	r23, 0x00	; 0
     534:	c8 01       	movw	r24, r16
     536:	0e 94 60 0a 	call	0x14c0	; 0x14c0 <UART_tx>
     53a:	f8 01       	movw	r30, r16
     53c:	23 2d       	mov	r18, r3
     53e:	11 92       	st	Z+, r1
     540:	2a 95       	dec	r18
     542:	e9 f7       	brne	.-6      	; 0x53e <_Z23calibrate_accelerometerv+0x11a>
     544:	9f 92       	push	r9
     546:	8f 92       	push	r8
     548:	87 e2       	ldi	r24, 0x27	; 39
     54a:	91 e0       	ldi	r25, 0x01	; 1
     54c:	9f 93       	push	r25
     54e:	8f 93       	push	r24
     550:	1f 93       	push	r17
     552:	0f 93       	push	r16
     554:	0e 94 8b 0d 	call	0x1b16	; 0x1b16 <sprintf>
     558:	f8 01       	movw	r30, r16
     55a:	01 90       	ld	r0, Z+
     55c:	00 20       	and	r0, r0
     55e:	e9 f7       	brne	.-6      	; 0x55a <_Z23calibrate_accelerometerv+0x136>
     560:	31 97       	sbiw	r30, 0x01	; 1
     562:	af 01       	movw	r20, r30
     564:	4a 56       	subi	r20, 0x6A	; 106
     566:	52 40       	sbci	r21, 0x02	; 2
     568:	60 e0       	ldi	r22, 0x00	; 0
     56a:	70 e0       	ldi	r23, 0x00	; 0
     56c:	c8 01       	movw	r24, r16
     56e:	0e 94 60 0a 	call	0x14c0	; 0x14c0 <UART_tx>
     572:	f8 01       	movw	r30, r16
     574:	11 92       	st	Z+, r1
     576:	3a 94       	dec	r3
     578:	e9 f7       	brne	.-6      	; 0x574 <_Z23calibrate_accelerometerv+0x150>
     57a:	d7 01       	movw	r26, r14
     57c:	c6 01       	movw	r24, r12
     57e:	0f b6       	in	r0, 0x3f	; 63
     580:	f8 94       	cli
     582:	de bf       	out	0x3e, r29	; 62
     584:	0f be       	out	0x3f, r0	; 63
     586:	cd bf       	out	0x3d, r28	; 61
     588:	ff 20       	and	r15, r15
     58a:	24 f4       	brge	.+8      	; 0x594 <_Z23calibrate_accelerometerv+0x170>
     58c:	81 50       	subi	r24, 0x01	; 1
     58e:	9c 4f       	sbci	r25, 0xFC	; 252
     590:	af 4f       	sbci	r26, 0xFF	; 255
     592:	bf 4f       	sbci	r27, 0xFF	; 255
     594:	6c 01       	movw	r12, r24
     596:	7d 01       	movw	r14, r26
     598:	0b 2e       	mov	r0, r27
     59a:	ba e0       	ldi	r27, 0x0A	; 10
     59c:	f5 94       	asr	r15
     59e:	e7 94       	ror	r14
     5a0:	d7 94       	ror	r13
     5a2:	c7 94       	ror	r12
     5a4:	ba 95       	dec	r27
     5a6:	d1 f7       	brne	.-12     	; 0x59c <_Z23calibrate_accelerometerv+0x178>
     5a8:	b0 2d       	mov	r27, r0
     5aa:	df 92       	push	r13
     5ac:	cf 92       	push	r12
     5ae:	84 e3       	ldi	r24, 0x34	; 52
     5b0:	91 e0       	ldi	r25, 0x01	; 1
     5b2:	9f 93       	push	r25
     5b4:	8f 93       	push	r24
     5b6:	0a e6       	ldi	r16, 0x6A	; 106
     5b8:	12 e0       	ldi	r17, 0x02	; 2
     5ba:	1f 93       	push	r17
     5bc:	0f 93       	push	r16
     5be:	0e 94 8b 0d 	call	0x1b16	; 0x1b16 <sprintf>
     5c2:	f8 01       	movw	r30, r16
     5c4:	01 90       	ld	r0, Z+
     5c6:	00 20       	and	r0, r0
     5c8:	e9 f7       	brne	.-6      	; 0x5c4 <_Z23calibrate_accelerometerv+0x1a0>
     5ca:	31 97       	sbiw	r30, 0x01	; 1
     5cc:	af 01       	movw	r20, r30
     5ce:	4a 56       	subi	r20, 0x6A	; 106
     5d0:	52 40       	sbci	r21, 0x02	; 2
     5d2:	60 e0       	ldi	r22, 0x00	; 0
     5d4:	70 e0       	ldi	r23, 0x00	; 0
     5d6:	c8 01       	movw	r24, r16
     5d8:	0e 94 60 0a 	call	0x14c0	; 0x14c0 <UART_tx>
     5dc:	82 e3       	ldi	r24, 0x32	; 50
     5de:	f8 01       	movw	r30, r16
     5e0:	11 92       	st	Z+, r1
     5e2:	8a 95       	dec	r24
     5e4:	e9 f7       	brne	.-6      	; 0x5e0 <_Z23calibrate_accelerometerv+0x1bc>
     5e6:	d3 01       	movw	r26, r6
     5e8:	c2 01       	movw	r24, r4
     5ea:	0f 90       	pop	r0
     5ec:	0f 90       	pop	r0
     5ee:	0f 90       	pop	r0
     5f0:	0f 90       	pop	r0
     5f2:	0f 90       	pop	r0
     5f4:	0f 90       	pop	r0
     5f6:	77 20       	and	r7, r7
     5f8:	24 f4       	brge	.+8      	; 0x602 <_Z23calibrate_accelerometerv+0x1de>
     5fa:	81 50       	subi	r24, 0x01	; 1
     5fc:	9c 4f       	sbci	r25, 0xFC	; 252
     5fe:	af 4f       	sbci	r26, 0xFF	; 255
     600:	bf 4f       	sbci	r27, 0xFF	; 255
     602:	2c 01       	movw	r4, r24
     604:	3d 01       	movw	r6, r26
     606:	03 2e       	mov	r0, r19
     608:	3a e0       	ldi	r19, 0x0A	; 10
     60a:	75 94       	asr	r7
     60c:	67 94       	ror	r6
     60e:	57 94       	ror	r5
     610:	47 94       	ror	r4
     612:	3a 95       	dec	r19
     614:	d1 f7       	brne	.-12     	; 0x60a <_Z23calibrate_accelerometerv+0x1e6>
     616:	30 2d       	mov	r19, r0
     618:	5f 92       	push	r5
     61a:	4f 92       	push	r4
     61c:	81 e4       	ldi	r24, 0x41	; 65
     61e:	91 e0       	ldi	r25, 0x01	; 1
     620:	9f 93       	push	r25
     622:	8f 93       	push	r24
     624:	0a e6       	ldi	r16, 0x6A	; 106
     626:	12 e0       	ldi	r17, 0x02	; 2
     628:	1f 93       	push	r17
     62a:	0f 93       	push	r16
     62c:	0e 94 8b 0d 	call	0x1b16	; 0x1b16 <sprintf>
     630:	f8 01       	movw	r30, r16
     632:	01 90       	ld	r0, Z+
     634:	00 20       	and	r0, r0
     636:	e9 f7       	brne	.-6      	; 0x632 <_Z23calibrate_accelerometerv+0x20e>
     638:	31 97       	sbiw	r30, 0x01	; 1
     63a:	af 01       	movw	r20, r30
     63c:	4a 56       	subi	r20, 0x6A	; 106
     63e:	52 40       	sbci	r21, 0x02	; 2
     640:	60 e0       	ldi	r22, 0x00	; 0
     642:	70 e0       	ldi	r23, 0x00	; 0
     644:	c8 01       	movw	r24, r16
     646:	0e 94 60 0a 	call	0x14c0	; 0x14c0 <UART_tx>
     64a:	82 e3       	ldi	r24, 0x32	; 50
     64c:	f8 01       	movw	r30, r16
     64e:	11 92       	st	Z+, r1
     650:	8a 95       	dec	r24
     652:	e9 f7       	brne	.-6      	; 0x64e <_Z23calibrate_accelerometerv+0x22a>
     654:	d5 01       	movw	r26, r10
     656:	c4 01       	movw	r24, r8
     658:	0f 90       	pop	r0
     65a:	0f 90       	pop	r0
     65c:	0f 90       	pop	r0
     65e:	0f 90       	pop	r0
     660:	0f 90       	pop	r0
     662:	0f 90       	pop	r0
     664:	bb 20       	and	r11, r11
     666:	24 f4       	brge	.+8      	; 0x670 <_Z23calibrate_accelerometerv+0x24c>
     668:	81 50       	subi	r24, 0x01	; 1
     66a:	9c 4f       	sbci	r25, 0xFC	; 252
     66c:	af 4f       	sbci	r26, 0xFF	; 255
     66e:	bf 4f       	sbci	r27, 0xFF	; 255
     670:	4c 01       	movw	r8, r24
     672:	5d 01       	movw	r10, r26
     674:	07 2e       	mov	r0, r23
     676:	7a e0       	ldi	r23, 0x0A	; 10
     678:	b5 94       	asr	r11
     67a:	a7 94       	ror	r10
     67c:	97 94       	ror	r9
     67e:	87 94       	ror	r8
     680:	7a 95       	dec	r23
     682:	d1 f7       	brne	.-12     	; 0x678 <_Z23calibrate_accelerometerv+0x254>
     684:	70 2d       	mov	r23, r0
     686:	9f 92       	push	r9
     688:	8f 92       	push	r8
     68a:	8e e4       	ldi	r24, 0x4E	; 78
     68c:	91 e0       	ldi	r25, 0x01	; 1
     68e:	9f 93       	push	r25
     690:	8f 93       	push	r24
     692:	0a e6       	ldi	r16, 0x6A	; 106
     694:	12 e0       	ldi	r17, 0x02	; 2
     696:	1f 93       	push	r17
     698:	0f 93       	push	r16
     69a:	0e 94 8b 0d 	call	0x1b16	; 0x1b16 <sprintf>
     69e:	f8 01       	movw	r30, r16
     6a0:	01 90       	ld	r0, Z+
     6a2:	00 20       	and	r0, r0
     6a4:	e9 f7       	brne	.-6      	; 0x6a0 <_Z23calibrate_accelerometerv+0x27c>
     6a6:	31 97       	sbiw	r30, 0x01	; 1
     6a8:	af 01       	movw	r20, r30
     6aa:	4a 56       	subi	r20, 0x6A	; 106
     6ac:	52 40       	sbci	r21, 0x02	; 2
     6ae:	60 e0       	ldi	r22, 0x00	; 0
     6b0:	70 e0       	ldi	r23, 0x00	; 0
     6b2:	c8 01       	movw	r24, r16
     6b4:	0e 94 60 0a 	call	0x14c0	; 0x14c0 <UART_tx>
     6b8:	82 e3       	ldi	r24, 0x32	; 50
     6ba:	f8 01       	movw	r30, r16
     6bc:	11 92       	st	Z+, r1
     6be:	8a 95       	dec	r24
     6c0:	e9 f7       	brne	.-6      	; 0x6bc <_Z23calibrate_accelerometerv+0x298>
     6c2:	ca 86       	std	Y+10, r12	; 0x0a
     6c4:	db 86       	std	Y+11, r13	; 0x0b
     6c6:	4c 86       	std	Y+12, r4	; 0x0c
     6c8:	5d 86       	std	Y+13, r5	; 0x0d
     6ca:	0f 90       	pop	r0
     6cc:	0f 90       	pop	r0
     6ce:	0f 90       	pop	r0
     6d0:	0f 90       	pop	r0
     6d2:	0f 90       	pop	r0
     6d4:	0f 90       	pop	r0
     6d6:	18 14       	cp	r1, r8
     6d8:	19 04       	cpc	r1, r9
     6da:	2c f4       	brge	.+10     	; 0x6e6 <_Z23calibrate_accelerometerv+0x2c2>
     6dc:	f8 e0       	ldi	r31, 0x08	; 8
     6de:	9f 1a       	sub	r9, r31
     6e0:	9f 86       	std	Y+15, r9	; 0x0f
     6e2:	8e 86       	std	Y+14, r8	; 0x0e
     6e4:	04 c0       	rjmp	.+8      	; 0x6ee <_Z23calibrate_accelerometerv+0x2ca>
     6e6:	28 ef       	ldi	r18, 0xF8	; 248
     6e8:	92 1a       	sub	r9, r18
     6ea:	9f 86       	std	Y+15, r9	; 0x0f
     6ec:	8e 86       	std	Y+14, r8	; 0x0e
     6ee:	df 92       	push	r13
     6f0:	cf 92       	push	r12
     6f2:	0f 2e       	mov	r0, r31
     6f4:	fb e5       	ldi	r31, 0x5B	; 91
     6f6:	cf 2e       	mov	r12, r31
     6f8:	f1 e0       	ldi	r31, 0x01	; 1
     6fa:	df 2e       	mov	r13, r31
     6fc:	f0 2d       	mov	r31, r0
     6fe:	df 92       	push	r13
     700:	cf 92       	push	r12
     702:	0a e6       	ldi	r16, 0x6A	; 106
     704:	12 e0       	ldi	r17, 0x02	; 2
     706:	1f 93       	push	r17
     708:	0f 93       	push	r16
     70a:	0e 94 8b 0d 	call	0x1b16	; 0x1b16 <sprintf>
     70e:	f8 01       	movw	r30, r16
     710:	01 90       	ld	r0, Z+
     712:	00 20       	and	r0, r0
     714:	e9 f7       	brne	.-6      	; 0x710 <_Z23calibrate_accelerometerv+0x2ec>
     716:	31 97       	sbiw	r30, 0x01	; 1
     718:	af 01       	movw	r20, r30
     71a:	4a 56       	subi	r20, 0x6A	; 106
     71c:	52 40       	sbci	r21, 0x02	; 2
     71e:	60 e0       	ldi	r22, 0x00	; 0
     720:	70 e0       	ldi	r23, 0x00	; 0
     722:	c8 01       	movw	r24, r16
     724:	0e 94 60 0a 	call	0x14c0	; 0x14c0 <UART_tx>
     728:	0f 2e       	mov	r0, r31
     72a:	f2 e3       	ldi	r31, 0x32	; 50
     72c:	ff 2e       	mov	r15, r31
     72e:	f0 2d       	mov	r31, r0
     730:	f8 01       	movw	r30, r16
     732:	2f 2d       	mov	r18, r15
     734:	11 92       	st	Z+, r1
     736:	2a 95       	dec	r18
     738:	e9 f7       	brne	.-6      	; 0x734 <_Z23calibrate_accelerometerv+0x310>
     73a:	8d 85       	ldd	r24, Y+13	; 0x0d
     73c:	8f 93       	push	r24
     73e:	8c 85       	ldd	r24, Y+12	; 0x0c
     740:	8f 93       	push	r24
     742:	df 92       	push	r13
     744:	cf 92       	push	r12
     746:	1f 93       	push	r17
     748:	0f 93       	push	r16
     74a:	0e 94 8b 0d 	call	0x1b16	; 0x1b16 <sprintf>
     74e:	f8 01       	movw	r30, r16
     750:	01 90       	ld	r0, Z+
     752:	00 20       	and	r0, r0
     754:	e9 f7       	brne	.-6      	; 0x750 <_Z23calibrate_accelerometerv+0x32c>
     756:	31 97       	sbiw	r30, 0x01	; 1
     758:	af 01       	movw	r20, r30
     75a:	4a 56       	subi	r20, 0x6A	; 106
     75c:	52 40       	sbci	r21, 0x02	; 2
     75e:	60 e0       	ldi	r22, 0x00	; 0
     760:	70 e0       	ldi	r23, 0x00	; 0
     762:	c8 01       	movw	r24, r16
     764:	0e 94 60 0a 	call	0x14c0	; 0x14c0 <UART_tx>
     768:	f8 01       	movw	r30, r16
     76a:	2f 2d       	mov	r18, r15
     76c:	11 92       	st	Z+, r1
     76e:	2a 95       	dec	r18
     770:	e9 f7       	brne	.-6      	; 0x76c <_Z23calibrate_accelerometerv+0x348>
     772:	8f 85       	ldd	r24, Y+15	; 0x0f
     774:	8f 93       	push	r24
     776:	8e 85       	ldd	r24, Y+14	; 0x0e
     778:	8f 93       	push	r24
     77a:	df 92       	push	r13
     77c:	cf 92       	push	r12
     77e:	1f 93       	push	r17
     780:	0f 93       	push	r16
     782:	0e 94 8b 0d 	call	0x1b16	; 0x1b16 <sprintf>
     786:	f8 01       	movw	r30, r16
     788:	01 90       	ld	r0, Z+
     78a:	00 20       	and	r0, r0
     78c:	e9 f7       	brne	.-6      	; 0x788 <_Z23calibrate_accelerometerv+0x364>
     78e:	31 97       	sbiw	r30, 0x01	; 1
     790:	af 01       	movw	r20, r30
     792:	4a 56       	subi	r20, 0x6A	; 106
     794:	52 40       	sbci	r21, 0x02	; 2
     796:	60 e0       	ldi	r22, 0x00	; 0
     798:	70 e0       	ldi	r23, 0x00	; 0
     79a:	c8 01       	movw	r24, r16
     79c:	0e 94 60 0a 	call	0x14c0	; 0x14c0 <UART_tx>
     7a0:	f8 01       	movw	r30, r16
     7a2:	11 92       	st	Z+, r1
     7a4:	fa 94       	dec	r15
     7a6:	e9 f7       	brne	.-6      	; 0x7a2 <_Z23calibrate_accelerometerv+0x37e>
     7a8:	ce 01       	movw	r24, r28
     7aa:	0a 96       	adiw	r24, 0x0a	; 10
     7ac:	0e 94 b5 01 	call	0x36a	; 0x36a <_Z14set_accel_biasPi>
     7b0:	0f b6       	in	r0, 0x3f	; 63
     7b2:	f8 94       	cli
     7b4:	de bf       	out	0x3e, r29	; 62
     7b6:	0f be       	out	0x3f, r0	; 63
     7b8:	cd bf       	out	0x3d, r28	; 61
     7ba:	80 e0       	ldi	r24, 0x00	; 0
     7bc:	2f 96       	adiw	r28, 0x0f	; 15
     7be:	0f b6       	in	r0, 0x3f	; 63
     7c0:	f8 94       	cli
     7c2:	de bf       	out	0x3e, r29	; 62
     7c4:	0f be       	out	0x3f, r0	; 63
     7c6:	cd bf       	out	0x3d, r28	; 61
     7c8:	df 91       	pop	r29
     7ca:	cf 91       	pop	r28
     7cc:	1f 91       	pop	r17
     7ce:	0f 91       	pop	r16
     7d0:	ff 90       	pop	r15
     7d2:	ef 90       	pop	r14
     7d4:	df 90       	pop	r13
     7d6:	cf 90       	pop	r12
     7d8:	bf 90       	pop	r11
     7da:	af 90       	pop	r10
     7dc:	9f 90       	pop	r9
     7de:	8f 90       	pop	r8
     7e0:	7f 90       	pop	r7
     7e2:	6f 90       	pop	r6
     7e4:	5f 90       	pop	r5
     7e6:	4f 90       	pop	r4
     7e8:	3f 90       	pop	r3
     7ea:	2f 90       	pop	r2
     7ec:	08 95       	ret

000007ee <_Z19read_gyroscope_dataPi>:
     7ee:	0f 93       	push	r16
     7f0:	1f 93       	push	r17
     7f2:	cf 93       	push	r28
     7f4:	df 93       	push	r29
     7f6:	cd b7       	in	r28, 0x3d	; 61
     7f8:	de b7       	in	r29, 0x3e	; 62
     7fa:	29 97       	sbiw	r28, 0x09	; 9
     7fc:	0f b6       	in	r0, 0x3f	; 63
     7fe:	f8 94       	cli
     800:	de bf       	out	0x3e, r29	; 62
     802:	0f be       	out	0x3f, r0	; 63
     804:	cd bf       	out	0x3d, r28	; 61
     806:	8c 01       	movw	r16, r24
     808:	80 ed       	ldi	r24, 0xD0	; 208
     80a:	89 83       	std	Y+1, r24	; 0x01
     80c:	83 e4       	ldi	r24, 0x43	; 67
     80e:	8a 83       	std	Y+2, r24	; 0x02
     810:	81 ed       	ldi	r24, 0xD1	; 209
     812:	8b 83       	std	Y+3, r24	; 0x03
     814:	62 e0       	ldi	r22, 0x02	; 2
     816:	ce 01       	movw	r24, r28
     818:	01 96       	adiw	r24, 0x01	; 1
     81a:	0e 94 7d 09 	call	0x12fa	; 0x12fa <TWI_Start_Transceiver_With_Data>
     81e:	67 e0       	ldi	r22, 0x07	; 7
     820:	ce 01       	movw	r24, r28
     822:	03 96       	adiw	r24, 0x03	; 3
     824:	0e 94 7d 09 	call	0x12fa	; 0x12fa <TWI_Start_Transceiver_With_Data>
     828:	67 e0       	ldi	r22, 0x07	; 7
     82a:	ce 01       	movw	r24, r28
     82c:	03 96       	adiw	r24, 0x03	; 3
     82e:	0e 94 aa 09 	call	0x1354	; 0x1354 <TWI_Get_Data_From_Transceiver>
     832:	8c 81       	ldd	r24, Y+4	; 0x04
     834:	90 e0       	ldi	r25, 0x00	; 0
     836:	98 2f       	mov	r25, r24
     838:	88 27       	eor	r24, r24
     83a:	2d 81       	ldd	r18, Y+5	; 0x05
     83c:	82 2b       	or	r24, r18
     83e:	f8 01       	movw	r30, r16
     840:	91 83       	std	Z+1, r25	; 0x01
     842:	80 83       	st	Z, r24
     844:	8e 81       	ldd	r24, Y+6	; 0x06
     846:	90 e0       	ldi	r25, 0x00	; 0
     848:	98 2f       	mov	r25, r24
     84a:	88 27       	eor	r24, r24
     84c:	2f 81       	ldd	r18, Y+7	; 0x07
     84e:	82 2b       	or	r24, r18
     850:	93 83       	std	Z+3, r25	; 0x03
     852:	82 83       	std	Z+2, r24	; 0x02
     854:	88 85       	ldd	r24, Y+8	; 0x08
     856:	90 e0       	ldi	r25, 0x00	; 0
     858:	98 2f       	mov	r25, r24
     85a:	88 27       	eor	r24, r24
     85c:	29 85       	ldd	r18, Y+9	; 0x09
     85e:	82 2b       	or	r24, r18
     860:	95 83       	std	Z+5, r25	; 0x05
     862:	84 83       	std	Z+4, r24	; 0x04
     864:	80 e0       	ldi	r24, 0x00	; 0
     866:	29 96       	adiw	r28, 0x09	; 9
     868:	0f b6       	in	r0, 0x3f	; 63
     86a:	f8 94       	cli
     86c:	de bf       	out	0x3e, r29	; 62
     86e:	0f be       	out	0x3f, r0	; 63
     870:	cd bf       	out	0x3d, r28	; 61
     872:	df 91       	pop	r29
     874:	cf 91       	pop	r28
     876:	1f 91       	pop	r17
     878:	0f 91       	pop	r16
     87a:	08 95       	ret

0000087c <_Z13set_gyro_biasPi>:
     87c:	cf 93       	push	r28
     87e:	df 93       	push	r29
     880:	cd b7       	in	r28, 0x3d	; 61
     882:	de b7       	in	r29, 0x3e	; 62
     884:	28 97       	sbiw	r28, 0x08	; 8
     886:	0f b6       	in	r0, 0x3f	; 63
     888:	f8 94       	cli
     88a:	de bf       	out	0x3e, r29	; 62
     88c:	0f be       	out	0x3f, r0	; 63
     88e:	cd bf       	out	0x3d, r28	; 61
     890:	fc 01       	movw	r30, r24
     892:	40 81       	ld	r20, Z
     894:	51 81       	ldd	r21, Z+1	; 0x01
     896:	51 95       	neg	r21
     898:	41 95       	neg	r20
     89a:	51 09       	sbc	r21, r1
     89c:	51 83       	std	Z+1, r21	; 0x01
     89e:	40 83       	st	Z, r20
     8a0:	22 81       	ldd	r18, Z+2	; 0x02
     8a2:	33 81       	ldd	r19, Z+3	; 0x03
     8a4:	31 95       	neg	r19
     8a6:	21 95       	neg	r18
     8a8:	31 09       	sbc	r19, r1
     8aa:	33 83       	std	Z+3, r19	; 0x03
     8ac:	22 83       	std	Z+2, r18	; 0x02
     8ae:	84 81       	ldd	r24, Z+4	; 0x04
     8b0:	95 81       	ldd	r25, Z+5	; 0x05
     8b2:	91 95       	neg	r25
     8b4:	81 95       	neg	r24
     8b6:	91 09       	sbc	r25, r1
     8b8:	95 83       	std	Z+5, r25	; 0x05
     8ba:	84 83       	std	Z+4, r24	; 0x04
     8bc:	51 81       	ldd	r21, Z+1	; 0x01
     8be:	33 81       	ldd	r19, Z+3	; 0x03
     8c0:	95 81       	ldd	r25, Z+5	; 0x05
     8c2:	60 ed       	ldi	r22, 0xD0	; 208
     8c4:	69 83       	std	Y+1, r22	; 0x01
     8c6:	63 e1       	ldi	r22, 0x13	; 19
     8c8:	6a 83       	std	Y+2, r22	; 0x02
     8ca:	5b 83       	std	Y+3, r21	; 0x03
     8cc:	4c 83       	std	Y+4, r20	; 0x04
     8ce:	3d 83       	std	Y+5, r19	; 0x05
     8d0:	2e 83       	std	Y+6, r18	; 0x06
     8d2:	9f 83       	std	Y+7, r25	; 0x07
     8d4:	88 87       	std	Y+8, r24	; 0x08
     8d6:	68 e0       	ldi	r22, 0x08	; 8
     8d8:	ce 01       	movw	r24, r28
     8da:	01 96       	adiw	r24, 0x01	; 1
     8dc:	0e 94 7d 09 	call	0x12fa	; 0x12fa <TWI_Start_Transceiver_With_Data>
     8e0:	80 e0       	ldi	r24, 0x00	; 0
     8e2:	28 96       	adiw	r28, 0x08	; 8
     8e4:	0f b6       	in	r0, 0x3f	; 63
     8e6:	f8 94       	cli
     8e8:	de bf       	out	0x3e, r29	; 62
     8ea:	0f be       	out	0x3f, r0	; 63
     8ec:	cd bf       	out	0x3d, r28	; 61
     8ee:	df 91       	pop	r29
     8f0:	cf 91       	pop	r28
     8f2:	08 95       	ret

000008f4 <_Z19calibrate_gyroscopev>:
     8f4:	3f 92       	push	r3
     8f6:	4f 92       	push	r4
     8f8:	5f 92       	push	r5
     8fa:	6f 92       	push	r6
     8fc:	7f 92       	push	r7
     8fe:	8f 92       	push	r8
     900:	9f 92       	push	r9
     902:	af 92       	push	r10
     904:	bf 92       	push	r11
     906:	cf 92       	push	r12
     908:	df 92       	push	r13
     90a:	ef 92       	push	r14
     90c:	ff 92       	push	r15
     90e:	0f 93       	push	r16
     910:	1f 93       	push	r17
     912:	cf 93       	push	r28
     914:	df 93       	push	r29
     916:	cd b7       	in	r28, 0x3d	; 61
     918:	de b7       	in	r29, 0x3e	; 62
     91a:	2f 97       	sbiw	r28, 0x0f	; 15
     91c:	0f b6       	in	r0, 0x3f	; 63
     91e:	f8 94       	cli
     920:	de bf       	out	0x3e, r29	; 62
     922:	0f be       	out	0x3f, r0	; 63
     924:	cd bf       	out	0x3d, r28	; 61
     926:	80 ed       	ldi	r24, 0xD0	; 208
     928:	89 83       	std	Y+1, r24	; 0x01
     92a:	8b e1       	ldi	r24, 0x1B	; 27
     92c:	8a 83       	std	Y+2, r24	; 0x02
     92e:	80 e1       	ldi	r24, 0x10	; 16
     930:	8b 83       	std	Y+3, r24	; 0x03
     932:	63 e0       	ldi	r22, 0x03	; 3
     934:	ce 01       	movw	r24, r28
     936:	01 96       	adiw	r24, 0x01	; 1
     938:	0e 94 7d 09 	call	0x12fa	; 0x12fa <TWI_Start_Transceiver_With_Data>
     93c:	00 e0       	ldi	r16, 0x00	; 0
     93e:	14 e0       	ldi	r17, 0x04	; 4
     940:	ce 01       	movw	r24, r28
     942:	04 96       	adiw	r24, 0x04	; 4
     944:	0e 94 f7 03 	call	0x7ee	; 0x7ee <_Z19read_gyroscope_dataPi>
     948:	8c 81       	ldd	r24, Y+4	; 0x04
     94a:	9d 81       	ldd	r25, Y+5	; 0x05
     94c:	09 2e       	mov	r0, r25
     94e:	00 0c       	add	r0, r0
     950:	aa 0b       	sbc	r26, r26
     952:	bb 0b       	sbc	r27, r27
     954:	48 0e       	add	r4, r24
     956:	59 1e       	adc	r5, r25
     958:	6a 1e       	adc	r6, r26
     95a:	7b 1e       	adc	r7, r27
     95c:	8e 81       	ldd	r24, Y+6	; 0x06
     95e:	9f 81       	ldd	r25, Y+7	; 0x07
     960:	09 2e       	mov	r0, r25
     962:	00 0c       	add	r0, r0
     964:	aa 0b       	sbc	r26, r26
     966:	bb 0b       	sbc	r27, r27
     968:	88 0e       	add	r8, r24
     96a:	99 1e       	adc	r9, r25
     96c:	aa 1e       	adc	r10, r26
     96e:	bb 1e       	adc	r11, r27
     970:	88 85       	ldd	r24, Y+8	; 0x08
     972:	99 85       	ldd	r25, Y+9	; 0x09
     974:	09 2e       	mov	r0, r25
     976:	00 0c       	add	r0, r0
     978:	aa 0b       	sbc	r26, r26
     97a:	bb 0b       	sbc	r27, r27
     97c:	c8 0e       	add	r12, r24
     97e:	d9 1e       	adc	r13, r25
     980:	ea 1e       	adc	r14, r26
     982:	fb 1e       	adc	r15, r27
     984:	89 ef       	ldi	r24, 0xF9	; 249
     986:	90 e0       	ldi	r25, 0x00	; 0
     988:	01 97       	sbiw	r24, 0x01	; 1
     98a:	f1 f7       	brne	.-4      	; 0x988 <__stack+0x89>
     98c:	00 c0       	rjmp	.+0      	; 0x98e <__stack+0x8f>
     98e:	00 00       	nop
     990:	01 50       	subi	r16, 0x01	; 1
     992:	11 09       	sbc	r17, r1
     994:	a9 f6       	brne	.-86     	; 0x940 <__stack+0x41>
     996:	7f 92       	push	r7
     998:	6f 92       	push	r6
     99a:	5f 92       	push	r5
     99c:	4f 92       	push	r4
     99e:	83 e7       	ldi	r24, 0x73	; 115
     9a0:	91 e0       	ldi	r25, 0x01	; 1
     9a2:	9f 93       	push	r25
     9a4:	8f 93       	push	r24
     9a6:	0a e6       	ldi	r16, 0x6A	; 106
     9a8:	12 e0       	ldi	r17, 0x02	; 2
     9aa:	1f 93       	push	r17
     9ac:	0f 93       	push	r16
     9ae:	0e 94 8b 0d 	call	0x1b16	; 0x1b16 <sprintf>
     9b2:	f8 01       	movw	r30, r16
     9b4:	01 90       	ld	r0, Z+
     9b6:	00 20       	and	r0, r0
     9b8:	e9 f7       	brne	.-6      	; 0x9b4 <__stack+0xb5>
     9ba:	31 97       	sbiw	r30, 0x01	; 1
     9bc:	af 01       	movw	r20, r30
     9be:	4a 56       	subi	r20, 0x6A	; 106
     9c0:	52 40       	sbci	r21, 0x02	; 2
     9c2:	60 e0       	ldi	r22, 0x00	; 0
     9c4:	70 e0       	ldi	r23, 0x00	; 0
     9c6:	c8 01       	movw	r24, r16
     9c8:	0e 94 60 0a 	call	0x14c0	; 0x14c0 <UART_tx>
     9cc:	0f 2e       	mov	r0, r31
     9ce:	f2 e3       	ldi	r31, 0x32	; 50
     9d0:	3f 2e       	mov	r3, r31
     9d2:	f0 2d       	mov	r31, r0
     9d4:	f8 01       	movw	r30, r16
     9d6:	23 2d       	mov	r18, r3
     9d8:	11 92       	st	Z+, r1
     9da:	2a 95       	dec	r18
     9dc:	e9 f7       	brne	.-6      	; 0x9d8 <__stack+0xd9>
     9de:	bf 92       	push	r11
     9e0:	af 92       	push	r10
     9e2:	9f 92       	push	r9
     9e4:	8f 92       	push	r8
     9e6:	80 e8       	ldi	r24, 0x80	; 128
     9e8:	91 e0       	ldi	r25, 0x01	; 1
     9ea:	9f 93       	push	r25
     9ec:	8f 93       	push	r24
     9ee:	1f 93       	push	r17
     9f0:	0f 93       	push	r16
     9f2:	0e 94 8b 0d 	call	0x1b16	; 0x1b16 <sprintf>
     9f6:	f8 01       	movw	r30, r16
     9f8:	01 90       	ld	r0, Z+
     9fa:	00 20       	and	r0, r0
     9fc:	e9 f7       	brne	.-6      	; 0x9f8 <__stack+0xf9>
     9fe:	31 97       	sbiw	r30, 0x01	; 1
     a00:	af 01       	movw	r20, r30
     a02:	4a 56       	subi	r20, 0x6A	; 106
     a04:	52 40       	sbci	r21, 0x02	; 2
     a06:	60 e0       	ldi	r22, 0x00	; 0
     a08:	70 e0       	ldi	r23, 0x00	; 0
     a0a:	c8 01       	movw	r24, r16
     a0c:	0e 94 60 0a 	call	0x14c0	; 0x14c0 <UART_tx>
     a10:	f8 01       	movw	r30, r16
     a12:	23 2d       	mov	r18, r3
     a14:	11 92       	st	Z+, r1
     a16:	2a 95       	dec	r18
     a18:	e9 f7       	brne	.-6      	; 0xa14 <__stack+0x115>
     a1a:	ff 92       	push	r15
     a1c:	ef 92       	push	r14
     a1e:	df 92       	push	r13
     a20:	cf 92       	push	r12
     a22:	8d e8       	ldi	r24, 0x8D	; 141
     a24:	91 e0       	ldi	r25, 0x01	; 1
     a26:	9f 93       	push	r25
     a28:	8f 93       	push	r24
     a2a:	1f 93       	push	r17
     a2c:	0f 93       	push	r16
     a2e:	0e 94 8b 0d 	call	0x1b16	; 0x1b16 <sprintf>
     a32:	f8 01       	movw	r30, r16
     a34:	01 90       	ld	r0, Z+
     a36:	00 20       	and	r0, r0
     a38:	e9 f7       	brne	.-6      	; 0xa34 <__stack+0x135>
     a3a:	31 97       	sbiw	r30, 0x01	; 1
     a3c:	af 01       	movw	r20, r30
     a3e:	4a 56       	subi	r20, 0x6A	; 106
     a40:	52 40       	sbci	r21, 0x02	; 2
     a42:	60 e0       	ldi	r22, 0x00	; 0
     a44:	70 e0       	ldi	r23, 0x00	; 0
     a46:	c8 01       	movw	r24, r16
     a48:	0e 94 60 0a 	call	0x14c0	; 0x14c0 <UART_tx>
     a4c:	f8 01       	movw	r30, r16
     a4e:	11 92       	st	Z+, r1
     a50:	3a 94       	dec	r3
     a52:	e9 f7       	brne	.-6      	; 0xa4e <__stack+0x14f>
     a54:	d3 01       	movw	r26, r6
     a56:	c2 01       	movw	r24, r4
     a58:	0f b6       	in	r0, 0x3f	; 63
     a5a:	f8 94       	cli
     a5c:	de bf       	out	0x3e, r29	; 62
     a5e:	0f be       	out	0x3f, r0	; 63
     a60:	cd bf       	out	0x3d, r28	; 61
     a62:	77 20       	and	r7, r7
     a64:	24 f4       	brge	.+8      	; 0xa6e <__stack+0x16f>
     a66:	81 50       	subi	r24, 0x01	; 1
     a68:	9c 4f       	sbci	r25, 0xFC	; 252
     a6a:	af 4f       	sbci	r26, 0xFF	; 255
     a6c:	bf 4f       	sbci	r27, 0xFF	; 255
     a6e:	07 2e       	mov	r0, r23
     a70:	7a e0       	ldi	r23, 0x0A	; 10
     a72:	b5 95       	asr	r27
     a74:	a7 95       	ror	r26
     a76:	97 95       	ror	r25
     a78:	87 95       	ror	r24
     a7a:	7a 95       	dec	r23
     a7c:	d1 f7       	brne	.-12     	; 0xa72 <__stack+0x173>
     a7e:	70 2d       	mov	r23, r0
     a80:	8a 87       	std	Y+10, r24	; 0x0a
     a82:	9b 87       	std	Y+11, r25	; 0x0b
     a84:	b5 01       	movw	r22, r10
     a86:	a4 01       	movw	r20, r8
     a88:	bb 20       	and	r11, r11
     a8a:	24 f4       	brge	.+8      	; 0xa94 <__stack+0x195>
     a8c:	41 50       	subi	r20, 0x01	; 1
     a8e:	5c 4f       	sbci	r21, 0xFC	; 252
     a90:	6f 4f       	sbci	r22, 0xFF	; 255
     a92:	7f 4f       	sbci	r23, 0xFF	; 255
     a94:	03 2e       	mov	r0, r19
     a96:	3a e0       	ldi	r19, 0x0A	; 10
     a98:	75 95       	asr	r23
     a9a:	67 95       	ror	r22
     a9c:	57 95       	ror	r21
     a9e:	47 95       	ror	r20
     aa0:	3a 95       	dec	r19
     aa2:	d1 f7       	brne	.-12     	; 0xa98 <__stack+0x199>
     aa4:	30 2d       	mov	r19, r0
     aa6:	5d 87       	std	Y+13, r21	; 0x0d
     aa8:	4c 87       	std	Y+12, r20	; 0x0c
     aaa:	b7 01       	movw	r22, r14
     aac:	a6 01       	movw	r20, r12
     aae:	ff 20       	and	r15, r15
     ab0:	24 f4       	brge	.+8      	; 0xaba <__stack+0x1bb>
     ab2:	41 50       	subi	r20, 0x01	; 1
     ab4:	5c 4f       	sbci	r21, 0xFC	; 252
     ab6:	6f 4f       	sbci	r22, 0xFF	; 255
     ab8:	7f 4f       	sbci	r23, 0xFF	; 255
     aba:	03 2e       	mov	r0, r19
     abc:	3a e0       	ldi	r19, 0x0A	; 10
     abe:	75 95       	asr	r23
     ac0:	67 95       	ror	r22
     ac2:	57 95       	ror	r21
     ac4:	47 95       	ror	r20
     ac6:	3a 95       	dec	r19
     ac8:	d1 f7       	brne	.-12     	; 0xabe <__stack+0x1bf>
     aca:	30 2d       	mov	r19, r0
     acc:	5f 87       	std	Y+15, r21	; 0x0f
     ace:	4e 87       	std	Y+14, r20	; 0x0e
     ad0:	9f 93       	push	r25
     ad2:	8f 93       	push	r24
     ad4:	0f 2e       	mov	r0, r31
     ad6:	fb e5       	ldi	r31, 0x5B	; 91
     ad8:	cf 2e       	mov	r12, r31
     ada:	f1 e0       	ldi	r31, 0x01	; 1
     adc:	df 2e       	mov	r13, r31
     ade:	f0 2d       	mov	r31, r0
     ae0:	df 92       	push	r13
     ae2:	cf 92       	push	r12
     ae4:	0a e6       	ldi	r16, 0x6A	; 106
     ae6:	12 e0       	ldi	r17, 0x02	; 2
     ae8:	1f 93       	push	r17
     aea:	0f 93       	push	r16
     aec:	0e 94 8b 0d 	call	0x1b16	; 0x1b16 <sprintf>
     af0:	f8 01       	movw	r30, r16
     af2:	01 90       	ld	r0, Z+
     af4:	00 20       	and	r0, r0
     af6:	e9 f7       	brne	.-6      	; 0xaf2 <__stack+0x1f3>
     af8:	31 97       	sbiw	r30, 0x01	; 1
     afa:	af 01       	movw	r20, r30
     afc:	4a 56       	subi	r20, 0x6A	; 106
     afe:	52 40       	sbci	r21, 0x02	; 2
     b00:	60 e0       	ldi	r22, 0x00	; 0
     b02:	70 e0       	ldi	r23, 0x00	; 0
     b04:	c8 01       	movw	r24, r16
     b06:	0e 94 60 0a 	call	0x14c0	; 0x14c0 <UART_tx>
     b0a:	0f 2e       	mov	r0, r31
     b0c:	f2 e3       	ldi	r31, 0x32	; 50
     b0e:	ff 2e       	mov	r15, r31
     b10:	f0 2d       	mov	r31, r0
     b12:	f8 01       	movw	r30, r16
     b14:	2f 2d       	mov	r18, r15
     b16:	11 92       	st	Z+, r1
     b18:	2a 95       	dec	r18
     b1a:	e9 f7       	brne	.-6      	; 0xb16 <__stack+0x217>
     b1c:	8d 85       	ldd	r24, Y+13	; 0x0d
     b1e:	8f 93       	push	r24
     b20:	8c 85       	ldd	r24, Y+12	; 0x0c
     b22:	8f 93       	push	r24
     b24:	df 92       	push	r13
     b26:	cf 92       	push	r12
     b28:	1f 93       	push	r17
     b2a:	0f 93       	push	r16
     b2c:	0e 94 8b 0d 	call	0x1b16	; 0x1b16 <sprintf>
     b30:	f8 01       	movw	r30, r16
     b32:	01 90       	ld	r0, Z+
     b34:	00 20       	and	r0, r0
     b36:	e9 f7       	brne	.-6      	; 0xb32 <__stack+0x233>
     b38:	31 97       	sbiw	r30, 0x01	; 1
     b3a:	af 01       	movw	r20, r30
     b3c:	4a 56       	subi	r20, 0x6A	; 106
     b3e:	52 40       	sbci	r21, 0x02	; 2
     b40:	60 e0       	ldi	r22, 0x00	; 0
     b42:	70 e0       	ldi	r23, 0x00	; 0
     b44:	c8 01       	movw	r24, r16
     b46:	0e 94 60 0a 	call	0x14c0	; 0x14c0 <UART_tx>
     b4a:	f8 01       	movw	r30, r16
     b4c:	2f 2d       	mov	r18, r15
     b4e:	11 92       	st	Z+, r1
     b50:	2a 95       	dec	r18
     b52:	e9 f7       	brne	.-6      	; 0xb4e <__stack+0x24f>
     b54:	8f 85       	ldd	r24, Y+15	; 0x0f
     b56:	8f 93       	push	r24
     b58:	8e 85       	ldd	r24, Y+14	; 0x0e
     b5a:	8f 93       	push	r24
     b5c:	df 92       	push	r13
     b5e:	cf 92       	push	r12
     b60:	1f 93       	push	r17
     b62:	0f 93       	push	r16
     b64:	0e 94 8b 0d 	call	0x1b16	; 0x1b16 <sprintf>
     b68:	f8 01       	movw	r30, r16
     b6a:	01 90       	ld	r0, Z+
     b6c:	00 20       	and	r0, r0
     b6e:	e9 f7       	brne	.-6      	; 0xb6a <__stack+0x26b>
     b70:	31 97       	sbiw	r30, 0x01	; 1
     b72:	af 01       	movw	r20, r30
     b74:	4a 56       	subi	r20, 0x6A	; 106
     b76:	52 40       	sbci	r21, 0x02	; 2
     b78:	60 e0       	ldi	r22, 0x00	; 0
     b7a:	70 e0       	ldi	r23, 0x00	; 0
     b7c:	c8 01       	movw	r24, r16
     b7e:	0e 94 60 0a 	call	0x14c0	; 0x14c0 <UART_tx>
     b82:	f8 01       	movw	r30, r16
     b84:	11 92       	st	Z+, r1
     b86:	fa 94       	dec	r15
     b88:	e9 f7       	brne	.-6      	; 0xb84 <__stack+0x285>
     b8a:	ce 01       	movw	r24, r28
     b8c:	0a 96       	adiw	r24, 0x0a	; 10
     b8e:	0e 94 3e 04 	call	0x87c	; 0x87c <_Z13set_gyro_biasPi>
     b92:	0f b6       	in	r0, 0x3f	; 63
     b94:	f8 94       	cli
     b96:	de bf       	out	0x3e, r29	; 62
     b98:	0f be       	out	0x3f, r0	; 63
     b9a:	cd bf       	out	0x3d, r28	; 61
     b9c:	80 e0       	ldi	r24, 0x00	; 0
     b9e:	2f 96       	adiw	r28, 0x0f	; 15
     ba0:	0f b6       	in	r0, 0x3f	; 63
     ba2:	f8 94       	cli
     ba4:	de bf       	out	0x3e, r29	; 62
     ba6:	0f be       	out	0x3f, r0	; 63
     ba8:	cd bf       	out	0x3d, r28	; 61
     baa:	df 91       	pop	r29
     bac:	cf 91       	pop	r28
     bae:	1f 91       	pop	r17
     bb0:	0f 91       	pop	r16
     bb2:	ff 90       	pop	r15
     bb4:	ef 90       	pop	r14
     bb6:	df 90       	pop	r13
     bb8:	cf 90       	pop	r12
     bba:	bf 90       	pop	r11
     bbc:	af 90       	pop	r10
     bbe:	9f 90       	pop	r9
     bc0:	8f 90       	pop	r8
     bc2:	7f 90       	pop	r7
     bc4:	6f 90       	pop	r6
     bc6:	5f 90       	pop	r5
     bc8:	4f 90       	pop	r4
     bca:	3f 90       	pop	r3
     bcc:	08 95       	ret

00000bce <_Z18scale_magnetometerPf>:
     bce:	0f 93       	push	r16
     bd0:	1f 93       	push	r17
     bd2:	cf 93       	push	r28
     bd4:	df 93       	push	r29
     bd6:	ec 01       	movw	r28, r24
     bd8:	0c e9       	ldi	r16, 0x9C	; 156
     bda:	12 e0       	ldi	r17, 0x02	; 2
     bdc:	f8 01       	movw	r30, r16
     bde:	60 81       	ld	r22, Z
     be0:	06 2e       	mov	r0, r22
     be2:	00 0c       	add	r0, r0
     be4:	77 0b       	sbc	r23, r23
     be6:	88 0b       	sbc	r24, r24
     be8:	99 0b       	sbc	r25, r25
     bea:	0e 94 85 0c 	call	0x190a	; 0x190a <__floatsisf>
     bee:	20 e0       	ldi	r18, 0x00	; 0
     bf0:	30 e0       	ldi	r19, 0x00	; 0
     bf2:	40 e0       	ldi	r20, 0x00	; 0
     bf4:	5f e3       	ldi	r21, 0x3F	; 63
     bf6:	0e 94 11 0d 	call	0x1a22	; 0x1a22 <__mulsf3>
     bfa:	20 e0       	ldi	r18, 0x00	; 0
     bfc:	30 e0       	ldi	r19, 0x00	; 0
     bfe:	40 e0       	ldi	r20, 0x00	; 0
     c00:	5c e3       	ldi	r21, 0x3C	; 60
     c02:	0e 94 11 0d 	call	0x1a22	; 0x1a22 <__mulsf3>
     c06:	20 e0       	ldi	r18, 0x00	; 0
     c08:	30 e0       	ldi	r19, 0x00	; 0
     c0a:	40 e8       	ldi	r20, 0x80	; 128
     c0c:	5f e3       	ldi	r21, 0x3F	; 63
     c0e:	0e 94 a5 0b 	call	0x174a	; 0x174a <__addsf3>
     c12:	9b 01       	movw	r18, r22
     c14:	ac 01       	movw	r20, r24
     c16:	68 81       	ld	r22, Y
     c18:	79 81       	ldd	r23, Y+1	; 0x01
     c1a:	8a 81       	ldd	r24, Y+2	; 0x02
     c1c:	9b 81       	ldd	r25, Y+3	; 0x03
     c1e:	0e 94 11 0d 	call	0x1a22	; 0x1a22 <__mulsf3>
     c22:	68 83       	st	Y, r22
     c24:	79 83       	std	Y+1, r23	; 0x01
     c26:	8a 83       	std	Y+2, r24	; 0x02
     c28:	9b 83       	std	Y+3, r25	; 0x03
     c2a:	f8 01       	movw	r30, r16
     c2c:	61 81       	ldd	r22, Z+1	; 0x01
     c2e:	06 2e       	mov	r0, r22
     c30:	00 0c       	add	r0, r0
     c32:	77 0b       	sbc	r23, r23
     c34:	88 0b       	sbc	r24, r24
     c36:	99 0b       	sbc	r25, r25
     c38:	0e 94 85 0c 	call	0x190a	; 0x190a <__floatsisf>
     c3c:	20 e0       	ldi	r18, 0x00	; 0
     c3e:	30 e0       	ldi	r19, 0x00	; 0
     c40:	40 e0       	ldi	r20, 0x00	; 0
     c42:	5f e3       	ldi	r21, 0x3F	; 63
     c44:	0e 94 11 0d 	call	0x1a22	; 0x1a22 <__mulsf3>
     c48:	20 e0       	ldi	r18, 0x00	; 0
     c4a:	30 e0       	ldi	r19, 0x00	; 0
     c4c:	40 e0       	ldi	r20, 0x00	; 0
     c4e:	5c e3       	ldi	r21, 0x3C	; 60
     c50:	0e 94 11 0d 	call	0x1a22	; 0x1a22 <__mulsf3>
     c54:	20 e0       	ldi	r18, 0x00	; 0
     c56:	30 e0       	ldi	r19, 0x00	; 0
     c58:	40 e8       	ldi	r20, 0x80	; 128
     c5a:	5f e3       	ldi	r21, 0x3F	; 63
     c5c:	0e 94 a5 0b 	call	0x174a	; 0x174a <__addsf3>
     c60:	9b 01       	movw	r18, r22
     c62:	ac 01       	movw	r20, r24
     c64:	6c 81       	ldd	r22, Y+4	; 0x04
     c66:	7d 81       	ldd	r23, Y+5	; 0x05
     c68:	8e 81       	ldd	r24, Y+6	; 0x06
     c6a:	9f 81       	ldd	r25, Y+7	; 0x07
     c6c:	0e 94 11 0d 	call	0x1a22	; 0x1a22 <__mulsf3>
     c70:	6c 83       	std	Y+4, r22	; 0x04
     c72:	7d 83       	std	Y+5, r23	; 0x05
     c74:	8e 83       	std	Y+6, r24	; 0x06
     c76:	9f 83       	std	Y+7, r25	; 0x07
     c78:	f8 01       	movw	r30, r16
     c7a:	62 81       	ldd	r22, Z+2	; 0x02
     c7c:	06 2e       	mov	r0, r22
     c7e:	00 0c       	add	r0, r0
     c80:	77 0b       	sbc	r23, r23
     c82:	88 0b       	sbc	r24, r24
     c84:	99 0b       	sbc	r25, r25
     c86:	0e 94 85 0c 	call	0x190a	; 0x190a <__floatsisf>
     c8a:	20 e0       	ldi	r18, 0x00	; 0
     c8c:	30 e0       	ldi	r19, 0x00	; 0
     c8e:	40 e0       	ldi	r20, 0x00	; 0
     c90:	5f e3       	ldi	r21, 0x3F	; 63
     c92:	0e 94 11 0d 	call	0x1a22	; 0x1a22 <__mulsf3>
     c96:	20 e0       	ldi	r18, 0x00	; 0
     c98:	30 e0       	ldi	r19, 0x00	; 0
     c9a:	40 e0       	ldi	r20, 0x00	; 0
     c9c:	5c e3       	ldi	r21, 0x3C	; 60
     c9e:	0e 94 11 0d 	call	0x1a22	; 0x1a22 <__mulsf3>
     ca2:	20 e0       	ldi	r18, 0x00	; 0
     ca4:	30 e0       	ldi	r19, 0x00	; 0
     ca6:	40 e8       	ldi	r20, 0x80	; 128
     ca8:	5f e3       	ldi	r21, 0x3F	; 63
     caa:	0e 94 a5 0b 	call	0x174a	; 0x174a <__addsf3>
     cae:	9b 01       	movw	r18, r22
     cb0:	ac 01       	movw	r20, r24
     cb2:	68 85       	ldd	r22, Y+8	; 0x08
     cb4:	79 85       	ldd	r23, Y+9	; 0x09
     cb6:	8a 85       	ldd	r24, Y+10	; 0x0a
     cb8:	9b 85       	ldd	r25, Y+11	; 0x0b
     cba:	0e 94 11 0d 	call	0x1a22	; 0x1a22 <__mulsf3>
     cbe:	68 87       	std	Y+8, r22	; 0x08
     cc0:	79 87       	std	Y+9, r23	; 0x09
     cc2:	8a 87       	std	Y+10, r24	; 0x0a
     cc4:	9b 87       	std	Y+11, r25	; 0x0b
     cc6:	80 e0       	ldi	r24, 0x00	; 0
     cc8:	df 91       	pop	r29
     cca:	cf 91       	pop	r28
     ccc:	1f 91       	pop	r17
     cce:	0f 91       	pop	r16
     cd0:	08 95       	ret

00000cd2 <_Z17read_magnetometerPi>:
     cd2:	0f 93       	push	r16
     cd4:	1f 93       	push	r17
     cd6:	cf 93       	push	r28
     cd8:	df 93       	push	r29
     cda:	cd b7       	in	r28, 0x3d	; 61
     cdc:	de b7       	in	r29, 0x3e	; 62
     cde:	29 97       	sbiw	r28, 0x09	; 9
     ce0:	0f b6       	in	r0, 0x3f	; 63
     ce2:	f8 94       	cli
     ce4:	de bf       	out	0x3e, r29	; 62
     ce6:	0f be       	out	0x3f, r0	; 63
     ce8:	cd bf       	out	0x3d, r28	; 61
     cea:	8c 01       	movw	r16, r24
     cec:	88 e1       	ldi	r24, 0x18	; 24
     cee:	89 83       	std	Y+1, r24	; 0x01
     cf0:	83 e0       	ldi	r24, 0x03	; 3
     cf2:	8a 83       	std	Y+2, r24	; 0x02
     cf4:	89 e1       	ldi	r24, 0x19	; 25
     cf6:	8b 83       	std	Y+3, r24	; 0x03
     cf8:	62 e0       	ldi	r22, 0x02	; 2
     cfa:	ce 01       	movw	r24, r28
     cfc:	01 96       	adiw	r24, 0x01	; 1
     cfe:	0e 94 7d 09 	call	0x12fa	; 0x12fa <TWI_Start_Transceiver_With_Data>
     d02:	67 e0       	ldi	r22, 0x07	; 7
     d04:	ce 01       	movw	r24, r28
     d06:	03 96       	adiw	r24, 0x03	; 3
     d08:	0e 94 7d 09 	call	0x12fa	; 0x12fa <TWI_Start_Transceiver_With_Data>
     d0c:	67 e0       	ldi	r22, 0x07	; 7
     d0e:	ce 01       	movw	r24, r28
     d10:	03 96       	adiw	r24, 0x03	; 3
     d12:	0e 94 aa 09 	call	0x1354	; 0x1354 <TWI_Get_Data_From_Transceiver>
     d16:	8d 81       	ldd	r24, Y+5	; 0x05
     d18:	90 e0       	ldi	r25, 0x00	; 0
     d1a:	98 2f       	mov	r25, r24
     d1c:	88 27       	eor	r24, r24
     d1e:	2c 81       	ldd	r18, Y+4	; 0x04
     d20:	82 2b       	or	r24, r18
     d22:	f8 01       	movw	r30, r16
     d24:	91 83       	std	Z+1, r25	; 0x01
     d26:	80 83       	st	Z, r24
     d28:	8f 81       	ldd	r24, Y+7	; 0x07
     d2a:	90 e0       	ldi	r25, 0x00	; 0
     d2c:	98 2f       	mov	r25, r24
     d2e:	88 27       	eor	r24, r24
     d30:	2e 81       	ldd	r18, Y+6	; 0x06
     d32:	82 2b       	or	r24, r18
     d34:	93 83       	std	Z+3, r25	; 0x03
     d36:	82 83       	std	Z+2, r24	; 0x02
     d38:	89 85       	ldd	r24, Y+9	; 0x09
     d3a:	90 e0       	ldi	r25, 0x00	; 0
     d3c:	98 2f       	mov	r25, r24
     d3e:	88 27       	eor	r24, r24
     d40:	28 85       	ldd	r18, Y+8	; 0x08
     d42:	82 2b       	or	r24, r18
     d44:	95 83       	std	Z+5, r25	; 0x05
     d46:	84 83       	std	Z+4, r24	; 0x04
     d48:	80 e0       	ldi	r24, 0x00	; 0
     d4a:	29 96       	adiw	r28, 0x09	; 9
     d4c:	0f b6       	in	r0, 0x3f	; 63
     d4e:	f8 94       	cli
     d50:	de bf       	out	0x3e, r29	; 62
     d52:	0f be       	out	0x3f, r0	; 63
     d54:	cd bf       	out	0x3d, r28	; 61
     d56:	df 91       	pop	r29
     d58:	cf 91       	pop	r28
     d5a:	1f 91       	pop	r17
     d5c:	0f 91       	pop	r16
     d5e:	08 95       	ret

00000d60 <_Z22calibrate_magnetometerv>:
     d60:	4f 92       	push	r4
     d62:	5f 92       	push	r5
     d64:	6f 92       	push	r6
     d66:	7f 92       	push	r7
     d68:	8f 92       	push	r8
     d6a:	9f 92       	push	r9
     d6c:	af 92       	push	r10
     d6e:	bf 92       	push	r11
     d70:	cf 92       	push	r12
     d72:	df 92       	push	r13
     d74:	ef 92       	push	r14
     d76:	ff 92       	push	r15
     d78:	0f 93       	push	r16
     d7a:	1f 93       	push	r17
     d7c:	cf 93       	push	r28
     d7e:	df 93       	push	r29
     d80:	cd b7       	in	r28, 0x3d	; 61
     d82:	de b7       	in	r29, 0x3e	; 62
     d84:	a5 97       	sbiw	r28, 0x25	; 37
     d86:	0f b6       	in	r0, 0x3f	; 63
     d88:	f8 94       	cli
     d8a:	de bf       	out	0x3e, r29	; 62
     d8c:	0f be       	out	0x3f, r0	; 63
     d8e:	cd bf       	out	0x3d, r28	; 61
     d90:	88 e1       	ldi	r24, 0x18	; 24
     d92:	89 83       	std	Y+1, r24	; 0x01
     d94:	8a e0       	ldi	r24, 0x0A	; 10
     d96:	8a 83       	std	Y+2, r24	; 0x02
     d98:	86 e1       	ldi	r24, 0x16	; 22
     d9a:	8b 83       	std	Y+3, r24	; 0x03
     d9c:	63 e0       	ldi	r22, 0x03	; 3
     d9e:	ce 01       	movw	r24, r28
     da0:	01 96       	adiw	r24, 0x01	; 1
     da2:	0e 94 7d 09 	call	0x12fa	; 0x12fa <TWI_Start_Transceiver_With_Data>
     da6:	0a e6       	ldi	r16, 0x6A	; 106
     da8:	12 e0       	ldi	r17, 0x02	; 2
     daa:	8c e0       	ldi	r24, 0x0C	; 12
     dac:	ea e9       	ldi	r30, 0x9A	; 154
     dae:	f1 e0       	ldi	r31, 0x01	; 1
     db0:	d8 01       	movw	r26, r16
     db2:	01 90       	ld	r0, Z+
     db4:	0d 92       	st	X+, r0
     db6:	8a 95       	dec	r24
     db8:	e1 f7       	brne	.-8      	; 0xdb2 <_Z22calibrate_magnetometerv+0x52>
     dba:	f8 01       	movw	r30, r16
     dbc:	01 90       	ld	r0, Z+
     dbe:	00 20       	and	r0, r0
     dc0:	e9 f7       	brne	.-6      	; 0xdbc <_Z22calibrate_magnetometerv+0x5c>
     dc2:	31 97       	sbiw	r30, 0x01	; 1
     dc4:	af 01       	movw	r20, r30
     dc6:	4a 56       	subi	r20, 0x6A	; 106
     dc8:	52 40       	sbci	r21, 0x02	; 2
     dca:	60 e0       	ldi	r22, 0x00	; 0
     dcc:	70 e0       	ldi	r23, 0x00	; 0
     dce:	c8 01       	movw	r24, r16
     dd0:	0e 94 60 0a 	call	0x14c0	; 0x14c0 <UART_tx>
     dd4:	82 e3       	ldi	r24, 0x32	; 50
     dd6:	d8 01       	movw	r26, r16
     dd8:	1d 92       	st	X+, r1
     dda:	8a 95       	dec	r24
     ddc:	e9 f7       	brne	.-6      	; 0xdd8 <_Z22calibrate_magnetometerv+0x78>
     dde:	86 e0       	ldi	r24, 0x06	; 6
     de0:	e1 e0       	ldi	r30, 0x01	; 1
     de2:	f1 e0       	ldi	r31, 0x01	; 1
     de4:	de 01       	movw	r26, r28
     de6:	1a 96       	adiw	r26, 0x0a	; 10
     de8:	01 90       	ld	r0, Z+
     dea:	0d 92       	st	X+, r0
     dec:	8a 95       	dec	r24
     dee:	e1 f7       	brne	.-8      	; 0xde8 <_Z22calibrate_magnetometerv+0x88>
     df0:	86 e0       	ldi	r24, 0x06	; 6
     df2:	e7 e0       	ldi	r30, 0x07	; 7
     df4:	f1 e0       	ldi	r31, 0x01	; 1
     df6:	de 01       	movw	r26, r28
     df8:	50 96       	adiw	r26, 0x10	; 16
     dfa:	01 90       	ld	r0, Z+
     dfc:	0d 92       	st	X+, r0
     dfe:	8a 95       	dec	r24
     e00:	e1 f7       	brne	.-8      	; 0xdfa <_Z22calibrate_magnetometerv+0x9a>
     e02:	e1 2c       	mov	r14, r1
     e04:	68 94       	set
     e06:	ff 24       	eor	r15, r15
     e08:	f2 f8       	bld	r15, 2
     e0a:	8e 01       	movw	r16, r28
     e0c:	0a 5e       	subi	r16, 0xEA	; 234
     e0e:	1f 4f       	sbci	r17, 0xFF	; 255
     e10:	ce 01       	movw	r24, r28
     e12:	04 96       	adiw	r24, 0x04	; 4
     e14:	0e 94 69 06 	call	0xcd2	; 0xcd2 <_Z17read_magnetometerPi>
     e18:	9e 01       	movw	r18, r28
     e1a:	2c 5f       	subi	r18, 0xFC	; 252
     e1c:	3f 4f       	sbci	r19, 0xFF	; 255
     e1e:	fe 01       	movw	r30, r28
     e20:	70 96       	adiw	r30, 0x10	; 16
     e22:	be 01       	movw	r22, r28
     e24:	66 5f       	subi	r22, 0xF6	; 246
     e26:	7f 4f       	sbci	r23, 0xFF	; 255
     e28:	d9 01       	movw	r26, r18
     e2a:	8d 91       	ld	r24, X+
     e2c:	9d 91       	ld	r25, X+
     e2e:	9d 01       	movw	r18, r26
     e30:	40 81       	ld	r20, Z
     e32:	51 81       	ldd	r21, Z+1	; 0x01
     e34:	84 17       	cp	r24, r20
     e36:	95 07       	cpc	r25, r21
     e38:	14 f4       	brge	.+4      	; 0xe3e <_Z22calibrate_magnetometerv+0xde>
     e3a:	91 83       	std	Z+1, r25	; 0x01
     e3c:	80 83       	st	Z, r24
     e3e:	db 01       	movw	r26, r22
     e40:	4d 91       	ld	r20, X+
     e42:	5c 91       	ld	r21, X
     e44:	11 97       	sbiw	r26, 0x01	; 1
     e46:	48 17       	cp	r20, r24
     e48:	59 07       	cpc	r21, r25
     e4a:	14 f4       	brge	.+4      	; 0xe50 <_Z22calibrate_magnetometerv+0xf0>
     e4c:	8d 93       	st	X+, r24
     e4e:	9c 93       	st	X, r25
     e50:	32 96       	adiw	r30, 0x02	; 2
     e52:	6e 5f       	subi	r22, 0xFE	; 254
     e54:	7f 4f       	sbci	r23, 0xFF	; 255
     e56:	e0 17       	cp	r30, r16
     e58:	f1 07       	cpc	r31, r17
     e5a:	31 f7       	brne	.-52     	; 0xe28 <_Z22calibrate_magnetometerv+0xc8>
     e5c:	ef e1       	ldi	r30, 0x1F	; 31
     e5e:	fe e4       	ldi	r31, 0x4E	; 78
     e60:	31 97       	sbiw	r30, 0x01	; 1
     e62:	f1 f7       	brne	.-4      	; 0xe60 <_Z22calibrate_magnetometerv+0x100>
     e64:	00 c0       	rjmp	.+0      	; 0xe66 <_Z22calibrate_magnetometerv+0x106>
     e66:	00 00       	nop
     e68:	f1 e0       	ldi	r31, 0x01	; 1
     e6a:	ef 1a       	sub	r14, r31
     e6c:	f1 08       	sbc	r15, r1
     e6e:	81 f6       	brne	.-96     	; 0xe10 <_Z22calibrate_magnetometerv+0xb0>
     e70:	aa 84       	ldd	r10, Y+10	; 0x0a
     e72:	bb 84       	ldd	r11, Y+11	; 0x0b
     e74:	68 88       	ldd	r6, Y+16	; 0x10
     e76:	79 88       	ldd	r7, Y+17	; 0x11
     e78:	cc 84       	ldd	r12, Y+12	; 0x0c
     e7a:	dd 84       	ldd	r13, Y+13	; 0x0d
     e7c:	8a 88       	ldd	r8, Y+18	; 0x12
     e7e:	9b 88       	ldd	r9, Y+19	; 0x13
     e80:	ee 84       	ldd	r14, Y+14	; 0x0e
     e82:	ff 84       	ldd	r15, Y+15	; 0x0f
     e84:	4c 88       	ldd	r4, Y+20	; 0x14
     e86:	5d 88       	ldd	r5, Y+21	; 0x15
     e88:	b5 01       	movw	r22, r10
     e8a:	66 0d       	add	r22, r6
     e8c:	77 1d       	adc	r23, r7
     e8e:	77 23       	and	r23, r23
     e90:	14 f4       	brge	.+4      	; 0xe96 <_Z22calibrate_magnetometerv+0x136>
     e92:	6f 5f       	subi	r22, 0xFF	; 255
     e94:	7f 4f       	sbci	r23, 0xFF	; 255
     e96:	75 95       	asr	r23
     e98:	67 95       	ror	r22
     e9a:	07 2e       	mov	r0, r23
     e9c:	00 0c       	add	r0, r0
     e9e:	88 0b       	sbc	r24, r24
     ea0:	99 0b       	sbc	r25, r25
     ea2:	0e 94 85 0c 	call	0x190a	; 0x190a <__floatsisf>
     ea6:	60 93 ab 02 	sts	0x02AB, r22	; 0x8002ab <_ZL20hard_iron_correction>
     eaa:	70 93 ac 02 	sts	0x02AC, r23	; 0x8002ac <_ZL20hard_iron_correction+0x1>
     eae:	80 93 ad 02 	sts	0x02AD, r24	; 0x8002ad <_ZL20hard_iron_correction+0x2>
     eb2:	90 93 ae 02 	sts	0x02AE, r25	; 0x8002ae <_ZL20hard_iron_correction+0x3>
     eb6:	b6 01       	movw	r22, r12
     eb8:	68 0d       	add	r22, r8
     eba:	79 1d       	adc	r23, r9
     ebc:	77 23       	and	r23, r23
     ebe:	14 f4       	brge	.+4      	; 0xec4 <_Z22calibrate_magnetometerv+0x164>
     ec0:	6f 5f       	subi	r22, 0xFF	; 255
     ec2:	7f 4f       	sbci	r23, 0xFF	; 255
     ec4:	75 95       	asr	r23
     ec6:	67 95       	ror	r22
     ec8:	07 2e       	mov	r0, r23
     eca:	00 0c       	add	r0, r0
     ecc:	88 0b       	sbc	r24, r24
     ece:	99 0b       	sbc	r25, r25
     ed0:	0e 94 85 0c 	call	0x190a	; 0x190a <__floatsisf>
     ed4:	60 93 af 02 	sts	0x02AF, r22	; 0x8002af <_ZL20hard_iron_correction+0x4>
     ed8:	70 93 b0 02 	sts	0x02B0, r23	; 0x8002b0 <_ZL20hard_iron_correction+0x5>
     edc:	80 93 b1 02 	sts	0x02B1, r24	; 0x8002b1 <_ZL20hard_iron_correction+0x6>
     ee0:	90 93 b2 02 	sts	0x02B2, r25	; 0x8002b2 <_ZL20hard_iron_correction+0x7>
     ee4:	b7 01       	movw	r22, r14
     ee6:	64 0d       	add	r22, r4
     ee8:	75 1d       	adc	r23, r5
     eea:	77 23       	and	r23, r23
     eec:	14 f4       	brge	.+4      	; 0xef2 <_Z22calibrate_magnetometerv+0x192>
     eee:	6f 5f       	subi	r22, 0xFF	; 255
     ef0:	7f 4f       	sbci	r23, 0xFF	; 255
     ef2:	75 95       	asr	r23
     ef4:	67 95       	ror	r22
     ef6:	07 2e       	mov	r0, r23
     ef8:	00 0c       	add	r0, r0
     efa:	88 0b       	sbc	r24, r24
     efc:	99 0b       	sbc	r25, r25
     efe:	0e 94 85 0c 	call	0x190a	; 0x190a <__floatsisf>
     f02:	60 93 b3 02 	sts	0x02B3, r22	; 0x8002b3 <_ZL20hard_iron_correction+0x8>
     f06:	70 93 b4 02 	sts	0x02B4, r23	; 0x8002b4 <_ZL20hard_iron_correction+0x9>
     f0a:	80 93 b5 02 	sts	0x02B5, r24	; 0x8002b5 <_ZL20hard_iron_correction+0xa>
     f0e:	90 93 b6 02 	sts	0x02B6, r25	; 0x8002b6 <_ZL20hard_iron_correction+0xb>
     f12:	8b ea       	ldi	r24, 0xAB	; 171
     f14:	92 e0       	ldi	r25, 0x02	; 2
     f16:	0e 94 e7 05 	call	0xbce	; 0xbce <_Z18scale_magnetometerPf>
     f1a:	a6 18       	sub	r10, r6
     f1c:	b7 08       	sbc	r11, r7
     f1e:	b5 01       	movw	r22, r10
     f20:	12 f4       	brpl	.+4      	; 0xf26 <_Z22calibrate_magnetometerv+0x1c6>
     f22:	6f 5f       	subi	r22, 0xFF	; 255
     f24:	7f 4f       	sbci	r23, 0xFF	; 255
     f26:	75 95       	asr	r23
     f28:	67 95       	ror	r22
     f2a:	07 2e       	mov	r0, r23
     f2c:	00 0c       	add	r0, r0
     f2e:	88 0b       	sbc	r24, r24
     f30:	99 0b       	sbc	r25, r25
     f32:	0e 94 85 0c 	call	0x190a	; 0x190a <__floatsisf>
     f36:	6e 8b       	std	Y+22, r22	; 0x16
     f38:	7f 8b       	std	Y+23, r23	; 0x17
     f3a:	88 8f       	std	Y+24, r24	; 0x18
     f3c:	99 8f       	std	Y+25, r25	; 0x19
     f3e:	c8 18       	sub	r12, r8
     f40:	d9 08       	sbc	r13, r9
     f42:	b6 01       	movw	r22, r12
     f44:	12 f4       	brpl	.+4      	; 0xf4a <_Z22calibrate_magnetometerv+0x1ea>
     f46:	6f 5f       	subi	r22, 0xFF	; 255
     f48:	7f 4f       	sbci	r23, 0xFF	; 255
     f4a:	75 95       	asr	r23
     f4c:	67 95       	ror	r22
     f4e:	07 2e       	mov	r0, r23
     f50:	00 0c       	add	r0, r0
     f52:	88 0b       	sbc	r24, r24
     f54:	99 0b       	sbc	r25, r25
     f56:	0e 94 85 0c 	call	0x190a	; 0x190a <__floatsisf>
     f5a:	6a 8f       	std	Y+26, r22	; 0x1a
     f5c:	7b 8f       	std	Y+27, r23	; 0x1b
     f5e:	8c 8f       	std	Y+28, r24	; 0x1c
     f60:	9d 8f       	std	Y+29, r25	; 0x1d
     f62:	e4 18       	sub	r14, r4
     f64:	f5 08       	sbc	r15, r5
     f66:	b7 01       	movw	r22, r14
     f68:	12 f4       	brpl	.+4      	; 0xf6e <_Z22calibrate_magnetometerv+0x20e>
     f6a:	6f 5f       	subi	r22, 0xFF	; 255
     f6c:	7f 4f       	sbci	r23, 0xFF	; 255
     f6e:	75 95       	asr	r23
     f70:	67 95       	ror	r22
     f72:	07 2e       	mov	r0, r23
     f74:	00 0c       	add	r0, r0
     f76:	88 0b       	sbc	r24, r24
     f78:	99 0b       	sbc	r25, r25
     f7a:	0e 94 85 0c 	call	0x190a	; 0x190a <__floatsisf>
     f7e:	6e 8f       	std	Y+30, r22	; 0x1e
     f80:	7f 8f       	std	Y+31, r23	; 0x1f
     f82:	88 a3       	std	Y+32, r24	; 0x20
     f84:	99 a3       	std	Y+33, r25	; 0x21
     f86:	ce 01       	movw	r24, r28
     f88:	46 96       	adiw	r24, 0x16	; 22
     f8a:	0e 94 e7 05 	call	0xbce	; 0xbce <_Z18scale_magnetometerPf>
     f8e:	4e 88       	ldd	r4, Y+22	; 0x16
     f90:	5f 88       	ldd	r5, Y+23	; 0x17
     f92:	68 8c       	ldd	r6, Y+24	; 0x18
     f94:	79 8c       	ldd	r7, Y+25	; 0x19
     f96:	8a 8c       	ldd	r8, Y+26	; 0x1a
     f98:	9b 8c       	ldd	r9, Y+27	; 0x1b
     f9a:	ac 8c       	ldd	r10, Y+28	; 0x1c
     f9c:	bd 8c       	ldd	r11, Y+29	; 0x1d
     f9e:	ce 8c       	ldd	r12, Y+30	; 0x1e
     fa0:	df 8c       	ldd	r13, Y+31	; 0x1f
     fa2:	e8 a0       	ldd	r14, Y+32	; 0x20
     fa4:	f9 a0       	ldd	r15, Y+33	; 0x21
     fa6:	a5 01       	movw	r20, r10
     fa8:	94 01       	movw	r18, r8
     faa:	c3 01       	movw	r24, r6
     fac:	b2 01       	movw	r22, r4
     fae:	0e 94 a5 0b 	call	0x174a	; 0x174a <__addsf3>
     fb2:	a7 01       	movw	r20, r14
     fb4:	96 01       	movw	r18, r12
     fb6:	0e 94 a5 0b 	call	0x174a	; 0x174a <__addsf3>
     fba:	20 e0       	ldi	r18, 0x00	; 0
     fbc:	30 e0       	ldi	r19, 0x00	; 0
     fbe:	40 e4       	ldi	r20, 0x40	; 64
     fc0:	50 e4       	ldi	r21, 0x40	; 64
     fc2:	0e 94 11 0c 	call	0x1822	; 0x1822 <__divsf3>
     fc6:	6a a3       	std	Y+34, r22	; 0x22
     fc8:	7b a3       	std	Y+35, r23	; 0x23
     fca:	8c a3       	std	Y+36, r24	; 0x24
     fcc:	9d a3       	std	Y+37, r25	; 0x25
     fce:	0f e9       	ldi	r16, 0x9F	; 159
     fd0:	12 e0       	ldi	r17, 0x02	; 2
     fd2:	a3 01       	movw	r20, r6
     fd4:	92 01       	movw	r18, r4
     fd6:	0e 94 11 0c 	call	0x1822	; 0x1822 <__divsf3>
     fda:	d8 01       	movw	r26, r16
     fdc:	6d 93       	st	X+, r22
     fde:	7d 93       	st	X+, r23
     fe0:	8d 93       	st	X+, r24
     fe2:	9c 93       	st	X, r25
     fe4:	13 97       	sbiw	r26, 0x03	; 3
     fe6:	a5 01       	movw	r20, r10
     fe8:	94 01       	movw	r18, r8
     fea:	6a a1       	ldd	r22, Y+34	; 0x22
     fec:	7b a1       	ldd	r23, Y+35	; 0x23
     fee:	8c a1       	ldd	r24, Y+36	; 0x24
     ff0:	9d a1       	ldd	r25, Y+37	; 0x25
     ff2:	0e 94 11 0c 	call	0x1822	; 0x1822 <__divsf3>
     ff6:	f8 01       	movw	r30, r16
     ff8:	64 83       	std	Z+4, r22	; 0x04
     ffa:	75 83       	std	Z+5, r23	; 0x05
     ffc:	86 83       	std	Z+6, r24	; 0x06
     ffe:	97 83       	std	Z+7, r25	; 0x07
    1000:	a7 01       	movw	r20, r14
    1002:	96 01       	movw	r18, r12
    1004:	6a a1       	ldd	r22, Y+34	; 0x22
    1006:	7b a1       	ldd	r23, Y+35	; 0x23
    1008:	8c a1       	ldd	r24, Y+36	; 0x24
    100a:	9d a1       	ldd	r25, Y+37	; 0x25
    100c:	0e 94 11 0c 	call	0x1822	; 0x1822 <__divsf3>
    1010:	d8 01       	movw	r26, r16
    1012:	18 96       	adiw	r26, 0x08	; 8
    1014:	6d 93       	st	X+, r22
    1016:	7d 93       	st	X+, r23
    1018:	8d 93       	st	X+, r24
    101a:	9c 93       	st	X, r25
    101c:	1b 97       	sbiw	r26, 0x0b	; 11
    101e:	0a e6       	ldi	r16, 0x6A	; 106
    1020:	12 e0       	ldi	r17, 0x02	; 2
    1022:	81 e1       	ldi	r24, 0x11	; 17
    1024:	e6 ea       	ldi	r30, 0xA6	; 166
    1026:	f1 e0       	ldi	r31, 0x01	; 1
    1028:	d8 01       	movw	r26, r16
    102a:	01 90       	ld	r0, Z+
    102c:	0d 92       	st	X+, r0
    102e:	8a 95       	dec	r24
    1030:	e1 f7       	brne	.-8      	; 0x102a <_Z22calibrate_magnetometerv+0x2ca>
    1032:	f8 01       	movw	r30, r16
    1034:	01 90       	ld	r0, Z+
    1036:	00 20       	and	r0, r0
    1038:	e9 f7       	brne	.-6      	; 0x1034 <_Z22calibrate_magnetometerv+0x2d4>
    103a:	31 97       	sbiw	r30, 0x01	; 1
    103c:	af 01       	movw	r20, r30
    103e:	4a 56       	subi	r20, 0x6A	; 106
    1040:	52 40       	sbci	r21, 0x02	; 2
    1042:	60 e0       	ldi	r22, 0x00	; 0
    1044:	70 e0       	ldi	r23, 0x00	; 0
    1046:	c8 01       	movw	r24, r16
    1048:	0e 94 60 0a 	call	0x14c0	; 0x14c0 <UART_tx>
    104c:	82 e3       	ldi	r24, 0x32	; 50
    104e:	f8 01       	movw	r30, r16
    1050:	11 92       	st	Z+, r1
    1052:	8a 95       	dec	r24
    1054:	e9 f7       	brne	.-6      	; 0x1050 <_Z22calibrate_magnetometerv+0x2f0>
    1056:	80 e0       	ldi	r24, 0x00	; 0
    1058:	a5 96       	adiw	r28, 0x25	; 37
    105a:	0f b6       	in	r0, 0x3f	; 63
    105c:	f8 94       	cli
    105e:	de bf       	out	0x3e, r29	; 62
    1060:	0f be       	out	0x3f, r0	; 63
    1062:	cd bf       	out	0x3d, r28	; 61
    1064:	df 91       	pop	r29
    1066:	cf 91       	pop	r28
    1068:	1f 91       	pop	r17
    106a:	0f 91       	pop	r16
    106c:	ff 90       	pop	r15
    106e:	ef 90       	pop	r14
    1070:	df 90       	pop	r13
    1072:	cf 90       	pop	r12
    1074:	bf 90       	pop	r11
    1076:	af 90       	pop	r10
    1078:	9f 90       	pop	r9
    107a:	8f 90       	pop	r8
    107c:	7f 90       	pop	r7
    107e:	6f 90       	pop	r6
    1080:	5f 90       	pop	r5
    1082:	4f 90       	pop	r4
    1084:	08 95       	ret

00001086 <_Z22get_magnetometer_scalev>:
    1086:	0f 93       	push	r16
    1088:	1f 93       	push	r17
    108a:	cf 93       	push	r28
    108c:	df 93       	push	r29
    108e:	cd b7       	in	r28, 0x3d	; 61
    1090:	de b7       	in	r29, 0x3e	; 62
    1092:	27 97       	sbiw	r28, 0x07	; 7
    1094:	0f b6       	in	r0, 0x3f	; 63
    1096:	f8 94       	cli
    1098:	de bf       	out	0x3e, r29	; 62
    109a:	0f be       	out	0x3f, r0	; 63
    109c:	cd bf       	out	0x3d, r28	; 61
    109e:	18 e1       	ldi	r17, 0x18	; 24
    10a0:	19 83       	std	Y+1, r17	; 0x01
    10a2:	0a e0       	ldi	r16, 0x0A	; 10
    10a4:	0a 83       	std	Y+2, r16	; 0x02
    10a6:	8f e0       	ldi	r24, 0x0F	; 15
    10a8:	8b 83       	std	Y+3, r24	; 0x03
    10aa:	63 e0       	ldi	r22, 0x03	; 3
    10ac:	ce 01       	movw	r24, r28
    10ae:	01 96       	adiw	r24, 0x01	; 1
    10b0:	0e 94 7d 09 	call	0x12fa	; 0x12fa <TWI_Start_Transceiver_With_Data>
    10b4:	19 83       	std	Y+1, r17	; 0x01
    10b6:	80 e1       	ldi	r24, 0x10	; 16
    10b8:	8a 83       	std	Y+2, r24	; 0x02
    10ba:	89 e1       	ldi	r24, 0x19	; 25
    10bc:	8c 83       	std	Y+4, r24	; 0x04
    10be:	62 e0       	ldi	r22, 0x02	; 2
    10c0:	ce 01       	movw	r24, r28
    10c2:	01 96       	adiw	r24, 0x01	; 1
    10c4:	0e 94 7d 09 	call	0x12fa	; 0x12fa <TWI_Start_Transceiver_With_Data>
    10c8:	64 e0       	ldi	r22, 0x04	; 4
    10ca:	ce 01       	movw	r24, r28
    10cc:	04 96       	adiw	r24, 0x04	; 4
    10ce:	0e 94 7d 09 	call	0x12fa	; 0x12fa <TWI_Start_Transceiver_With_Data>
    10d2:	64 e0       	ldi	r22, 0x04	; 4
    10d4:	ce 01       	movw	r24, r28
    10d6:	04 96       	adiw	r24, 0x04	; 4
    10d8:	0e 94 aa 09 	call	0x1354	; 0x1354 <TWI_Get_Data_From_Transceiver>
    10dc:	ec e9       	ldi	r30, 0x9C	; 156
    10de:	f2 e0       	ldi	r31, 0x02	; 2
    10e0:	8d 81       	ldd	r24, Y+5	; 0x05
    10e2:	80 83       	st	Z, r24
    10e4:	8e 81       	ldd	r24, Y+6	; 0x06
    10e6:	81 83       	std	Z+1, r24	; 0x01
    10e8:	8f 81       	ldd	r24, Y+7	; 0x07
    10ea:	82 83       	std	Z+2, r24	; 0x02
    10ec:	19 83       	std	Y+1, r17	; 0x01
    10ee:	0a 83       	std	Y+2, r16	; 0x02
    10f0:	1b 82       	std	Y+3, r1	; 0x03
    10f2:	63 e0       	ldi	r22, 0x03	; 3
    10f4:	ce 01       	movw	r24, r28
    10f6:	01 96       	adiw	r24, 0x01	; 1
    10f8:	0e 94 7d 09 	call	0x12fa	; 0x12fa <TWI_Start_Transceiver_With_Data>
    10fc:	87 ec       	ldi	r24, 0xC7	; 199
    10fe:	90 e0       	ldi	r25, 0x00	; 0
    1100:	01 97       	sbiw	r24, 0x01	; 1
    1102:	f1 f7       	brne	.-4      	; 0x1100 <_Z22get_magnetometer_scalev+0x7a>
    1104:	00 c0       	rjmp	.+0      	; 0x1106 <_Z22get_magnetometer_scalev+0x80>
    1106:	00 00       	nop
    1108:	80 e0       	ldi	r24, 0x00	; 0
    110a:	27 96       	adiw	r28, 0x07	; 7
    110c:	0f b6       	in	r0, 0x3f	; 63
    110e:	f8 94       	cli
    1110:	de bf       	out	0x3e, r29	; 62
    1112:	0f be       	out	0x3f, r0	; 63
    1114:	cd bf       	out	0x3d, r28	; 61
    1116:	df 91       	pop	r29
    1118:	cf 91       	pop	r28
    111a:	1f 91       	pop	r17
    111c:	0f 91       	pop	r16
    111e:	08 95       	ret

00001120 <main>:
    1120:	ff 92       	push	r15
    1122:	0f 93       	push	r16
    1124:	1f 93       	push	r17
    1126:	cf 93       	push	r28
    1128:	df 93       	push	r29
    112a:	cd b7       	in	r28, 0x3d	; 61
    112c:	de b7       	in	r29, 0x3e	; 62
    112e:	e5 97       	sbiw	r28, 0x35	; 53
    1130:	0f b6       	in	r0, 0x3f	; 63
    1132:	f8 94       	cli
    1134:	de bf       	out	0x3e, r29	; 62
    1136:	0f be       	out	0x3f, r0	; 63
    1138:	cd bf       	out	0x3d, r28	; 61
    113a:	0e 94 73 09 	call	0x12e6	; 0x12e6 <TWI_Master_Initialise>
    113e:	0e 94 4b 0a 	call	0x1496	; 0x1496 <UART_initialise>
    1142:	78 94       	sei
    1144:	0a e6       	ldi	r16, 0x6A	; 106
    1146:	12 e0       	ldi	r17, 0x02	; 2
    1148:	8f e2       	ldi	r24, 0x2F	; 47
    114a:	e7 eb       	ldi	r30, 0xB7	; 183
    114c:	f1 e0       	ldi	r31, 0x01	; 1
    114e:	d8 01       	movw	r26, r16
    1150:	01 90       	ld	r0, Z+
    1152:	0d 92       	st	X+, r0
    1154:	8a 95       	dec	r24
    1156:	e1 f7       	brne	.-8      	; 0x1150 <main+0x30>
    1158:	f8 01       	movw	r30, r16
    115a:	01 90       	ld	r0, Z+
    115c:	00 20       	and	r0, r0
    115e:	e9 f7       	brne	.-6      	; 0x115a <main+0x3a>
    1160:	31 97       	sbiw	r30, 0x01	; 1
    1162:	af 01       	movw	r20, r30
    1164:	4a 56       	subi	r20, 0x6A	; 106
    1166:	52 40       	sbci	r21, 0x02	; 2
    1168:	60 e0       	ldi	r22, 0x00	; 0
    116a:	70 e0       	ldi	r23, 0x00	; 0
    116c:	c8 01       	movw	r24, r16
    116e:	0e 94 60 0a 	call	0x14c0	; 0x14c0 <UART_tx>
    1172:	0f 2e       	mov	r0, r31
    1174:	f2 e3       	ldi	r31, 0x32	; 50
    1176:	ff 2e       	mov	r15, r31
    1178:	f0 2d       	mov	r31, r0
    117a:	f8 01       	movw	r30, r16
    117c:	2f 2d       	mov	r18, r15
    117e:	11 92       	st	Z+, r1
    1180:	2a 95       	dec	r18
    1182:	e9 f7       	brne	.-6      	; 0x117e <main+0x5e>
    1184:	8f ef       	ldi	r24, 0xFF	; 255
    1186:	99 e6       	ldi	r25, 0x69	; 105
    1188:	e8 e1       	ldi	r30, 0x18	; 24
    118a:	81 50       	subi	r24, 0x01	; 1
    118c:	90 40       	sbci	r25, 0x00	; 0
    118e:	e0 40       	sbci	r30, 0x00	; 0
    1190:	e1 f7       	brne	.-8      	; 0x118a <main+0x6a>
    1192:	00 c0       	rjmp	.+0      	; 0x1194 <main+0x74>
    1194:	00 00       	nop
    1196:	0e 94 d7 00 	call	0x1ae	; 0x1ae <_Z19MPU_9250_initialisev>
    119a:	8c e1       	ldi	r24, 0x1C	; 28
    119c:	e6 ee       	ldi	r30, 0xE6	; 230
    119e:	f1 e0       	ldi	r31, 0x01	; 1
    11a0:	d8 01       	movw	r26, r16
    11a2:	01 90       	ld	r0, Z+
    11a4:	0d 92       	st	X+, r0
    11a6:	8a 95       	dec	r24
    11a8:	e1 f7       	brne	.-8      	; 0x11a2 <main+0x82>
    11aa:	f8 01       	movw	r30, r16
    11ac:	01 90       	ld	r0, Z+
    11ae:	00 20       	and	r0, r0
    11b0:	e9 f7       	brne	.-6      	; 0x11ac <main+0x8c>
    11b2:	31 97       	sbiw	r30, 0x01	; 1
    11b4:	af 01       	movw	r20, r30
    11b6:	4a 56       	subi	r20, 0x6A	; 106
    11b8:	52 40       	sbci	r21, 0x02	; 2
    11ba:	60 e0       	ldi	r22, 0x00	; 0
    11bc:	70 e0       	ldi	r23, 0x00	; 0
    11be:	c8 01       	movw	r24, r16
    11c0:	0e 94 60 0a 	call	0x14c0	; 0x14c0 <UART_tx>
    11c4:	f8 01       	movw	r30, r16
    11c6:	2f 2d       	mov	r18, r15
    11c8:	11 92       	st	Z+, r1
    11ca:	2a 95       	dec	r18
    11cc:	e9 f7       	brne	.-6      	; 0x11c8 <main+0xa8>
    11ce:	0e 94 12 02 	call	0x424	; 0x424 <_Z23calibrate_accelerometerv>
    11d2:	83 e1       	ldi	r24, 0x13	; 19
    11d4:	e2 e0       	ldi	r30, 0x02	; 2
    11d6:	f2 e0       	ldi	r31, 0x02	; 2
    11d8:	d8 01       	movw	r26, r16
    11da:	01 90       	ld	r0, Z+
    11dc:	0d 92       	st	X+, r0
    11de:	8a 95       	dec	r24
    11e0:	e1 f7       	brne	.-8      	; 0x11da <main+0xba>
    11e2:	f8 01       	movw	r30, r16
    11e4:	01 90       	ld	r0, Z+
    11e6:	00 20       	and	r0, r0
    11e8:	e9 f7       	brne	.-6      	; 0x11e4 <main+0xc4>
    11ea:	31 97       	sbiw	r30, 0x01	; 1
    11ec:	af 01       	movw	r20, r30
    11ee:	4a 56       	subi	r20, 0x6A	; 106
    11f0:	52 40       	sbci	r21, 0x02	; 2
    11f2:	60 e0       	ldi	r22, 0x00	; 0
    11f4:	70 e0       	ldi	r23, 0x00	; 0
    11f6:	c8 01       	movw	r24, r16
    11f8:	0e 94 60 0a 	call	0x14c0	; 0x14c0 <UART_tx>
    11fc:	f8 01       	movw	r30, r16
    11fe:	2f 2d       	mov	r18, r15
    1200:	11 92       	st	Z+, r1
    1202:	2a 95       	dec	r18
    1204:	e9 f7       	brne	.-6      	; 0x1200 <main+0xe0>
    1206:	0e 94 7a 04 	call	0x8f4	; 0x8f4 <_Z19calibrate_gyroscopev>
    120a:	87 e2       	ldi	r24, 0x27	; 39
    120c:	e5 e1       	ldi	r30, 0x15	; 21
    120e:	f2 e0       	ldi	r31, 0x02	; 2
    1210:	d8 01       	movw	r26, r16
    1212:	01 90       	ld	r0, Z+
    1214:	0d 92       	st	X+, r0
    1216:	8a 95       	dec	r24
    1218:	e1 f7       	brne	.-8      	; 0x1212 <main+0xf2>
    121a:	f8 01       	movw	r30, r16
    121c:	01 90       	ld	r0, Z+
    121e:	00 20       	and	r0, r0
    1220:	e9 f7       	brne	.-6      	; 0x121c <main+0xfc>
    1222:	31 97       	sbiw	r30, 0x01	; 1
    1224:	af 01       	movw	r20, r30
    1226:	4a 56       	subi	r20, 0x6A	; 106
    1228:	52 40       	sbci	r21, 0x02	; 2
    122a:	60 e0       	ldi	r22, 0x00	; 0
    122c:	70 e0       	ldi	r23, 0x00	; 0
    122e:	c8 01       	movw	r24, r16
    1230:	0e 94 60 0a 	call	0x14c0	; 0x14c0 <UART_tx>
    1234:	f8 01       	movw	r30, r16
    1236:	2f 2d       	mov	r18, r15
    1238:	11 92       	st	Z+, r1
    123a:	2a 95       	dec	r18
    123c:	e9 f7       	brne	.-6      	; 0x1238 <main+0x118>
    123e:	8f ef       	ldi	r24, 0xFF	; 255
    1240:	91 e1       	ldi	r25, 0x11	; 17
    1242:	ea e7       	ldi	r30, 0x7A	; 122
    1244:	81 50       	subi	r24, 0x01	; 1
    1246:	90 40       	sbci	r25, 0x00	; 0
    1248:	e0 40       	sbci	r30, 0x00	; 0
    124a:	e1 f7       	brne	.-8      	; 0x1244 <main+0x124>
    124c:	00 c0       	rjmp	.+0      	; 0x124e <main+0x12e>
    124e:	00 00       	nop
    1250:	0e 94 43 08 	call	0x1086	; 0x1086 <_Z22get_magnetometer_scalev>
    1254:	80 e1       	ldi	r24, 0x10	; 16
    1256:	ec e3       	ldi	r30, 0x3C	; 60
    1258:	f2 e0       	ldi	r31, 0x02	; 2
    125a:	d8 01       	movw	r26, r16
    125c:	01 90       	ld	r0, Z+
    125e:	0d 92       	st	X+, r0
    1260:	8a 95       	dec	r24
    1262:	e1 f7       	brne	.-8      	; 0x125c <main+0x13c>
    1264:	f8 01       	movw	r30, r16
    1266:	01 90       	ld	r0, Z+
    1268:	00 20       	and	r0, r0
    126a:	e9 f7       	brne	.-6      	; 0x1266 <main+0x146>
    126c:	31 97       	sbiw	r30, 0x01	; 1
    126e:	af 01       	movw	r20, r30
    1270:	4a 56       	subi	r20, 0x6A	; 106
    1272:	52 40       	sbci	r21, 0x02	; 2
    1274:	60 e0       	ldi	r22, 0x00	; 0
    1276:	70 e0       	ldi	r23, 0x00	; 0
    1278:	c8 01       	movw	r24, r16
    127a:	0e 94 60 0a 	call	0x14c0	; 0x14c0 <UART_tx>
    127e:	f8 01       	movw	r30, r16
    1280:	2f 2d       	mov	r18, r15
    1282:	11 92       	st	Z+, r1
    1284:	2a 95       	dec	r18
    1286:	e9 f7       	brne	.-6      	; 0x1282 <main+0x162>
    1288:	0e 94 b0 06 	call	0xd60	; 0xd60 <_Z22calibrate_magnetometerv>
    128c:	8b e1       	ldi	r24, 0x1B	; 27
    128e:	ec e4       	ldi	r30, 0x4C	; 76
    1290:	f2 e0       	ldi	r31, 0x02	; 2
    1292:	d8 01       	movw	r26, r16
    1294:	01 90       	ld	r0, Z+
    1296:	0d 92       	st	X+, r0
    1298:	8a 95       	dec	r24
    129a:	e1 f7       	brne	.-8      	; 0x1294 <main+0x174>
    129c:	f8 01       	movw	r30, r16
    129e:	01 90       	ld	r0, Z+
    12a0:	00 20       	and	r0, r0
    12a2:	e9 f7       	brne	.-6      	; 0x129e <main+0x17e>
    12a4:	31 97       	sbiw	r30, 0x01	; 1
    12a6:	af 01       	movw	r20, r30
    12a8:	4a 56       	subi	r20, 0x6A	; 106
    12aa:	52 40       	sbci	r21, 0x02	; 2
    12ac:	60 e0       	ldi	r22, 0x00	; 0
    12ae:	70 e0       	ldi	r23, 0x00	; 0
    12b0:	c8 01       	movw	r24, r16
    12b2:	0e 94 60 0a 	call	0x14c0	; 0x14c0 <UART_tx>
    12b6:	f8 01       	movw	r30, r16
    12b8:	11 92       	st	Z+, r1
    12ba:	fa 94       	dec	r15
    12bc:	e9 f7       	brne	.-6      	; 0x12b8 <main+0x198>
    12be:	0e 94 4e 01 	call	0x29c	; 0x29c <_Z20set_accelerometer_4gv>
    12c2:	ce 01       	movw	r24, r28
    12c4:	01 96       	adiw	r24, 0x01	; 1
    12c6:	0e 94 a4 00 	call	0x148	; 0x148 <_ZN6MahonyC1Ev>
    12ca:	80 e0       	ldi	r24, 0x00	; 0
    12cc:	90 e0       	ldi	r25, 0x00	; 0
    12ce:	e5 96       	adiw	r28, 0x35	; 53
    12d0:	0f b6       	in	r0, 0x3f	; 63
    12d2:	f8 94       	cli
    12d4:	de bf       	out	0x3e, r29	; 62
    12d6:	0f be       	out	0x3f, r0	; 63
    12d8:	cd bf       	out	0x3d, r28	; 61
    12da:	df 91       	pop	r29
    12dc:	cf 91       	pop	r28
    12de:	1f 91       	pop	r17
    12e0:	0f 91       	pop	r16
    12e2:	ff 90       	pop	r15
    12e4:	08 95       	ret

000012e6 <TWI_Master_Initialise>:
void TWI_Start_Transceiver( void )
{
  while ( TWI_Transceiver_Busy() );             // Wait until TWI is ready for next transmission.
  TWI_statusReg.all = 0;      
  TWI_state         = TWI_NO_STATE ;
  TWCR = (1<<TWEN)|                             // TWI Interface enabled.
    12e6:	82 e0       	ldi	r24, 0x02	; 2
    12e8:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7e00b8>
    12ec:	8f ef       	ldi	r24, 0xFF	; 255
    12ee:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
    12f2:	84 e0       	ldi	r24, 0x04	; 4
    12f4:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    12f8:	08 95       	ret

000012fa <TWI_Start_Transceiver_With_Data>:
    12fa:	cf 93       	push	r28
    12fc:	df 93       	push	r29
    12fe:	ec 01       	movw	r28, r24
    1300:	ec eb       	ldi	r30, 0xBC	; 188
    1302:	f0 e0       	ldi	r31, 0x00	; 0
    1304:	90 81       	ld	r25, Z
    1306:	90 fd       	sbrc	r25, 0
    1308:	fd cf       	rjmp	.-6      	; 0x1304 <TWI_Start_Transceiver_With_Data+0xa>
    130a:	60 93 b9 02 	sts	0x02B9, r22	; 0x8002b9 <TWI_msgSize>
    130e:	88 81       	ld	r24, Y
    1310:	80 93 ba 02 	sts	0x02BA, r24	; 0x8002ba <TWI_buf>
    1314:	80 fd       	sbrc	r24, 0
    1316:	13 c0       	rjmp	.+38     	; 0x133e <TWI_Start_Transceiver_With_Data+0x44>
    1318:	62 30       	cpi	r22, 0x02	; 2
    131a:	88 f0       	brcs	.+34     	; 0x133e <TWI_Start_Transceiver_With_Data+0x44>
    131c:	fe 01       	movw	r30, r28
    131e:	31 96       	adiw	r30, 0x01	; 1
    1320:	ab eb       	ldi	r26, 0xBB	; 187
    1322:	b2 e0       	ldi	r27, 0x02	; 2
    1324:	62 50       	subi	r22, 0x02	; 2
    1326:	26 2f       	mov	r18, r22
    1328:	30 e0       	ldi	r19, 0x00	; 0
    132a:	2e 5f       	subi	r18, 0xFE	; 254
    132c:	3f 4f       	sbci	r19, 0xFF	; 255
    132e:	ce 01       	movw	r24, r28
    1330:	82 0f       	add	r24, r18
    1332:	93 1f       	adc	r25, r19
    1334:	21 91       	ld	r18, Z+
    1336:	2d 93       	st	X+, r18
    1338:	e8 17       	cp	r30, r24
    133a:	f9 07       	cpc	r31, r25
    133c:	d9 f7       	brne	.-10     	; 0x1334 <TWI_Start_Transceiver_With_Data+0x3a>
    133e:	10 92 b8 02 	sts	0x02B8, r1	; 0x8002b8 <TWI_statusReg>
    1342:	88 ef       	ldi	r24, 0xF8	; 248
    1344:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
    1348:	85 ea       	ldi	r24, 0xA5	; 165
    134a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    134e:	df 91       	pop	r29
    1350:	cf 91       	pop	r28
    1352:	08 95       	ret

00001354 <TWI_Get_Data_From_Transceiver>:
requested (including the address field) in the function call. The function will hold execution (loop)
until the TWI_ISR has completed with the previous operation, before reading out the data and returning.
If there was an error in the previous transmission the function will return the TWI error code.
****************************************************************************/
unsigned char TWI_Get_Data_From_Transceiver( unsigned char *msg, unsigned char msgSize )
{
    1354:	ac 01       	movw	r20, r24
/****************************************************************************
Call this function to test if the TWI_ISR is busy transmitting.
****************************************************************************/
unsigned char TWI_Transceiver_Busy( void )
{
  return ( TWCR & (1<<TWIE) );                  // IF TWI Interrupt is enabled then the Transceiver is busy
    1356:	ec eb       	ldi	r30, 0xBC	; 188
    1358:	f0 e0       	ldi	r31, 0x00	; 0
    135a:	90 81       	ld	r25, Z
****************************************************************************/
unsigned char TWI_Get_Data_From_Transceiver( unsigned char *msg, unsigned char msgSize )
{
  unsigned char i;

  while ( TWI_Transceiver_Busy() );             // Wait until TWI is ready for next transmission.
    135c:	90 fd       	sbrc	r25, 0
    135e:	fd cf       	rjmp	.-6      	; 0x135a <TWI_Get_Data_From_Transceiver+0x6>

  if( TWI_statusReg.lastTransOK )               // Last transmission competed successfully.              
    1360:	80 91 b8 02 	lds	r24, 0x02B8	; 0x8002b8 <TWI_statusReg>
    1364:	80 ff       	sbrs	r24, 0
    1366:	12 c0       	rjmp	.+36     	; 0x138c <TWI_Get_Data_From_Transceiver+0x38>
  {                                             
    for ( i=0; i<msgSize; i++ )                 // Copy data from Transceiver buffer.
    1368:	66 23       	and	r22, r22
    136a:	81 f0       	breq	.+32     	; 0x138c <TWI_Get_Data_From_Transceiver+0x38>
    136c:	aa eb       	ldi	r26, 0xBA	; 186
    136e:	b2 e0       	ldi	r27, 0x02	; 2
    1370:	fa 01       	movw	r30, r20
    1372:	61 50       	subi	r22, 0x01	; 1
    1374:	26 2f       	mov	r18, r22
    1376:	30 e0       	ldi	r19, 0x00	; 0
    1378:	2f 5f       	subi	r18, 0xFF	; 255
    137a:	3f 4f       	sbci	r19, 0xFF	; 255
    137c:	ca 01       	movw	r24, r20
    137e:	82 0f       	add	r24, r18
    1380:	93 1f       	adc	r25, r19
    {
      msg[ i ] = TWI_buf[ i ];
    1382:	2d 91       	ld	r18, X+
    1384:	21 93       	st	Z+, r18

  while ( TWI_Transceiver_Busy() );             // Wait until TWI is ready for next transmission.

  if( TWI_statusReg.lastTransOK )               // Last transmission competed successfully.              
  {                                             
    for ( i=0; i<msgSize; i++ )                 // Copy data from Transceiver buffer.
    1386:	e8 17       	cp	r30, r24
    1388:	f9 07       	cpc	r31, r25
    138a:	d9 f7       	brne	.-10     	; 0x1382 <TWI_Get_Data_From_Transceiver+0x2e>
    {
      msg[ i ] = TWI_buf[ i ];
    }
  }
  return( TWI_statusReg.lastTransOK );                                   
    138c:	80 91 b8 02 	lds	r24, 0x02B8	; 0x8002b8 <TWI_statusReg>
}
    1390:	81 70       	andi	r24, 0x01	; 1
    1392:	08 95       	ret

00001394 <__vector_24>:
This function is the Interrupt Service Routine (ISR), and called when the TWI interrupt is triggered;
that is whenever a TWI event has occurred. This function should not be called directly from the main
application.
****************************************************************************/
ISR(TWI_vect)
{
    1394:	1f 92       	push	r1
    1396:	0f 92       	push	r0
    1398:	0f b6       	in	r0, 0x3f	; 63
    139a:	0f 92       	push	r0
    139c:	11 24       	eor	r1, r1
    139e:	2f 93       	push	r18
    13a0:	3f 93       	push	r19
    13a2:	8f 93       	push	r24
    13a4:	9f 93       	push	r25
    13a6:	af 93       	push	r26
    13a8:	bf 93       	push	r27
    13aa:	ef 93       	push	r30
    13ac:	ff 93       	push	r31
  static unsigned char TWI_bufPtr;
  
  switch (TWSR)
    13ae:	e0 91 b9 00 	lds	r30, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
    13b2:	8e 2f       	mov	r24, r30
    13b4:	90 e0       	ldi	r25, 0x00	; 0
    13b6:	fc 01       	movw	r30, r24
    13b8:	38 97       	sbiw	r30, 0x08	; 8
    13ba:	e1 35       	cpi	r30, 0x51	; 81
    13bc:	f1 05       	cpc	r31, r1
    13be:	08 f0       	brcs	.+2      	; 0x13c2 <__vector_24+0x2e>
    13c0:	56 c0       	rjmp	.+172    	; 0x146e <__vector_24+0xda>
    13c2:	ec 5c       	subi	r30, 0xCC	; 204
    13c4:	ff 4f       	sbci	r31, 0xFF	; 255
    13c6:	0c 94 9e 0b 	jmp	0x173c	; 0x173c <__tablejump2__>
  {
    case TWI_START:             // START has been transmitted  
    case TWI_REP_START:         // Repeated START has been transmitted
      TWI_bufPtr = 0;                                     // Set buffer pointer to the TWI Address location
    13ca:	10 92 b7 02 	sts	0x02B7, r1	; 0x8002b7 <TWI_bufPtr.1672>
    case TWI_MTX_ADR_ACK:       // SLA+W has been transmitted and ACK received
    case TWI_MTX_DATA_ACK:      // Data byte has been transmitted and ACK received
      if (TWI_bufPtr < TWI_msgSize)
    13ce:	e0 91 b7 02 	lds	r30, 0x02B7	; 0x8002b7 <TWI_bufPtr.1672>
    13d2:	80 91 b9 02 	lds	r24, 0x02B9	; 0x8002b9 <TWI_msgSize>
    13d6:	e8 17       	cp	r30, r24
    13d8:	70 f4       	brcc	.+28     	; 0x13f6 <__vector_24+0x62>
      {
        TWDR = TWI_buf[TWI_bufPtr++];
    13da:	81 e0       	ldi	r24, 0x01	; 1
    13dc:	8e 0f       	add	r24, r30
    13de:	80 93 b7 02 	sts	0x02B7, r24	; 0x8002b7 <TWI_bufPtr.1672>
    13e2:	f0 e0       	ldi	r31, 0x00	; 0
    13e4:	e6 54       	subi	r30, 0x46	; 70
    13e6:	fd 4f       	sbci	r31, 0xFD	; 253
    13e8:	80 81       	ld	r24, Z
    13ea:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
        TWCR = (1<<TWEN)|                                 // TWI Interface enabled
    13ee:	85 e8       	ldi	r24, 0x85	; 133
    13f0:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    13f4:	43 c0       	rjmp	.+134    	; 0x147c <__vector_24+0xe8>
               (1<<TWIE)|(1<<TWINT)|                      // Enable TWI Interrupt and clear the flag to send byte
               (0<<TWEA)|(0<<TWSTA)|(0<<TWSTO)|           //
               (0<<TWWC);                                 //  
      }else                    // Send STOP after last byte
      {
        TWI_statusReg.lastTransOK = TRUE;                 // Set status bits to completed successfully. 
    13f6:	80 91 b8 02 	lds	r24, 0x02B8	; 0x8002b8 <TWI_statusReg>
    13fa:	81 60       	ori	r24, 0x01	; 1
    13fc:	80 93 b8 02 	sts	0x02B8, r24	; 0x8002b8 <TWI_statusReg>
        TWCR = (1<<TWEN)|                                 // TWI Interface enabled
    1400:	84 e9       	ldi	r24, 0x94	; 148
    1402:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    1406:	3a c0       	rjmp	.+116    	; 0x147c <__vector_24+0xe8>
               (0<<TWEA)|(0<<TWSTA)|(1<<TWSTO)|           // Initiate a STOP condition.
               (0<<TWWC);                                 //
      }
      break;
    case TWI_MRX_DATA_ACK:      // Data byte has been received and ACK transmitted
      TWI_buf[TWI_bufPtr++] = TWDR;
    1408:	e0 91 b7 02 	lds	r30, 0x02B7	; 0x8002b7 <TWI_bufPtr.1672>
    140c:	81 e0       	ldi	r24, 0x01	; 1
    140e:	8e 0f       	add	r24, r30
    1410:	80 93 b7 02 	sts	0x02B7, r24	; 0x8002b7 <TWI_bufPtr.1672>
    1414:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
    1418:	f0 e0       	ldi	r31, 0x00	; 0
    141a:	e6 54       	subi	r30, 0x46	; 70
    141c:	fd 4f       	sbci	r31, 0xFD	; 253
    141e:	80 83       	st	Z, r24
    case TWI_MRX_ADR_ACK:       // SLA+R has been transmitted and ACK received
      if (TWI_bufPtr < (TWI_msgSize-1) )                  // Detect the last byte to NACK it.
    1420:	20 91 b7 02 	lds	r18, 0x02B7	; 0x8002b7 <TWI_bufPtr.1672>
    1424:	30 e0       	ldi	r19, 0x00	; 0
    1426:	80 91 b9 02 	lds	r24, 0x02B9	; 0x8002b9 <TWI_msgSize>
    142a:	90 e0       	ldi	r25, 0x00	; 0
    142c:	01 97       	sbiw	r24, 0x01	; 1
    142e:	28 17       	cp	r18, r24
    1430:	39 07       	cpc	r19, r25
    1432:	24 f4       	brge	.+8      	; 0x143c <__vector_24+0xa8>
      {
        TWCR = (1<<TWEN)|                                 // TWI Interface enabled
    1434:	85 ec       	ldi	r24, 0xC5	; 197
    1436:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    143a:	20 c0       	rjmp	.+64     	; 0x147c <__vector_24+0xe8>
               (1<<TWIE)|(1<<TWINT)|                      // Enable TWI Interrupt and clear the flag to read next byte
               (1<<TWEA)|(0<<TWSTA)|(0<<TWSTO)|           // Send ACK after reception
               (0<<TWWC);                                 //  
      }else                    // Send NACK after next reception
      {
        TWCR = (1<<TWEN)|                                 // TWI Interface enabled
    143c:	85 e8       	ldi	r24, 0x85	; 133
    143e:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    1442:	1c c0       	rjmp	.+56     	; 0x147c <__vector_24+0xe8>
               (0<<TWEA)|(0<<TWSTA)|(0<<TWSTO)|           // Send NACK after reception
               (0<<TWWC);                                 // 
      }    
      break; 
    case TWI_MRX_DATA_NACK:     // Data byte has been received and NACK transmitted
      TWI_buf[TWI_bufPtr] = TWDR;
    1444:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
    1448:	e0 91 b7 02 	lds	r30, 0x02B7	; 0x8002b7 <TWI_bufPtr.1672>
    144c:	f0 e0       	ldi	r31, 0x00	; 0
    144e:	e6 54       	subi	r30, 0x46	; 70
    1450:	fd 4f       	sbci	r31, 0xFD	; 253
    1452:	80 83       	st	Z, r24
      TWI_statusReg.lastTransOK = TRUE;                 // Set status bits to completed successfully. 
    1454:	80 91 b8 02 	lds	r24, 0x02B8	; 0x8002b8 <TWI_statusReg>
    1458:	81 60       	ori	r24, 0x01	; 1
    145a:	80 93 b8 02 	sts	0x02B8, r24	; 0x8002b8 <TWI_statusReg>
      TWCR = (1<<TWEN)|                                 // TWI Interface enabled
    145e:	84 e9       	ldi	r24, 0x94	; 148
    1460:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
             (0<<TWIE)|(1<<TWINT)|                      // Disable TWI Interrupt and clear the flag
             (0<<TWEA)|(0<<TWSTA)|(1<<TWSTO)|           // Initiate a STOP condition.
             (0<<TWWC);                                 //
      break;      
    1464:	0b c0       	rjmp	.+22     	; 0x147c <__vector_24+0xe8>
    case TWI_ARB_LOST:          // Arbitration lost
      TWCR = (1<<TWEN)|                                 // TWI Interface enabled
    1466:	85 ea       	ldi	r24, 0xA5	; 165
    1468:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
             (1<<TWIE)|(1<<TWINT)|                      // Enable TWI Interrupt and clear the flag
             (0<<TWEA)|(1<<TWSTA)|(0<<TWSTO)|           // Initiate a (RE)START condition.
             (0<<TWWC);                                 //
      break;
    146c:	07 c0       	rjmp	.+14     	; 0x147c <__vector_24+0xe8>
    case TWI_MTX_ADR_NACK:      // SLA+W has been transmitted and NACK received
    case TWI_MRX_ADR_NACK:      // SLA+R has been transmitted and NACK received    
    case TWI_MTX_DATA_NACK:     // Data byte has been transmitted and NACK received
    case TWI_BUS_ERROR:         // Bus error due to an illegal START or STOP condition
    default:     
      TWI_state = TWSR;                                 // Store TWSR and automatically sets clears noErrors bit.
    146e:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
    1472:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
                                                        // Reset TWI Interface
      TWCR = (1<<TWEN)|                                 // Enable TWI-interface and release TWI pins
    1476:	84 e0       	ldi	r24, 0x04	; 4
    1478:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
             (0<<TWIE)|(0<<TWINT)|                      // Disable Interrupt
             (0<<TWEA)|(0<<TWSTA)|(0<<TWSTO)|           // No Signal requests
             (0<<TWWC);                                 //
  }
}
    147c:	ff 91       	pop	r31
    147e:	ef 91       	pop	r30
    1480:	bf 91       	pop	r27
    1482:	af 91       	pop	r26
    1484:	9f 91       	pop	r25
    1486:	8f 91       	pop	r24
    1488:	3f 91       	pop	r19
    148a:	2f 91       	pop	r18
    148c:	0f 90       	pop	r0
    148e:	0f be       	out	0x3f, r0	; 63
    1490:	0f 90       	pop	r0
    1492:	1f 90       	pop	r1
    1494:	18 95       	reti

00001496 <UART_initialise>:
			return 1;
		}
		return 0;
	}
	return 0;	
}
    1496:	e0 ec       	ldi	r30, 0xC0	; 192
    1498:	f0 e0       	ldi	r31, 0x00	; 0
    149a:	80 81       	ld	r24, Z
    149c:	10 82       	st	Z, r1
    149e:	e1 ec       	ldi	r30, 0xC1	; 193
    14a0:	f0 e0       	ldi	r31, 0x00	; 0
    14a2:	80 ec       	ldi	r24, 0xC0	; 192
    14a4:	80 83       	st	Z, r24
    14a6:	86 e0       	ldi	r24, 0x06	; 6
    14a8:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
    14ac:	8c e0       	ldi	r24, 0x0C	; 12
    14ae:	90 e0       	ldi	r25, 0x00	; 0
    14b0:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
    14b4:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
    14b8:	80 81       	ld	r24, Z
    14ba:	88 60       	ori	r24, 0x08	; 8
    14bc:	80 83       	st	Z, r24
    14be:	08 95       	ret

000014c0 <UART_tx>:
    14c0:	fc 01       	movw	r30, r24
    14c2:	90 91 ca 02 	lds	r25, 0x02CA	; 0x8002ca <state>
    14c6:	91 11       	cpse	r25, r1
    14c8:	37 c0       	rjmp	.+110    	; 0x1538 <UART_tx+0x78>
    14ca:	41 15       	cp	r20, r1
    14cc:	51 05       	cpc	r21, r1
    14ce:	61 05       	cpc	r22, r1
    14d0:	71 05       	cpc	r23, r1
    14d2:	a1 f1       	breq	.+104    	; 0x153c <UART_tx+0x7c>
    14d4:	81 e0       	ldi	r24, 0x01	; 1
    14d6:	80 93 ca 02 	sts	0x02CA, r24	; 0x8002ca <state>
    14da:	40 93 cf 02 	sts	0x02CF, r20	; 0x8002cf <tx_length>
    14de:	50 93 d0 02 	sts	0x02D0, r21	; 0x8002d0 <tx_length+0x1>
    14e2:	60 93 d1 02 	sts	0x02D1, r22	; 0x8002d1 <tx_length+0x2>
    14e6:	70 93 d2 02 	sts	0x02D2, r23	; 0x8002d2 <tx_length+0x3>
    14ea:	10 92 c6 02 	sts	0x02C6, r1	; 0x8002c6 <tx_cnt>
    14ee:	10 92 c7 02 	sts	0x02C7, r1	; 0x8002c7 <tx_cnt+0x1>
    14f2:	10 92 c8 02 	sts	0x02C8, r1	; 0x8002c8 <tx_cnt+0x2>
    14f6:	10 92 c9 02 	sts	0x02C9, r1	; 0x8002c9 <tx_cnt+0x3>
    14fa:	f0 93 ce 02 	sts	0x02CE, r31	; 0x8002ce <tx_buffer+0x1>
    14fe:	e0 93 cd 02 	sts	0x02CD, r30	; 0x8002cd <tx_buffer>
    1502:	80 81       	ld	r24, Z
    1504:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
    1508:	e1 ec       	ldi	r30, 0xC1	; 193
    150a:	f0 e0       	ldi	r31, 0x00	; 0
    150c:	80 81       	ld	r24, Z
    150e:	80 62       	ori	r24, 0x20	; 32
    1510:	80 83       	st	Z, r24
    1512:	80 91 ca 02 	lds	r24, 0x02CA	; 0x8002ca <state>
    1516:	81 30       	cpi	r24, 0x01	; 1
    1518:	99 f4       	brne	.+38     	; 0x1540 <UART_tx+0x80>
    151a:	f8 94       	cli
    151c:	83 b7       	in	r24, 0x33	; 51
    151e:	81 60       	ori	r24, 0x01	; 1
    1520:	83 bf       	out	0x33, r24	; 51
    1522:	78 94       	sei
    1524:	88 95       	sleep
    1526:	83 b7       	in	r24, 0x33	; 51
    1528:	8e 7f       	andi	r24, 0xFE	; 254
    152a:	83 bf       	out	0x33, r24	; 51
    152c:	80 91 ca 02 	lds	r24, 0x02CA	; 0x8002ca <state>
    1530:	81 30       	cpi	r24, 0x01	; 1
    1532:	99 f3       	breq	.-26     	; 0x151a <UART_tx+0x5a>
    1534:	81 e0       	ldi	r24, 0x01	; 1
    1536:	08 95       	ret
    1538:	80 e0       	ldi	r24, 0x00	; 0
    153a:	08 95       	ret
    153c:	80 e0       	ldi	r24, 0x00	; 0
    153e:	08 95       	ret
    1540:	81 e0       	ldi	r24, 0x01	; 1
    1542:	08 95       	ret

00001544 <__vector_18>:

ISR(USART_RX_vect){
    1544:	1f 92       	push	r1
    1546:	0f 92       	push	r0
    1548:	0f b6       	in	r0, 0x3f	; 63
    154a:	0f 92       	push	r0
    154c:	11 24       	eor	r1, r1
    154e:	2f 93       	push	r18
    1550:	3f 93       	push	r19
    1552:	4f 93       	push	r20
    1554:	5f 93       	push	r21
    1556:	6f 93       	push	r22
    1558:	7f 93       	push	r23
    155a:	8f 93       	push	r24
    155c:	9f 93       	push	r25
    155e:	af 93       	push	r26
    1560:	bf 93       	push	r27
    1562:	cf 93       	push	r28
    1564:	df 93       	push	r29
    1566:	ef 93       	push	r30
    1568:	ff 93       	push	r31
	rx_buffer[rx_cnt] = UDR0;
    156a:	c0 91 cb 02 	lds	r28, 0x02CB	; 0x8002cb <rx_buffer>
    156e:	d0 91 cc 02 	lds	r29, 0x02CC	; 0x8002cc <rx_buffer+0x1>
    1572:	80 91 c2 02 	lds	r24, 0x02C2	; 0x8002c2 <rx_cnt>
    1576:	90 91 c3 02 	lds	r25, 0x02C3	; 0x8002c3 <rx_cnt+0x1>
    157a:	a0 91 c4 02 	lds	r26, 0x02C4	; 0x8002c4 <rx_cnt+0x2>
    157e:	b0 91 c5 02 	lds	r27, 0x02C5	; 0x8002c5 <rx_cnt+0x3>
    1582:	20 91 c6 00 	lds	r18, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
    1586:	fe 01       	movw	r30, r28
    1588:	e8 0f       	add	r30, r24
    158a:	f9 1f       	adc	r31, r25
    158c:	20 83       	st	Z, r18
	if(rx_cnt > 0)
    158e:	80 91 c2 02 	lds	r24, 0x02C2	; 0x8002c2 <rx_cnt>
    1592:	90 91 c3 02 	lds	r25, 0x02C3	; 0x8002c3 <rx_cnt+0x1>
    1596:	a0 91 c4 02 	lds	r26, 0x02C4	; 0x8002c4 <rx_cnt+0x2>
    159a:	b0 91 c5 02 	lds	r27, 0x02C5	; 0x8002c5 <rx_cnt+0x3>
    159e:	89 2b       	or	r24, r25
    15a0:	8a 2b       	or	r24, r26
    15a2:	8b 2b       	or	r24, r27
    15a4:	69 f1       	breq	.+90     	; 0x1600 <__vector_18+0xbc>
		if(memcmp(&rx_buffer[rx_cnt-1], rx_terminator, 2)){
    15a6:	80 91 c2 02 	lds	r24, 0x02C2	; 0x8002c2 <rx_cnt>
    15aa:	90 91 c3 02 	lds	r25, 0x02C3	; 0x8002c3 <rx_cnt+0x1>
    15ae:	a0 91 c4 02 	lds	r26, 0x02C4	; 0x8002c4 <rx_cnt+0x2>
    15b2:	b0 91 c5 02 	lds	r27, 0x02C5	; 0x8002c5 <rx_cnt+0x3>
    15b6:	01 97       	sbiw	r24, 0x01	; 1
    15b8:	42 e0       	ldi	r20, 0x02	; 2
    15ba:	50 e0       	ldi	r21, 0x00	; 0
    15bc:	67 e6       	ldi	r22, 0x67	; 103
    15be:	72 e0       	ldi	r23, 0x02	; 2
    15c0:	8c 0f       	add	r24, r28
    15c2:	9d 1f       	adc	r25, r29
    15c4:	0e 94 7e 0d 	call	0x1afc	; 0x1afc <memcmp>
    15c8:	89 2b       	or	r24, r25
    15ca:	d1 f0       	breq	.+52     	; 0x1600 <__vector_18+0xbc>
			// In this case, we just append \0 and disable the UART reception, then set correct state
			rx_buffer[rx_cnt + 1] = '\0';
    15cc:	80 91 c2 02 	lds	r24, 0x02C2	; 0x8002c2 <rx_cnt>
    15d0:	90 91 c3 02 	lds	r25, 0x02C3	; 0x8002c3 <rx_cnt+0x1>
    15d4:	a0 91 c4 02 	lds	r26, 0x02C4	; 0x8002c4 <rx_cnt+0x2>
    15d8:	b0 91 c5 02 	lds	r27, 0x02C5	; 0x8002c5 <rx_cnt+0x3>
    15dc:	c8 0f       	add	r28, r24
    15de:	d9 1f       	adc	r29, r25
    15e0:	19 82       	std	Y+1, r1	; 0x01
			if(state == tx_rx)
    15e2:	80 91 ca 02 	lds	r24, 0x02CA	; 0x8002ca <state>
    15e6:	83 30       	cpi	r24, 0x03	; 3
    15e8:	21 f4       	brne	.+8      	; 0x15f2 <__vector_18+0xae>
				state = tx;
    15ea:	81 e0       	ldi	r24, 0x01	; 1
    15ec:	80 93 ca 02 	sts	0x02CA, r24	; 0x8002ca <state>
    15f0:	02 c0       	rjmp	.+4      	; 0x15f6 <__vector_18+0xb2>
			else
				state = waiting;
    15f2:	10 92 ca 02 	sts	0x02CA, r1	; 0x8002ca <state>
			UART_rx_disable();
    15f6:	e1 ec       	ldi	r30, 0xC1	; 193
    15f8:	f0 e0       	ldi	r31, 0x00	; 0
    15fa:	80 81       	ld	r24, Z
    15fc:	8f 7e       	andi	r24, 0xEF	; 239
    15fe:	80 83       	st	Z, r24
		}
	++rx_cnt;
    1600:	80 91 c2 02 	lds	r24, 0x02C2	; 0x8002c2 <rx_cnt>
    1604:	90 91 c3 02 	lds	r25, 0x02C3	; 0x8002c3 <rx_cnt+0x1>
    1608:	a0 91 c4 02 	lds	r26, 0x02C4	; 0x8002c4 <rx_cnt+0x2>
    160c:	b0 91 c5 02 	lds	r27, 0x02C5	; 0x8002c5 <rx_cnt+0x3>
    1610:	01 96       	adiw	r24, 0x01	; 1
    1612:	a1 1d       	adc	r26, r1
    1614:	b1 1d       	adc	r27, r1
    1616:	80 93 c2 02 	sts	0x02C2, r24	; 0x8002c2 <rx_cnt>
    161a:	90 93 c3 02 	sts	0x02C3, r25	; 0x8002c3 <rx_cnt+0x1>
    161e:	a0 93 c4 02 	sts	0x02C4, r26	; 0x8002c4 <rx_cnt+0x2>
    1622:	b0 93 c5 02 	sts	0x02C5, r27	; 0x8002c5 <rx_cnt+0x3>
}
    1626:	ff 91       	pop	r31
    1628:	ef 91       	pop	r30
    162a:	df 91       	pop	r29
    162c:	cf 91       	pop	r28
    162e:	bf 91       	pop	r27
    1630:	af 91       	pop	r26
    1632:	9f 91       	pop	r25
    1634:	8f 91       	pop	r24
    1636:	7f 91       	pop	r23
    1638:	6f 91       	pop	r22
    163a:	5f 91       	pop	r21
    163c:	4f 91       	pop	r20
    163e:	3f 91       	pop	r19
    1640:	2f 91       	pop	r18
    1642:	0f 90       	pop	r0
    1644:	0f be       	out	0x3f, r0	; 63
    1646:	0f 90       	pop	r0
    1648:	1f 90       	pop	r1
    164a:	18 95       	reti

0000164c <__vector_19>:

ISR(USART_UDRE_vect){
    164c:	1f 92       	push	r1
    164e:	0f 92       	push	r0
    1650:	0f b6       	in	r0, 0x3f	; 63
    1652:	0f 92       	push	r0
    1654:	11 24       	eor	r1, r1
    1656:	2f 93       	push	r18
    1658:	3f 93       	push	r19
    165a:	4f 93       	push	r20
    165c:	5f 93       	push	r21
    165e:	6f 93       	push	r22
    1660:	7f 93       	push	r23
    1662:	8f 93       	push	r24
    1664:	9f 93       	push	r25
    1666:	af 93       	push	r26
    1668:	bf 93       	push	r27
    166a:	ef 93       	push	r30
    166c:	ff 93       	push	r31
	++tx_cnt;// increment txCnt (since the byte has been loaded in transmitter
    166e:	80 91 c6 02 	lds	r24, 0x02C6	; 0x8002c6 <tx_cnt>
    1672:	90 91 c7 02 	lds	r25, 0x02C7	; 0x8002c7 <tx_cnt+0x1>
    1676:	a0 91 c8 02 	lds	r26, 0x02C8	; 0x8002c8 <tx_cnt+0x2>
    167a:	b0 91 c9 02 	lds	r27, 0x02C9	; 0x8002c9 <tx_cnt+0x3>
    167e:	01 96       	adiw	r24, 0x01	; 1
    1680:	a1 1d       	adc	r26, r1
    1682:	b1 1d       	adc	r27, r1
    1684:	80 93 c6 02 	sts	0x02C6, r24	; 0x8002c6 <tx_cnt>
    1688:	90 93 c7 02 	sts	0x02C7, r25	; 0x8002c7 <tx_cnt+0x1>
    168c:	a0 93 c8 02 	sts	0x02C8, r26	; 0x8002c8 <tx_cnt+0x2>
    1690:	b0 93 c9 02 	sts	0x02C9, r27	; 0x8002c9 <tx_cnt+0x3>
	if(tx_cnt < tx_length){
    1694:	40 91 c6 02 	lds	r20, 0x02C6	; 0x8002c6 <tx_cnt>
    1698:	50 91 c7 02 	lds	r21, 0x02C7	; 0x8002c7 <tx_cnt+0x1>
    169c:	60 91 c8 02 	lds	r22, 0x02C8	; 0x8002c8 <tx_cnt+0x2>
    16a0:	70 91 c9 02 	lds	r23, 0x02C9	; 0x8002c9 <tx_cnt+0x3>
    16a4:	80 91 cf 02 	lds	r24, 0x02CF	; 0x8002cf <tx_length>
    16a8:	90 91 d0 02 	lds	r25, 0x02D0	; 0x8002d0 <tx_length+0x1>
    16ac:	a0 91 d1 02 	lds	r26, 0x02D1	; 0x8002d1 <tx_length+0x2>
    16b0:	b0 91 d2 02 	lds	r27, 0x02D2	; 0x8002d2 <tx_length+0x3>
    16b4:	48 17       	cp	r20, r24
    16b6:	59 07       	cpc	r21, r25
    16b8:	6a 07       	cpc	r22, r26
    16ba:	7b 07       	cpc	r23, r27
    16bc:	98 f4       	brcc	.+38     	; 0x16e4 <__vector_19+0x98>
		UDR0 = tx_buffer[tx_cnt];
    16be:	80 91 c6 02 	lds	r24, 0x02C6	; 0x8002c6 <tx_cnt>
    16c2:	90 91 c7 02 	lds	r25, 0x02C7	; 0x8002c7 <tx_cnt+0x1>
    16c6:	a0 91 c8 02 	lds	r26, 0x02C8	; 0x8002c8 <tx_cnt+0x2>
    16ca:	b0 91 c9 02 	lds	r27, 0x02C9	; 0x8002c9 <tx_cnt+0x3>
    16ce:	20 91 cd 02 	lds	r18, 0x02CD	; 0x8002cd <tx_buffer>
    16d2:	30 91 ce 02 	lds	r19, 0x02CE	; 0x8002ce <tx_buffer+0x1>
    16d6:	f9 01       	movw	r30, r18
    16d8:	e8 0f       	add	r30, r24
    16da:	f9 1f       	adc	r31, r25
    16dc:	80 81       	ld	r24, Z
    16de:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
    16e2:	05 c0       	rjmp	.+10     	; 0x16ee <__vector_19+0xa2>
		//this clears the interrupt flag automatically.
	}
	else{
		//disable UDRE interrupt
		UCSR0B &= ~(1<<UDRIE0);
    16e4:	e1 ec       	ldi	r30, 0xC1	; 193
    16e6:	f0 e0       	ldi	r31, 0x00	; 0
    16e8:	80 81       	ld	r24, Z
    16ea:	8f 7d       	andi	r24, 0xDF	; 223
    16ec:	80 83       	st	Z, r24
		//once last byte has left, TX_vect should trigger, updating the transmit state
	}
}
    16ee:	ff 91       	pop	r31
    16f0:	ef 91       	pop	r30
    16f2:	bf 91       	pop	r27
    16f4:	af 91       	pop	r26
    16f6:	9f 91       	pop	r25
    16f8:	8f 91       	pop	r24
    16fa:	7f 91       	pop	r23
    16fc:	6f 91       	pop	r22
    16fe:	5f 91       	pop	r21
    1700:	4f 91       	pop	r20
    1702:	3f 91       	pop	r19
    1704:	2f 91       	pop	r18
    1706:	0f 90       	pop	r0
    1708:	0f be       	out	0x3f, r0	; 63
    170a:	0f 90       	pop	r0
    170c:	1f 90       	pop	r1
    170e:	18 95       	reti

00001710 <__vector_20>:

ISR(USART_TX_vect){
    1710:	1f 92       	push	r1
    1712:	0f 92       	push	r0
    1714:	0f b6       	in	r0, 0x3f	; 63
    1716:	0f 92       	push	r0
    1718:	11 24       	eor	r1, r1
    171a:	8f 93       	push	r24
	// set state to only rx of coming from tx_rx
	// alternatively, when coming from tx, go back to waiting.
	if(state == tx_rx)
    171c:	80 91 ca 02 	lds	r24, 0x02CA	; 0x8002ca <state>
    1720:	83 30       	cpi	r24, 0x03	; 3
    1722:	21 f4       	brne	.+8      	; 0x172c <__vector_20+0x1c>
		state = rx;
    1724:	82 e0       	ldi	r24, 0x02	; 2
    1726:	80 93 ca 02 	sts	0x02CA, r24	; 0x8002ca <state>
    172a:	02 c0       	rjmp	.+4      	; 0x1730 <__vector_20+0x20>
	else
		state = waiting;
    172c:	10 92 ca 02 	sts	0x02CA, r1	; 0x8002ca <state>
}
    1730:	8f 91       	pop	r24
    1732:	0f 90       	pop	r0
    1734:	0f be       	out	0x3f, r0	; 63
    1736:	0f 90       	pop	r0
    1738:	1f 90       	pop	r1
    173a:	18 95       	reti

0000173c <__tablejump2__>:
    173c:	ee 0f       	add	r30, r30
    173e:	ff 1f       	adc	r31, r31
    1740:	05 90       	lpm	r0, Z+
    1742:	f4 91       	lpm	r31, Z
    1744:	e0 2d       	mov	r30, r0
    1746:	09 94       	ijmp

00001748 <__subsf3>:
    1748:	50 58       	subi	r21, 0x80	; 128

0000174a <__addsf3>:
    174a:	bb 27       	eor	r27, r27
    174c:	aa 27       	eor	r26, r26
    174e:	0e 94 bc 0b 	call	0x1778	; 0x1778 <__addsf3x>
    1752:	0c 94 d7 0c 	jmp	0x19ae	; 0x19ae <__fp_round>
    1756:	0e 94 c9 0c 	call	0x1992	; 0x1992 <__fp_pscA>
    175a:	38 f0       	brcs	.+14     	; 0x176a <__addsf3+0x20>
    175c:	0e 94 d0 0c 	call	0x19a0	; 0x19a0 <__fp_pscB>
    1760:	20 f0       	brcs	.+8      	; 0x176a <__addsf3+0x20>
    1762:	39 f4       	brne	.+14     	; 0x1772 <__addsf3+0x28>
    1764:	9f 3f       	cpi	r25, 0xFF	; 255
    1766:	19 f4       	brne	.+6      	; 0x176e <__addsf3+0x24>
    1768:	26 f4       	brtc	.+8      	; 0x1772 <__addsf3+0x28>
    176a:	0c 94 c6 0c 	jmp	0x198c	; 0x198c <__fp_nan>
    176e:	0e f4       	brtc	.+2      	; 0x1772 <__addsf3+0x28>
    1770:	e0 95       	com	r30
    1772:	e7 fb       	bst	r30, 7
    1774:	0c 94 c0 0c 	jmp	0x1980	; 0x1980 <__fp_inf>

00001778 <__addsf3x>:
    1778:	e9 2f       	mov	r30, r25
    177a:	0e 94 e8 0c 	call	0x19d0	; 0x19d0 <__fp_split3>
    177e:	58 f3       	brcs	.-42     	; 0x1756 <__addsf3+0xc>
    1780:	ba 17       	cp	r27, r26
    1782:	62 07       	cpc	r22, r18
    1784:	73 07       	cpc	r23, r19
    1786:	84 07       	cpc	r24, r20
    1788:	95 07       	cpc	r25, r21
    178a:	20 f0       	brcs	.+8      	; 0x1794 <__addsf3x+0x1c>
    178c:	79 f4       	brne	.+30     	; 0x17ac <__addsf3x+0x34>
    178e:	a6 f5       	brtc	.+104    	; 0x17f8 <__addsf3x+0x80>
    1790:	0c 94 0a 0d 	jmp	0x1a14	; 0x1a14 <__fp_zero>
    1794:	0e f4       	brtc	.+2      	; 0x1798 <__addsf3x+0x20>
    1796:	e0 95       	com	r30
    1798:	0b 2e       	mov	r0, r27
    179a:	ba 2f       	mov	r27, r26
    179c:	a0 2d       	mov	r26, r0
    179e:	0b 01       	movw	r0, r22
    17a0:	b9 01       	movw	r22, r18
    17a2:	90 01       	movw	r18, r0
    17a4:	0c 01       	movw	r0, r24
    17a6:	ca 01       	movw	r24, r20
    17a8:	a0 01       	movw	r20, r0
    17aa:	11 24       	eor	r1, r1
    17ac:	ff 27       	eor	r31, r31
    17ae:	59 1b       	sub	r21, r25
    17b0:	99 f0       	breq	.+38     	; 0x17d8 <__addsf3x+0x60>
    17b2:	59 3f       	cpi	r21, 0xF9	; 249
    17b4:	50 f4       	brcc	.+20     	; 0x17ca <__addsf3x+0x52>
    17b6:	50 3e       	cpi	r21, 0xE0	; 224
    17b8:	68 f1       	brcs	.+90     	; 0x1814 <__addsf3x+0x9c>
    17ba:	1a 16       	cp	r1, r26
    17bc:	f0 40       	sbci	r31, 0x00	; 0
    17be:	a2 2f       	mov	r26, r18
    17c0:	23 2f       	mov	r18, r19
    17c2:	34 2f       	mov	r19, r20
    17c4:	44 27       	eor	r20, r20
    17c6:	58 5f       	subi	r21, 0xF8	; 248
    17c8:	f3 cf       	rjmp	.-26     	; 0x17b0 <__addsf3x+0x38>
    17ca:	46 95       	lsr	r20
    17cc:	37 95       	ror	r19
    17ce:	27 95       	ror	r18
    17d0:	a7 95       	ror	r26
    17d2:	f0 40       	sbci	r31, 0x00	; 0
    17d4:	53 95       	inc	r21
    17d6:	c9 f7       	brne	.-14     	; 0x17ca <__addsf3x+0x52>
    17d8:	7e f4       	brtc	.+30     	; 0x17f8 <__addsf3x+0x80>
    17da:	1f 16       	cp	r1, r31
    17dc:	ba 0b       	sbc	r27, r26
    17de:	62 0b       	sbc	r22, r18
    17e0:	73 0b       	sbc	r23, r19
    17e2:	84 0b       	sbc	r24, r20
    17e4:	ba f0       	brmi	.+46     	; 0x1814 <__addsf3x+0x9c>
    17e6:	91 50       	subi	r25, 0x01	; 1
    17e8:	a1 f0       	breq	.+40     	; 0x1812 <__addsf3x+0x9a>
    17ea:	ff 0f       	add	r31, r31
    17ec:	bb 1f       	adc	r27, r27
    17ee:	66 1f       	adc	r22, r22
    17f0:	77 1f       	adc	r23, r23
    17f2:	88 1f       	adc	r24, r24
    17f4:	c2 f7       	brpl	.-16     	; 0x17e6 <__addsf3x+0x6e>
    17f6:	0e c0       	rjmp	.+28     	; 0x1814 <__addsf3x+0x9c>
    17f8:	ba 0f       	add	r27, r26
    17fa:	62 1f       	adc	r22, r18
    17fc:	73 1f       	adc	r23, r19
    17fe:	84 1f       	adc	r24, r20
    1800:	48 f4       	brcc	.+18     	; 0x1814 <__addsf3x+0x9c>
    1802:	87 95       	ror	r24
    1804:	77 95       	ror	r23
    1806:	67 95       	ror	r22
    1808:	b7 95       	ror	r27
    180a:	f7 95       	ror	r31
    180c:	9e 3f       	cpi	r25, 0xFE	; 254
    180e:	08 f0       	brcs	.+2      	; 0x1812 <__addsf3x+0x9a>
    1810:	b0 cf       	rjmp	.-160    	; 0x1772 <__addsf3+0x28>
    1812:	93 95       	inc	r25
    1814:	88 0f       	add	r24, r24
    1816:	08 f0       	brcs	.+2      	; 0x181a <__addsf3x+0xa2>
    1818:	99 27       	eor	r25, r25
    181a:	ee 0f       	add	r30, r30
    181c:	97 95       	ror	r25
    181e:	87 95       	ror	r24
    1820:	08 95       	ret

00001822 <__divsf3>:
    1822:	0e 94 25 0c 	call	0x184a	; 0x184a <__divsf3x>
    1826:	0c 94 d7 0c 	jmp	0x19ae	; 0x19ae <__fp_round>
    182a:	0e 94 d0 0c 	call	0x19a0	; 0x19a0 <__fp_pscB>
    182e:	58 f0       	brcs	.+22     	; 0x1846 <__divsf3+0x24>
    1830:	0e 94 c9 0c 	call	0x1992	; 0x1992 <__fp_pscA>
    1834:	40 f0       	brcs	.+16     	; 0x1846 <__divsf3+0x24>
    1836:	29 f4       	brne	.+10     	; 0x1842 <__divsf3+0x20>
    1838:	5f 3f       	cpi	r21, 0xFF	; 255
    183a:	29 f0       	breq	.+10     	; 0x1846 <__divsf3+0x24>
    183c:	0c 94 c0 0c 	jmp	0x1980	; 0x1980 <__fp_inf>
    1840:	51 11       	cpse	r21, r1
    1842:	0c 94 0b 0d 	jmp	0x1a16	; 0x1a16 <__fp_szero>
    1846:	0c 94 c6 0c 	jmp	0x198c	; 0x198c <__fp_nan>

0000184a <__divsf3x>:
    184a:	0e 94 e8 0c 	call	0x19d0	; 0x19d0 <__fp_split3>
    184e:	68 f3       	brcs	.-38     	; 0x182a <__divsf3+0x8>

00001850 <__divsf3_pse>:
    1850:	99 23       	and	r25, r25
    1852:	b1 f3       	breq	.-20     	; 0x1840 <__divsf3+0x1e>
    1854:	55 23       	and	r21, r21
    1856:	91 f3       	breq	.-28     	; 0x183c <__divsf3+0x1a>
    1858:	95 1b       	sub	r25, r21
    185a:	55 0b       	sbc	r21, r21
    185c:	bb 27       	eor	r27, r27
    185e:	aa 27       	eor	r26, r26
    1860:	62 17       	cp	r22, r18
    1862:	73 07       	cpc	r23, r19
    1864:	84 07       	cpc	r24, r20
    1866:	38 f0       	brcs	.+14     	; 0x1876 <__divsf3_pse+0x26>
    1868:	9f 5f       	subi	r25, 0xFF	; 255
    186a:	5f 4f       	sbci	r21, 0xFF	; 255
    186c:	22 0f       	add	r18, r18
    186e:	33 1f       	adc	r19, r19
    1870:	44 1f       	adc	r20, r20
    1872:	aa 1f       	adc	r26, r26
    1874:	a9 f3       	breq	.-22     	; 0x1860 <__divsf3_pse+0x10>
    1876:	35 d0       	rcall	.+106    	; 0x18e2 <__divsf3_pse+0x92>
    1878:	0e 2e       	mov	r0, r30
    187a:	3a f0       	brmi	.+14     	; 0x188a <__divsf3_pse+0x3a>
    187c:	e0 e8       	ldi	r30, 0x80	; 128
    187e:	32 d0       	rcall	.+100    	; 0x18e4 <__divsf3_pse+0x94>
    1880:	91 50       	subi	r25, 0x01	; 1
    1882:	50 40       	sbci	r21, 0x00	; 0
    1884:	e6 95       	lsr	r30
    1886:	00 1c       	adc	r0, r0
    1888:	ca f7       	brpl	.-14     	; 0x187c <__divsf3_pse+0x2c>
    188a:	2b d0       	rcall	.+86     	; 0x18e2 <__divsf3_pse+0x92>
    188c:	fe 2f       	mov	r31, r30
    188e:	29 d0       	rcall	.+82     	; 0x18e2 <__divsf3_pse+0x92>
    1890:	66 0f       	add	r22, r22
    1892:	77 1f       	adc	r23, r23
    1894:	88 1f       	adc	r24, r24
    1896:	bb 1f       	adc	r27, r27
    1898:	26 17       	cp	r18, r22
    189a:	37 07       	cpc	r19, r23
    189c:	48 07       	cpc	r20, r24
    189e:	ab 07       	cpc	r26, r27
    18a0:	b0 e8       	ldi	r27, 0x80	; 128
    18a2:	09 f0       	breq	.+2      	; 0x18a6 <__divsf3_pse+0x56>
    18a4:	bb 0b       	sbc	r27, r27
    18a6:	80 2d       	mov	r24, r0
    18a8:	bf 01       	movw	r22, r30
    18aa:	ff 27       	eor	r31, r31
    18ac:	93 58       	subi	r25, 0x83	; 131
    18ae:	5f 4f       	sbci	r21, 0xFF	; 255
    18b0:	3a f0       	brmi	.+14     	; 0x18c0 <__divsf3_pse+0x70>
    18b2:	9e 3f       	cpi	r25, 0xFE	; 254
    18b4:	51 05       	cpc	r21, r1
    18b6:	78 f0       	brcs	.+30     	; 0x18d6 <__divsf3_pse+0x86>
    18b8:	0c 94 c0 0c 	jmp	0x1980	; 0x1980 <__fp_inf>
    18bc:	0c 94 0b 0d 	jmp	0x1a16	; 0x1a16 <__fp_szero>
    18c0:	5f 3f       	cpi	r21, 0xFF	; 255
    18c2:	e4 f3       	brlt	.-8      	; 0x18bc <__divsf3_pse+0x6c>
    18c4:	98 3e       	cpi	r25, 0xE8	; 232
    18c6:	d4 f3       	brlt	.-12     	; 0x18bc <__divsf3_pse+0x6c>
    18c8:	86 95       	lsr	r24
    18ca:	77 95       	ror	r23
    18cc:	67 95       	ror	r22
    18ce:	b7 95       	ror	r27
    18d0:	f7 95       	ror	r31
    18d2:	9f 5f       	subi	r25, 0xFF	; 255
    18d4:	c9 f7       	brne	.-14     	; 0x18c8 <__divsf3_pse+0x78>
    18d6:	88 0f       	add	r24, r24
    18d8:	91 1d       	adc	r25, r1
    18da:	96 95       	lsr	r25
    18dc:	87 95       	ror	r24
    18de:	97 f9       	bld	r25, 7
    18e0:	08 95       	ret
    18e2:	e1 e0       	ldi	r30, 0x01	; 1
    18e4:	66 0f       	add	r22, r22
    18e6:	77 1f       	adc	r23, r23
    18e8:	88 1f       	adc	r24, r24
    18ea:	bb 1f       	adc	r27, r27
    18ec:	62 17       	cp	r22, r18
    18ee:	73 07       	cpc	r23, r19
    18f0:	84 07       	cpc	r24, r20
    18f2:	ba 07       	cpc	r27, r26
    18f4:	20 f0       	brcs	.+8      	; 0x18fe <__divsf3_pse+0xae>
    18f6:	62 1b       	sub	r22, r18
    18f8:	73 0b       	sbc	r23, r19
    18fa:	84 0b       	sbc	r24, r20
    18fc:	ba 0b       	sbc	r27, r26
    18fe:	ee 1f       	adc	r30, r30
    1900:	88 f7       	brcc	.-30     	; 0x18e4 <__divsf3_pse+0x94>
    1902:	e0 95       	com	r30
    1904:	08 95       	ret

00001906 <__floatunsisf>:
    1906:	e8 94       	clt
    1908:	09 c0       	rjmp	.+18     	; 0x191c <__floatsisf+0x12>

0000190a <__floatsisf>:
    190a:	97 fb       	bst	r25, 7
    190c:	3e f4       	brtc	.+14     	; 0x191c <__floatsisf+0x12>
    190e:	90 95       	com	r25
    1910:	80 95       	com	r24
    1912:	70 95       	com	r23
    1914:	61 95       	neg	r22
    1916:	7f 4f       	sbci	r23, 0xFF	; 255
    1918:	8f 4f       	sbci	r24, 0xFF	; 255
    191a:	9f 4f       	sbci	r25, 0xFF	; 255
    191c:	99 23       	and	r25, r25
    191e:	a9 f0       	breq	.+42     	; 0x194a <__floatsisf+0x40>
    1920:	f9 2f       	mov	r31, r25
    1922:	96 e9       	ldi	r25, 0x96	; 150
    1924:	bb 27       	eor	r27, r27
    1926:	93 95       	inc	r25
    1928:	f6 95       	lsr	r31
    192a:	87 95       	ror	r24
    192c:	77 95       	ror	r23
    192e:	67 95       	ror	r22
    1930:	b7 95       	ror	r27
    1932:	f1 11       	cpse	r31, r1
    1934:	f8 cf       	rjmp	.-16     	; 0x1926 <__floatsisf+0x1c>
    1936:	fa f4       	brpl	.+62     	; 0x1976 <__floatsisf+0x6c>
    1938:	bb 0f       	add	r27, r27
    193a:	11 f4       	brne	.+4      	; 0x1940 <__floatsisf+0x36>
    193c:	60 ff       	sbrs	r22, 0
    193e:	1b c0       	rjmp	.+54     	; 0x1976 <__floatsisf+0x6c>
    1940:	6f 5f       	subi	r22, 0xFF	; 255
    1942:	7f 4f       	sbci	r23, 0xFF	; 255
    1944:	8f 4f       	sbci	r24, 0xFF	; 255
    1946:	9f 4f       	sbci	r25, 0xFF	; 255
    1948:	16 c0       	rjmp	.+44     	; 0x1976 <__floatsisf+0x6c>
    194a:	88 23       	and	r24, r24
    194c:	11 f0       	breq	.+4      	; 0x1952 <__floatsisf+0x48>
    194e:	96 e9       	ldi	r25, 0x96	; 150
    1950:	11 c0       	rjmp	.+34     	; 0x1974 <__floatsisf+0x6a>
    1952:	77 23       	and	r23, r23
    1954:	21 f0       	breq	.+8      	; 0x195e <__floatsisf+0x54>
    1956:	9e e8       	ldi	r25, 0x8E	; 142
    1958:	87 2f       	mov	r24, r23
    195a:	76 2f       	mov	r23, r22
    195c:	05 c0       	rjmp	.+10     	; 0x1968 <__floatsisf+0x5e>
    195e:	66 23       	and	r22, r22
    1960:	71 f0       	breq	.+28     	; 0x197e <__floatsisf+0x74>
    1962:	96 e8       	ldi	r25, 0x86	; 134
    1964:	86 2f       	mov	r24, r22
    1966:	70 e0       	ldi	r23, 0x00	; 0
    1968:	60 e0       	ldi	r22, 0x00	; 0
    196a:	2a f0       	brmi	.+10     	; 0x1976 <__floatsisf+0x6c>
    196c:	9a 95       	dec	r25
    196e:	66 0f       	add	r22, r22
    1970:	77 1f       	adc	r23, r23
    1972:	88 1f       	adc	r24, r24
    1974:	da f7       	brpl	.-10     	; 0x196c <__floatsisf+0x62>
    1976:	88 0f       	add	r24, r24
    1978:	96 95       	lsr	r25
    197a:	87 95       	ror	r24
    197c:	97 f9       	bld	r25, 7
    197e:	08 95       	ret

00001980 <__fp_inf>:
    1980:	97 f9       	bld	r25, 7
    1982:	9f 67       	ori	r25, 0x7F	; 127
    1984:	80 e8       	ldi	r24, 0x80	; 128
    1986:	70 e0       	ldi	r23, 0x00	; 0
    1988:	60 e0       	ldi	r22, 0x00	; 0
    198a:	08 95       	ret

0000198c <__fp_nan>:
    198c:	9f ef       	ldi	r25, 0xFF	; 255
    198e:	80 ec       	ldi	r24, 0xC0	; 192
    1990:	08 95       	ret

00001992 <__fp_pscA>:
    1992:	00 24       	eor	r0, r0
    1994:	0a 94       	dec	r0
    1996:	16 16       	cp	r1, r22
    1998:	17 06       	cpc	r1, r23
    199a:	18 06       	cpc	r1, r24
    199c:	09 06       	cpc	r0, r25
    199e:	08 95       	ret

000019a0 <__fp_pscB>:
    19a0:	00 24       	eor	r0, r0
    19a2:	0a 94       	dec	r0
    19a4:	12 16       	cp	r1, r18
    19a6:	13 06       	cpc	r1, r19
    19a8:	14 06       	cpc	r1, r20
    19aa:	05 06       	cpc	r0, r21
    19ac:	08 95       	ret

000019ae <__fp_round>:
    19ae:	09 2e       	mov	r0, r25
    19b0:	03 94       	inc	r0
    19b2:	00 0c       	add	r0, r0
    19b4:	11 f4       	brne	.+4      	; 0x19ba <__fp_round+0xc>
    19b6:	88 23       	and	r24, r24
    19b8:	52 f0       	brmi	.+20     	; 0x19ce <__fp_round+0x20>
    19ba:	bb 0f       	add	r27, r27
    19bc:	40 f4       	brcc	.+16     	; 0x19ce <__fp_round+0x20>
    19be:	bf 2b       	or	r27, r31
    19c0:	11 f4       	brne	.+4      	; 0x19c6 <__fp_round+0x18>
    19c2:	60 ff       	sbrs	r22, 0
    19c4:	04 c0       	rjmp	.+8      	; 0x19ce <__fp_round+0x20>
    19c6:	6f 5f       	subi	r22, 0xFF	; 255
    19c8:	7f 4f       	sbci	r23, 0xFF	; 255
    19ca:	8f 4f       	sbci	r24, 0xFF	; 255
    19cc:	9f 4f       	sbci	r25, 0xFF	; 255
    19ce:	08 95       	ret

000019d0 <__fp_split3>:
    19d0:	57 fd       	sbrc	r21, 7
    19d2:	90 58       	subi	r25, 0x80	; 128
    19d4:	44 0f       	add	r20, r20
    19d6:	55 1f       	adc	r21, r21
    19d8:	59 f0       	breq	.+22     	; 0x19f0 <__fp_splitA+0x10>
    19da:	5f 3f       	cpi	r21, 0xFF	; 255
    19dc:	71 f0       	breq	.+28     	; 0x19fa <__fp_splitA+0x1a>
    19de:	47 95       	ror	r20

000019e0 <__fp_splitA>:
    19e0:	88 0f       	add	r24, r24
    19e2:	97 fb       	bst	r25, 7
    19e4:	99 1f       	adc	r25, r25
    19e6:	61 f0       	breq	.+24     	; 0x1a00 <__fp_splitA+0x20>
    19e8:	9f 3f       	cpi	r25, 0xFF	; 255
    19ea:	79 f0       	breq	.+30     	; 0x1a0a <__fp_splitA+0x2a>
    19ec:	87 95       	ror	r24
    19ee:	08 95       	ret
    19f0:	12 16       	cp	r1, r18
    19f2:	13 06       	cpc	r1, r19
    19f4:	14 06       	cpc	r1, r20
    19f6:	55 1f       	adc	r21, r21
    19f8:	f2 cf       	rjmp	.-28     	; 0x19de <__fp_split3+0xe>
    19fa:	46 95       	lsr	r20
    19fc:	f1 df       	rcall	.-30     	; 0x19e0 <__fp_splitA>
    19fe:	08 c0       	rjmp	.+16     	; 0x1a10 <__fp_splitA+0x30>
    1a00:	16 16       	cp	r1, r22
    1a02:	17 06       	cpc	r1, r23
    1a04:	18 06       	cpc	r1, r24
    1a06:	99 1f       	adc	r25, r25
    1a08:	f1 cf       	rjmp	.-30     	; 0x19ec <__fp_splitA+0xc>
    1a0a:	86 95       	lsr	r24
    1a0c:	71 05       	cpc	r23, r1
    1a0e:	61 05       	cpc	r22, r1
    1a10:	08 94       	sec
    1a12:	08 95       	ret

00001a14 <__fp_zero>:
    1a14:	e8 94       	clt

00001a16 <__fp_szero>:
    1a16:	bb 27       	eor	r27, r27
    1a18:	66 27       	eor	r22, r22
    1a1a:	77 27       	eor	r23, r23
    1a1c:	cb 01       	movw	r24, r22
    1a1e:	97 f9       	bld	r25, 7
    1a20:	08 95       	ret

00001a22 <__mulsf3>:
    1a22:	0e 94 24 0d 	call	0x1a48	; 0x1a48 <__mulsf3x>
    1a26:	0c 94 d7 0c 	jmp	0x19ae	; 0x19ae <__fp_round>
    1a2a:	0e 94 c9 0c 	call	0x1992	; 0x1992 <__fp_pscA>
    1a2e:	38 f0       	brcs	.+14     	; 0x1a3e <__mulsf3+0x1c>
    1a30:	0e 94 d0 0c 	call	0x19a0	; 0x19a0 <__fp_pscB>
    1a34:	20 f0       	brcs	.+8      	; 0x1a3e <__mulsf3+0x1c>
    1a36:	95 23       	and	r25, r21
    1a38:	11 f0       	breq	.+4      	; 0x1a3e <__mulsf3+0x1c>
    1a3a:	0c 94 c0 0c 	jmp	0x1980	; 0x1980 <__fp_inf>
    1a3e:	0c 94 c6 0c 	jmp	0x198c	; 0x198c <__fp_nan>
    1a42:	11 24       	eor	r1, r1
    1a44:	0c 94 0b 0d 	jmp	0x1a16	; 0x1a16 <__fp_szero>

00001a48 <__mulsf3x>:
    1a48:	0e 94 e8 0c 	call	0x19d0	; 0x19d0 <__fp_split3>
    1a4c:	70 f3       	brcs	.-36     	; 0x1a2a <__mulsf3+0x8>

00001a4e <__mulsf3_pse>:
    1a4e:	95 9f       	mul	r25, r21
    1a50:	c1 f3       	breq	.-16     	; 0x1a42 <__mulsf3+0x20>
    1a52:	95 0f       	add	r25, r21
    1a54:	50 e0       	ldi	r21, 0x00	; 0
    1a56:	55 1f       	adc	r21, r21
    1a58:	62 9f       	mul	r22, r18
    1a5a:	f0 01       	movw	r30, r0
    1a5c:	72 9f       	mul	r23, r18
    1a5e:	bb 27       	eor	r27, r27
    1a60:	f0 0d       	add	r31, r0
    1a62:	b1 1d       	adc	r27, r1
    1a64:	63 9f       	mul	r22, r19
    1a66:	aa 27       	eor	r26, r26
    1a68:	f0 0d       	add	r31, r0
    1a6a:	b1 1d       	adc	r27, r1
    1a6c:	aa 1f       	adc	r26, r26
    1a6e:	64 9f       	mul	r22, r20
    1a70:	66 27       	eor	r22, r22
    1a72:	b0 0d       	add	r27, r0
    1a74:	a1 1d       	adc	r26, r1
    1a76:	66 1f       	adc	r22, r22
    1a78:	82 9f       	mul	r24, r18
    1a7a:	22 27       	eor	r18, r18
    1a7c:	b0 0d       	add	r27, r0
    1a7e:	a1 1d       	adc	r26, r1
    1a80:	62 1f       	adc	r22, r18
    1a82:	73 9f       	mul	r23, r19
    1a84:	b0 0d       	add	r27, r0
    1a86:	a1 1d       	adc	r26, r1
    1a88:	62 1f       	adc	r22, r18
    1a8a:	83 9f       	mul	r24, r19
    1a8c:	a0 0d       	add	r26, r0
    1a8e:	61 1d       	adc	r22, r1
    1a90:	22 1f       	adc	r18, r18
    1a92:	74 9f       	mul	r23, r20
    1a94:	33 27       	eor	r19, r19
    1a96:	a0 0d       	add	r26, r0
    1a98:	61 1d       	adc	r22, r1
    1a9a:	23 1f       	adc	r18, r19
    1a9c:	84 9f       	mul	r24, r20
    1a9e:	60 0d       	add	r22, r0
    1aa0:	21 1d       	adc	r18, r1
    1aa2:	82 2f       	mov	r24, r18
    1aa4:	76 2f       	mov	r23, r22
    1aa6:	6a 2f       	mov	r22, r26
    1aa8:	11 24       	eor	r1, r1
    1aaa:	9f 57       	subi	r25, 0x7F	; 127
    1aac:	50 40       	sbci	r21, 0x00	; 0
    1aae:	9a f0       	brmi	.+38     	; 0x1ad6 <__mulsf3_pse+0x88>
    1ab0:	f1 f0       	breq	.+60     	; 0x1aee <__mulsf3_pse+0xa0>
    1ab2:	88 23       	and	r24, r24
    1ab4:	4a f0       	brmi	.+18     	; 0x1ac8 <__mulsf3_pse+0x7a>
    1ab6:	ee 0f       	add	r30, r30
    1ab8:	ff 1f       	adc	r31, r31
    1aba:	bb 1f       	adc	r27, r27
    1abc:	66 1f       	adc	r22, r22
    1abe:	77 1f       	adc	r23, r23
    1ac0:	88 1f       	adc	r24, r24
    1ac2:	91 50       	subi	r25, 0x01	; 1
    1ac4:	50 40       	sbci	r21, 0x00	; 0
    1ac6:	a9 f7       	brne	.-22     	; 0x1ab2 <__mulsf3_pse+0x64>
    1ac8:	9e 3f       	cpi	r25, 0xFE	; 254
    1aca:	51 05       	cpc	r21, r1
    1acc:	80 f0       	brcs	.+32     	; 0x1aee <__mulsf3_pse+0xa0>
    1ace:	0c 94 c0 0c 	jmp	0x1980	; 0x1980 <__fp_inf>
    1ad2:	0c 94 0b 0d 	jmp	0x1a16	; 0x1a16 <__fp_szero>
    1ad6:	5f 3f       	cpi	r21, 0xFF	; 255
    1ad8:	e4 f3       	brlt	.-8      	; 0x1ad2 <__mulsf3_pse+0x84>
    1ada:	98 3e       	cpi	r25, 0xE8	; 232
    1adc:	d4 f3       	brlt	.-12     	; 0x1ad2 <__mulsf3_pse+0x84>
    1ade:	86 95       	lsr	r24
    1ae0:	77 95       	ror	r23
    1ae2:	67 95       	ror	r22
    1ae4:	b7 95       	ror	r27
    1ae6:	f7 95       	ror	r31
    1ae8:	e7 95       	ror	r30
    1aea:	9f 5f       	subi	r25, 0xFF	; 255
    1aec:	c1 f7       	brne	.-16     	; 0x1ade <__mulsf3_pse+0x90>
    1aee:	fe 2b       	or	r31, r30
    1af0:	88 0f       	add	r24, r24
    1af2:	91 1d       	adc	r25, r1
    1af4:	96 95       	lsr	r25
    1af6:	87 95       	ror	r24
    1af8:	97 f9       	bld	r25, 7
    1afa:	08 95       	ret

00001afc <memcmp>:
    1afc:	fb 01       	movw	r30, r22
    1afe:	dc 01       	movw	r26, r24
    1b00:	04 c0       	rjmp	.+8      	; 0x1b0a <memcmp+0xe>
    1b02:	8d 91       	ld	r24, X+
    1b04:	01 90       	ld	r0, Z+
    1b06:	80 19       	sub	r24, r0
    1b08:	21 f4       	brne	.+8      	; 0x1b12 <memcmp+0x16>
    1b0a:	41 50       	subi	r20, 0x01	; 1
    1b0c:	50 40       	sbci	r21, 0x00	; 0
    1b0e:	c8 f7       	brcc	.-14     	; 0x1b02 <memcmp+0x6>
    1b10:	88 1b       	sub	r24, r24
    1b12:	99 0b       	sbc	r25, r25
    1b14:	08 95       	ret

00001b16 <sprintf>:
    1b16:	ae e0       	ldi	r26, 0x0E	; 14
    1b18:	b0 e0       	ldi	r27, 0x00	; 0
    1b1a:	e1 e9       	ldi	r30, 0x91	; 145
    1b1c:	fd e0       	ldi	r31, 0x0D	; 13
    1b1e:	0c 94 4c 10 	jmp	0x2098	; 0x2098 <__prologue_saves__+0x1c>
    1b22:	0d 89       	ldd	r16, Y+21	; 0x15
    1b24:	1e 89       	ldd	r17, Y+22	; 0x16
    1b26:	86 e0       	ldi	r24, 0x06	; 6
    1b28:	8c 83       	std	Y+4, r24	; 0x04
    1b2a:	1a 83       	std	Y+2, r17	; 0x02
    1b2c:	09 83       	std	Y+1, r16	; 0x01
    1b2e:	8f ef       	ldi	r24, 0xFF	; 255
    1b30:	9f e7       	ldi	r25, 0x7F	; 127
    1b32:	9e 83       	std	Y+6, r25	; 0x06
    1b34:	8d 83       	std	Y+5, r24	; 0x05
    1b36:	ae 01       	movw	r20, r28
    1b38:	47 5e       	subi	r20, 0xE7	; 231
    1b3a:	5f 4f       	sbci	r21, 0xFF	; 255
    1b3c:	6f 89       	ldd	r22, Y+23	; 0x17
    1b3e:	78 8d       	ldd	r23, Y+24	; 0x18
    1b40:	ce 01       	movw	r24, r28
    1b42:	01 96       	adiw	r24, 0x01	; 1
    1b44:	0e 94 ad 0d 	call	0x1b5a	; 0x1b5a <vfprintf>
    1b48:	ef 81       	ldd	r30, Y+7	; 0x07
    1b4a:	f8 85       	ldd	r31, Y+8	; 0x08
    1b4c:	e0 0f       	add	r30, r16
    1b4e:	f1 1f       	adc	r31, r17
    1b50:	10 82       	st	Z, r1
    1b52:	2e 96       	adiw	r28, 0x0e	; 14
    1b54:	e4 e0       	ldi	r30, 0x04	; 4
    1b56:	0c 94 68 10 	jmp	0x20d0	; 0x20d0 <__epilogue_restores__+0x1c>

00001b5a <vfprintf>:
    1b5a:	ab e0       	ldi	r26, 0x0B	; 11
    1b5c:	b0 e0       	ldi	r27, 0x00	; 0
    1b5e:	e3 eb       	ldi	r30, 0xB3	; 179
    1b60:	fd e0       	ldi	r31, 0x0D	; 13
    1b62:	0c 94 3e 10 	jmp	0x207c	; 0x207c <__prologue_saves__>
    1b66:	6c 01       	movw	r12, r24
    1b68:	7b 01       	movw	r14, r22
    1b6a:	8a 01       	movw	r16, r20
    1b6c:	fc 01       	movw	r30, r24
    1b6e:	17 82       	std	Z+7, r1	; 0x07
    1b70:	16 82       	std	Z+6, r1	; 0x06
    1b72:	83 81       	ldd	r24, Z+3	; 0x03
    1b74:	81 ff       	sbrs	r24, 1
    1b76:	cc c1       	rjmp	.+920    	; 0x1f10 <vfprintf+0x3b6>
    1b78:	ce 01       	movw	r24, r28
    1b7a:	01 96       	adiw	r24, 0x01	; 1
    1b7c:	3c 01       	movw	r6, r24
    1b7e:	f6 01       	movw	r30, r12
    1b80:	93 81       	ldd	r25, Z+3	; 0x03
    1b82:	f7 01       	movw	r30, r14
    1b84:	93 fd       	sbrc	r25, 3
    1b86:	85 91       	lpm	r24, Z+
    1b88:	93 ff       	sbrs	r25, 3
    1b8a:	81 91       	ld	r24, Z+
    1b8c:	7f 01       	movw	r14, r30
    1b8e:	88 23       	and	r24, r24
    1b90:	09 f4       	brne	.+2      	; 0x1b94 <vfprintf+0x3a>
    1b92:	ba c1       	rjmp	.+884    	; 0x1f08 <vfprintf+0x3ae>
    1b94:	85 32       	cpi	r24, 0x25	; 37
    1b96:	39 f4       	brne	.+14     	; 0x1ba6 <vfprintf+0x4c>
    1b98:	93 fd       	sbrc	r25, 3
    1b9a:	85 91       	lpm	r24, Z+
    1b9c:	93 ff       	sbrs	r25, 3
    1b9e:	81 91       	ld	r24, Z+
    1ba0:	7f 01       	movw	r14, r30
    1ba2:	85 32       	cpi	r24, 0x25	; 37
    1ba4:	29 f4       	brne	.+10     	; 0x1bb0 <vfprintf+0x56>
    1ba6:	b6 01       	movw	r22, r12
    1ba8:	90 e0       	ldi	r25, 0x00	; 0
    1baa:	0e 94 a4 0f 	call	0x1f48	; 0x1f48 <fputc>
    1bae:	e7 cf       	rjmp	.-50     	; 0x1b7e <vfprintf+0x24>
    1bb0:	91 2c       	mov	r9, r1
    1bb2:	21 2c       	mov	r2, r1
    1bb4:	31 2c       	mov	r3, r1
    1bb6:	ff e1       	ldi	r31, 0x1F	; 31
    1bb8:	f3 15       	cp	r31, r3
    1bba:	d8 f0       	brcs	.+54     	; 0x1bf2 <vfprintf+0x98>
    1bbc:	8b 32       	cpi	r24, 0x2B	; 43
    1bbe:	79 f0       	breq	.+30     	; 0x1bde <vfprintf+0x84>
    1bc0:	38 f4       	brcc	.+14     	; 0x1bd0 <vfprintf+0x76>
    1bc2:	80 32       	cpi	r24, 0x20	; 32
    1bc4:	79 f0       	breq	.+30     	; 0x1be4 <vfprintf+0x8a>
    1bc6:	83 32       	cpi	r24, 0x23	; 35
    1bc8:	a1 f4       	brne	.+40     	; 0x1bf2 <vfprintf+0x98>
    1bca:	23 2d       	mov	r18, r3
    1bcc:	20 61       	ori	r18, 0x10	; 16
    1bce:	1d c0       	rjmp	.+58     	; 0x1c0a <vfprintf+0xb0>
    1bd0:	8d 32       	cpi	r24, 0x2D	; 45
    1bd2:	61 f0       	breq	.+24     	; 0x1bec <vfprintf+0x92>
    1bd4:	80 33       	cpi	r24, 0x30	; 48
    1bd6:	69 f4       	brne	.+26     	; 0x1bf2 <vfprintf+0x98>
    1bd8:	23 2d       	mov	r18, r3
    1bda:	21 60       	ori	r18, 0x01	; 1
    1bdc:	16 c0       	rjmp	.+44     	; 0x1c0a <vfprintf+0xb0>
    1bde:	83 2d       	mov	r24, r3
    1be0:	82 60       	ori	r24, 0x02	; 2
    1be2:	38 2e       	mov	r3, r24
    1be4:	e3 2d       	mov	r30, r3
    1be6:	e4 60       	ori	r30, 0x04	; 4
    1be8:	3e 2e       	mov	r3, r30
    1bea:	2a c0       	rjmp	.+84     	; 0x1c40 <vfprintf+0xe6>
    1bec:	f3 2d       	mov	r31, r3
    1bee:	f8 60       	ori	r31, 0x08	; 8
    1bf0:	1d c0       	rjmp	.+58     	; 0x1c2c <vfprintf+0xd2>
    1bf2:	37 fc       	sbrc	r3, 7
    1bf4:	2d c0       	rjmp	.+90     	; 0x1c50 <vfprintf+0xf6>
    1bf6:	20 ed       	ldi	r18, 0xD0	; 208
    1bf8:	28 0f       	add	r18, r24
    1bfa:	2a 30       	cpi	r18, 0x0A	; 10
    1bfc:	40 f0       	brcs	.+16     	; 0x1c0e <vfprintf+0xb4>
    1bfe:	8e 32       	cpi	r24, 0x2E	; 46
    1c00:	b9 f4       	brne	.+46     	; 0x1c30 <vfprintf+0xd6>
    1c02:	36 fc       	sbrc	r3, 6
    1c04:	81 c1       	rjmp	.+770    	; 0x1f08 <vfprintf+0x3ae>
    1c06:	23 2d       	mov	r18, r3
    1c08:	20 64       	ori	r18, 0x40	; 64
    1c0a:	32 2e       	mov	r3, r18
    1c0c:	19 c0       	rjmp	.+50     	; 0x1c40 <vfprintf+0xe6>
    1c0e:	36 fe       	sbrs	r3, 6
    1c10:	06 c0       	rjmp	.+12     	; 0x1c1e <vfprintf+0xc4>
    1c12:	8a e0       	ldi	r24, 0x0A	; 10
    1c14:	98 9e       	mul	r9, r24
    1c16:	20 0d       	add	r18, r0
    1c18:	11 24       	eor	r1, r1
    1c1a:	92 2e       	mov	r9, r18
    1c1c:	11 c0       	rjmp	.+34     	; 0x1c40 <vfprintf+0xe6>
    1c1e:	ea e0       	ldi	r30, 0x0A	; 10
    1c20:	2e 9e       	mul	r2, r30
    1c22:	20 0d       	add	r18, r0
    1c24:	11 24       	eor	r1, r1
    1c26:	22 2e       	mov	r2, r18
    1c28:	f3 2d       	mov	r31, r3
    1c2a:	f0 62       	ori	r31, 0x20	; 32
    1c2c:	3f 2e       	mov	r3, r31
    1c2e:	08 c0       	rjmp	.+16     	; 0x1c40 <vfprintf+0xe6>
    1c30:	8c 36       	cpi	r24, 0x6C	; 108
    1c32:	21 f4       	brne	.+8      	; 0x1c3c <vfprintf+0xe2>
    1c34:	83 2d       	mov	r24, r3
    1c36:	80 68       	ori	r24, 0x80	; 128
    1c38:	38 2e       	mov	r3, r24
    1c3a:	02 c0       	rjmp	.+4      	; 0x1c40 <vfprintf+0xe6>
    1c3c:	88 36       	cpi	r24, 0x68	; 104
    1c3e:	41 f4       	brne	.+16     	; 0x1c50 <vfprintf+0xf6>
    1c40:	f7 01       	movw	r30, r14
    1c42:	93 fd       	sbrc	r25, 3
    1c44:	85 91       	lpm	r24, Z+
    1c46:	93 ff       	sbrs	r25, 3
    1c48:	81 91       	ld	r24, Z+
    1c4a:	7f 01       	movw	r14, r30
    1c4c:	81 11       	cpse	r24, r1
    1c4e:	b3 cf       	rjmp	.-154    	; 0x1bb6 <vfprintf+0x5c>
    1c50:	98 2f       	mov	r25, r24
    1c52:	9f 7d       	andi	r25, 0xDF	; 223
    1c54:	95 54       	subi	r25, 0x45	; 69
    1c56:	93 30       	cpi	r25, 0x03	; 3
    1c58:	28 f4       	brcc	.+10     	; 0x1c64 <vfprintf+0x10a>
    1c5a:	0c 5f       	subi	r16, 0xFC	; 252
    1c5c:	1f 4f       	sbci	r17, 0xFF	; 255
    1c5e:	9f e3       	ldi	r25, 0x3F	; 63
    1c60:	99 83       	std	Y+1, r25	; 0x01
    1c62:	0d c0       	rjmp	.+26     	; 0x1c7e <vfprintf+0x124>
    1c64:	83 36       	cpi	r24, 0x63	; 99
    1c66:	31 f0       	breq	.+12     	; 0x1c74 <vfprintf+0x11a>
    1c68:	83 37       	cpi	r24, 0x73	; 115
    1c6a:	71 f0       	breq	.+28     	; 0x1c88 <vfprintf+0x12e>
    1c6c:	83 35       	cpi	r24, 0x53	; 83
    1c6e:	09 f0       	breq	.+2      	; 0x1c72 <vfprintf+0x118>
    1c70:	59 c0       	rjmp	.+178    	; 0x1d24 <vfprintf+0x1ca>
    1c72:	21 c0       	rjmp	.+66     	; 0x1cb6 <vfprintf+0x15c>
    1c74:	f8 01       	movw	r30, r16
    1c76:	80 81       	ld	r24, Z
    1c78:	89 83       	std	Y+1, r24	; 0x01
    1c7a:	0e 5f       	subi	r16, 0xFE	; 254
    1c7c:	1f 4f       	sbci	r17, 0xFF	; 255
    1c7e:	88 24       	eor	r8, r8
    1c80:	83 94       	inc	r8
    1c82:	91 2c       	mov	r9, r1
    1c84:	53 01       	movw	r10, r6
    1c86:	13 c0       	rjmp	.+38     	; 0x1cae <vfprintf+0x154>
    1c88:	28 01       	movw	r4, r16
    1c8a:	f2 e0       	ldi	r31, 0x02	; 2
    1c8c:	4f 0e       	add	r4, r31
    1c8e:	51 1c       	adc	r5, r1
    1c90:	f8 01       	movw	r30, r16
    1c92:	a0 80       	ld	r10, Z
    1c94:	b1 80       	ldd	r11, Z+1	; 0x01
    1c96:	36 fe       	sbrs	r3, 6
    1c98:	03 c0       	rjmp	.+6      	; 0x1ca0 <vfprintf+0x146>
    1c9a:	69 2d       	mov	r22, r9
    1c9c:	70 e0       	ldi	r23, 0x00	; 0
    1c9e:	02 c0       	rjmp	.+4      	; 0x1ca4 <vfprintf+0x14a>
    1ca0:	6f ef       	ldi	r22, 0xFF	; 255
    1ca2:	7f ef       	ldi	r23, 0xFF	; 255
    1ca4:	c5 01       	movw	r24, r10
    1ca6:	0e 94 99 0f 	call	0x1f32	; 0x1f32 <strnlen>
    1caa:	4c 01       	movw	r8, r24
    1cac:	82 01       	movw	r16, r4
    1cae:	f3 2d       	mov	r31, r3
    1cb0:	ff 77       	andi	r31, 0x7F	; 127
    1cb2:	3f 2e       	mov	r3, r31
    1cb4:	16 c0       	rjmp	.+44     	; 0x1ce2 <vfprintf+0x188>
    1cb6:	28 01       	movw	r4, r16
    1cb8:	22 e0       	ldi	r18, 0x02	; 2
    1cba:	42 0e       	add	r4, r18
    1cbc:	51 1c       	adc	r5, r1
    1cbe:	f8 01       	movw	r30, r16
    1cc0:	a0 80       	ld	r10, Z
    1cc2:	b1 80       	ldd	r11, Z+1	; 0x01
    1cc4:	36 fe       	sbrs	r3, 6
    1cc6:	03 c0       	rjmp	.+6      	; 0x1cce <vfprintf+0x174>
    1cc8:	69 2d       	mov	r22, r9
    1cca:	70 e0       	ldi	r23, 0x00	; 0
    1ccc:	02 c0       	rjmp	.+4      	; 0x1cd2 <vfprintf+0x178>
    1cce:	6f ef       	ldi	r22, 0xFF	; 255
    1cd0:	7f ef       	ldi	r23, 0xFF	; 255
    1cd2:	c5 01       	movw	r24, r10
    1cd4:	0e 94 8e 0f 	call	0x1f1c	; 0x1f1c <strnlen_P>
    1cd8:	4c 01       	movw	r8, r24
    1cda:	f3 2d       	mov	r31, r3
    1cdc:	f0 68       	ori	r31, 0x80	; 128
    1cde:	3f 2e       	mov	r3, r31
    1ce0:	82 01       	movw	r16, r4
    1ce2:	33 fc       	sbrc	r3, 3
    1ce4:	1b c0       	rjmp	.+54     	; 0x1d1c <vfprintf+0x1c2>
    1ce6:	82 2d       	mov	r24, r2
    1ce8:	90 e0       	ldi	r25, 0x00	; 0
    1cea:	88 16       	cp	r8, r24
    1cec:	99 06       	cpc	r9, r25
    1cee:	b0 f4       	brcc	.+44     	; 0x1d1c <vfprintf+0x1c2>
    1cf0:	b6 01       	movw	r22, r12
    1cf2:	80 e2       	ldi	r24, 0x20	; 32
    1cf4:	90 e0       	ldi	r25, 0x00	; 0
    1cf6:	0e 94 a4 0f 	call	0x1f48	; 0x1f48 <fputc>
    1cfa:	2a 94       	dec	r2
    1cfc:	f4 cf       	rjmp	.-24     	; 0x1ce6 <vfprintf+0x18c>
    1cfe:	f5 01       	movw	r30, r10
    1d00:	37 fc       	sbrc	r3, 7
    1d02:	85 91       	lpm	r24, Z+
    1d04:	37 fe       	sbrs	r3, 7
    1d06:	81 91       	ld	r24, Z+
    1d08:	5f 01       	movw	r10, r30
    1d0a:	b6 01       	movw	r22, r12
    1d0c:	90 e0       	ldi	r25, 0x00	; 0
    1d0e:	0e 94 a4 0f 	call	0x1f48	; 0x1f48 <fputc>
    1d12:	21 10       	cpse	r2, r1
    1d14:	2a 94       	dec	r2
    1d16:	21 e0       	ldi	r18, 0x01	; 1
    1d18:	82 1a       	sub	r8, r18
    1d1a:	91 08       	sbc	r9, r1
    1d1c:	81 14       	cp	r8, r1
    1d1e:	91 04       	cpc	r9, r1
    1d20:	71 f7       	brne	.-36     	; 0x1cfe <vfprintf+0x1a4>
    1d22:	e8 c0       	rjmp	.+464    	; 0x1ef4 <vfprintf+0x39a>
    1d24:	84 36       	cpi	r24, 0x64	; 100
    1d26:	11 f0       	breq	.+4      	; 0x1d2c <vfprintf+0x1d2>
    1d28:	89 36       	cpi	r24, 0x69	; 105
    1d2a:	41 f5       	brne	.+80     	; 0x1d7c <vfprintf+0x222>
    1d2c:	f8 01       	movw	r30, r16
    1d2e:	37 fe       	sbrs	r3, 7
    1d30:	07 c0       	rjmp	.+14     	; 0x1d40 <vfprintf+0x1e6>
    1d32:	60 81       	ld	r22, Z
    1d34:	71 81       	ldd	r23, Z+1	; 0x01
    1d36:	82 81       	ldd	r24, Z+2	; 0x02
    1d38:	93 81       	ldd	r25, Z+3	; 0x03
    1d3a:	0c 5f       	subi	r16, 0xFC	; 252
    1d3c:	1f 4f       	sbci	r17, 0xFF	; 255
    1d3e:	08 c0       	rjmp	.+16     	; 0x1d50 <vfprintf+0x1f6>
    1d40:	60 81       	ld	r22, Z
    1d42:	71 81       	ldd	r23, Z+1	; 0x01
    1d44:	07 2e       	mov	r0, r23
    1d46:	00 0c       	add	r0, r0
    1d48:	88 0b       	sbc	r24, r24
    1d4a:	99 0b       	sbc	r25, r25
    1d4c:	0e 5f       	subi	r16, 0xFE	; 254
    1d4e:	1f 4f       	sbci	r17, 0xFF	; 255
    1d50:	f3 2d       	mov	r31, r3
    1d52:	ff 76       	andi	r31, 0x6F	; 111
    1d54:	3f 2e       	mov	r3, r31
    1d56:	97 ff       	sbrs	r25, 7
    1d58:	09 c0       	rjmp	.+18     	; 0x1d6c <vfprintf+0x212>
    1d5a:	90 95       	com	r25
    1d5c:	80 95       	com	r24
    1d5e:	70 95       	com	r23
    1d60:	61 95       	neg	r22
    1d62:	7f 4f       	sbci	r23, 0xFF	; 255
    1d64:	8f 4f       	sbci	r24, 0xFF	; 255
    1d66:	9f 4f       	sbci	r25, 0xFF	; 255
    1d68:	f0 68       	ori	r31, 0x80	; 128
    1d6a:	3f 2e       	mov	r3, r31
    1d6c:	2a e0       	ldi	r18, 0x0A	; 10
    1d6e:	30 e0       	ldi	r19, 0x00	; 0
    1d70:	a3 01       	movw	r20, r6
    1d72:	0e 94 e0 0f 	call	0x1fc0	; 0x1fc0 <__ultoa_invert>
    1d76:	88 2e       	mov	r8, r24
    1d78:	86 18       	sub	r8, r6
    1d7a:	45 c0       	rjmp	.+138    	; 0x1e06 <vfprintf+0x2ac>
    1d7c:	85 37       	cpi	r24, 0x75	; 117
    1d7e:	31 f4       	brne	.+12     	; 0x1d8c <vfprintf+0x232>
    1d80:	23 2d       	mov	r18, r3
    1d82:	2f 7e       	andi	r18, 0xEF	; 239
    1d84:	b2 2e       	mov	r11, r18
    1d86:	2a e0       	ldi	r18, 0x0A	; 10
    1d88:	30 e0       	ldi	r19, 0x00	; 0
    1d8a:	25 c0       	rjmp	.+74     	; 0x1dd6 <vfprintf+0x27c>
    1d8c:	93 2d       	mov	r25, r3
    1d8e:	99 7f       	andi	r25, 0xF9	; 249
    1d90:	b9 2e       	mov	r11, r25
    1d92:	8f 36       	cpi	r24, 0x6F	; 111
    1d94:	c1 f0       	breq	.+48     	; 0x1dc6 <vfprintf+0x26c>
    1d96:	18 f4       	brcc	.+6      	; 0x1d9e <vfprintf+0x244>
    1d98:	88 35       	cpi	r24, 0x58	; 88
    1d9a:	79 f0       	breq	.+30     	; 0x1dba <vfprintf+0x260>
    1d9c:	b5 c0       	rjmp	.+362    	; 0x1f08 <vfprintf+0x3ae>
    1d9e:	80 37       	cpi	r24, 0x70	; 112
    1da0:	19 f0       	breq	.+6      	; 0x1da8 <vfprintf+0x24e>
    1da2:	88 37       	cpi	r24, 0x78	; 120
    1da4:	21 f0       	breq	.+8      	; 0x1dae <vfprintf+0x254>
    1da6:	b0 c0       	rjmp	.+352    	; 0x1f08 <vfprintf+0x3ae>
    1da8:	e9 2f       	mov	r30, r25
    1daa:	e0 61       	ori	r30, 0x10	; 16
    1dac:	be 2e       	mov	r11, r30
    1dae:	b4 fe       	sbrs	r11, 4
    1db0:	0d c0       	rjmp	.+26     	; 0x1dcc <vfprintf+0x272>
    1db2:	fb 2d       	mov	r31, r11
    1db4:	f4 60       	ori	r31, 0x04	; 4
    1db6:	bf 2e       	mov	r11, r31
    1db8:	09 c0       	rjmp	.+18     	; 0x1dcc <vfprintf+0x272>
    1dba:	34 fe       	sbrs	r3, 4
    1dbc:	0a c0       	rjmp	.+20     	; 0x1dd2 <vfprintf+0x278>
    1dbe:	29 2f       	mov	r18, r25
    1dc0:	26 60       	ori	r18, 0x06	; 6
    1dc2:	b2 2e       	mov	r11, r18
    1dc4:	06 c0       	rjmp	.+12     	; 0x1dd2 <vfprintf+0x278>
    1dc6:	28 e0       	ldi	r18, 0x08	; 8
    1dc8:	30 e0       	ldi	r19, 0x00	; 0
    1dca:	05 c0       	rjmp	.+10     	; 0x1dd6 <vfprintf+0x27c>
    1dcc:	20 e1       	ldi	r18, 0x10	; 16
    1dce:	30 e0       	ldi	r19, 0x00	; 0
    1dd0:	02 c0       	rjmp	.+4      	; 0x1dd6 <vfprintf+0x27c>
    1dd2:	20 e1       	ldi	r18, 0x10	; 16
    1dd4:	32 e0       	ldi	r19, 0x02	; 2
    1dd6:	f8 01       	movw	r30, r16
    1dd8:	b7 fe       	sbrs	r11, 7
    1dda:	07 c0       	rjmp	.+14     	; 0x1dea <vfprintf+0x290>
    1ddc:	60 81       	ld	r22, Z
    1dde:	71 81       	ldd	r23, Z+1	; 0x01
    1de0:	82 81       	ldd	r24, Z+2	; 0x02
    1de2:	93 81       	ldd	r25, Z+3	; 0x03
    1de4:	0c 5f       	subi	r16, 0xFC	; 252
    1de6:	1f 4f       	sbci	r17, 0xFF	; 255
    1de8:	06 c0       	rjmp	.+12     	; 0x1df6 <vfprintf+0x29c>
    1dea:	60 81       	ld	r22, Z
    1dec:	71 81       	ldd	r23, Z+1	; 0x01
    1dee:	80 e0       	ldi	r24, 0x00	; 0
    1df0:	90 e0       	ldi	r25, 0x00	; 0
    1df2:	0e 5f       	subi	r16, 0xFE	; 254
    1df4:	1f 4f       	sbci	r17, 0xFF	; 255
    1df6:	a3 01       	movw	r20, r6
    1df8:	0e 94 e0 0f 	call	0x1fc0	; 0x1fc0 <__ultoa_invert>
    1dfc:	88 2e       	mov	r8, r24
    1dfe:	86 18       	sub	r8, r6
    1e00:	fb 2d       	mov	r31, r11
    1e02:	ff 77       	andi	r31, 0x7F	; 127
    1e04:	3f 2e       	mov	r3, r31
    1e06:	36 fe       	sbrs	r3, 6
    1e08:	0d c0       	rjmp	.+26     	; 0x1e24 <vfprintf+0x2ca>
    1e0a:	23 2d       	mov	r18, r3
    1e0c:	2e 7f       	andi	r18, 0xFE	; 254
    1e0e:	a2 2e       	mov	r10, r18
    1e10:	89 14       	cp	r8, r9
    1e12:	58 f4       	brcc	.+22     	; 0x1e2a <vfprintf+0x2d0>
    1e14:	34 fe       	sbrs	r3, 4
    1e16:	0b c0       	rjmp	.+22     	; 0x1e2e <vfprintf+0x2d4>
    1e18:	32 fc       	sbrc	r3, 2
    1e1a:	09 c0       	rjmp	.+18     	; 0x1e2e <vfprintf+0x2d4>
    1e1c:	83 2d       	mov	r24, r3
    1e1e:	8e 7e       	andi	r24, 0xEE	; 238
    1e20:	a8 2e       	mov	r10, r24
    1e22:	05 c0       	rjmp	.+10     	; 0x1e2e <vfprintf+0x2d4>
    1e24:	b8 2c       	mov	r11, r8
    1e26:	a3 2c       	mov	r10, r3
    1e28:	03 c0       	rjmp	.+6      	; 0x1e30 <vfprintf+0x2d6>
    1e2a:	b8 2c       	mov	r11, r8
    1e2c:	01 c0       	rjmp	.+2      	; 0x1e30 <vfprintf+0x2d6>
    1e2e:	b9 2c       	mov	r11, r9
    1e30:	a4 fe       	sbrs	r10, 4
    1e32:	0f c0       	rjmp	.+30     	; 0x1e52 <vfprintf+0x2f8>
    1e34:	fe 01       	movw	r30, r28
    1e36:	e8 0d       	add	r30, r8
    1e38:	f1 1d       	adc	r31, r1
    1e3a:	80 81       	ld	r24, Z
    1e3c:	80 33       	cpi	r24, 0x30	; 48
    1e3e:	21 f4       	brne	.+8      	; 0x1e48 <vfprintf+0x2ee>
    1e40:	9a 2d       	mov	r25, r10
    1e42:	99 7e       	andi	r25, 0xE9	; 233
    1e44:	a9 2e       	mov	r10, r25
    1e46:	09 c0       	rjmp	.+18     	; 0x1e5a <vfprintf+0x300>
    1e48:	a2 fe       	sbrs	r10, 2
    1e4a:	06 c0       	rjmp	.+12     	; 0x1e58 <vfprintf+0x2fe>
    1e4c:	b3 94       	inc	r11
    1e4e:	b3 94       	inc	r11
    1e50:	04 c0       	rjmp	.+8      	; 0x1e5a <vfprintf+0x300>
    1e52:	8a 2d       	mov	r24, r10
    1e54:	86 78       	andi	r24, 0x86	; 134
    1e56:	09 f0       	breq	.+2      	; 0x1e5a <vfprintf+0x300>
    1e58:	b3 94       	inc	r11
    1e5a:	a3 fc       	sbrc	r10, 3
    1e5c:	11 c0       	rjmp	.+34     	; 0x1e80 <vfprintf+0x326>
    1e5e:	a0 fe       	sbrs	r10, 0
    1e60:	06 c0       	rjmp	.+12     	; 0x1e6e <vfprintf+0x314>
    1e62:	b2 14       	cp	r11, r2
    1e64:	88 f4       	brcc	.+34     	; 0x1e88 <vfprintf+0x32e>
    1e66:	28 0c       	add	r2, r8
    1e68:	92 2c       	mov	r9, r2
    1e6a:	9b 18       	sub	r9, r11
    1e6c:	0e c0       	rjmp	.+28     	; 0x1e8a <vfprintf+0x330>
    1e6e:	b2 14       	cp	r11, r2
    1e70:	60 f4       	brcc	.+24     	; 0x1e8a <vfprintf+0x330>
    1e72:	b6 01       	movw	r22, r12
    1e74:	80 e2       	ldi	r24, 0x20	; 32
    1e76:	90 e0       	ldi	r25, 0x00	; 0
    1e78:	0e 94 a4 0f 	call	0x1f48	; 0x1f48 <fputc>
    1e7c:	b3 94       	inc	r11
    1e7e:	f7 cf       	rjmp	.-18     	; 0x1e6e <vfprintf+0x314>
    1e80:	b2 14       	cp	r11, r2
    1e82:	18 f4       	brcc	.+6      	; 0x1e8a <vfprintf+0x330>
    1e84:	2b 18       	sub	r2, r11
    1e86:	02 c0       	rjmp	.+4      	; 0x1e8c <vfprintf+0x332>
    1e88:	98 2c       	mov	r9, r8
    1e8a:	21 2c       	mov	r2, r1
    1e8c:	a4 fe       	sbrs	r10, 4
    1e8e:	10 c0       	rjmp	.+32     	; 0x1eb0 <vfprintf+0x356>
    1e90:	b6 01       	movw	r22, r12
    1e92:	80 e3       	ldi	r24, 0x30	; 48
    1e94:	90 e0       	ldi	r25, 0x00	; 0
    1e96:	0e 94 a4 0f 	call	0x1f48	; 0x1f48 <fputc>
    1e9a:	a2 fe       	sbrs	r10, 2
    1e9c:	17 c0       	rjmp	.+46     	; 0x1ecc <vfprintf+0x372>
    1e9e:	a1 fc       	sbrc	r10, 1
    1ea0:	03 c0       	rjmp	.+6      	; 0x1ea8 <vfprintf+0x34e>
    1ea2:	88 e7       	ldi	r24, 0x78	; 120
    1ea4:	90 e0       	ldi	r25, 0x00	; 0
    1ea6:	02 c0       	rjmp	.+4      	; 0x1eac <vfprintf+0x352>
    1ea8:	88 e5       	ldi	r24, 0x58	; 88
    1eaa:	90 e0       	ldi	r25, 0x00	; 0
    1eac:	b6 01       	movw	r22, r12
    1eae:	0c c0       	rjmp	.+24     	; 0x1ec8 <vfprintf+0x36e>
    1eb0:	8a 2d       	mov	r24, r10
    1eb2:	86 78       	andi	r24, 0x86	; 134
    1eb4:	59 f0       	breq	.+22     	; 0x1ecc <vfprintf+0x372>
    1eb6:	a1 fe       	sbrs	r10, 1
    1eb8:	02 c0       	rjmp	.+4      	; 0x1ebe <vfprintf+0x364>
    1eba:	8b e2       	ldi	r24, 0x2B	; 43
    1ebc:	01 c0       	rjmp	.+2      	; 0x1ec0 <vfprintf+0x366>
    1ebe:	80 e2       	ldi	r24, 0x20	; 32
    1ec0:	a7 fc       	sbrc	r10, 7
    1ec2:	8d e2       	ldi	r24, 0x2D	; 45
    1ec4:	b6 01       	movw	r22, r12
    1ec6:	90 e0       	ldi	r25, 0x00	; 0
    1ec8:	0e 94 a4 0f 	call	0x1f48	; 0x1f48 <fputc>
    1ecc:	89 14       	cp	r8, r9
    1ece:	38 f4       	brcc	.+14     	; 0x1ede <vfprintf+0x384>
    1ed0:	b6 01       	movw	r22, r12
    1ed2:	80 e3       	ldi	r24, 0x30	; 48
    1ed4:	90 e0       	ldi	r25, 0x00	; 0
    1ed6:	0e 94 a4 0f 	call	0x1f48	; 0x1f48 <fputc>
    1eda:	9a 94       	dec	r9
    1edc:	f7 cf       	rjmp	.-18     	; 0x1ecc <vfprintf+0x372>
    1ede:	8a 94       	dec	r8
    1ee0:	f3 01       	movw	r30, r6
    1ee2:	e8 0d       	add	r30, r8
    1ee4:	f1 1d       	adc	r31, r1
    1ee6:	80 81       	ld	r24, Z
    1ee8:	b6 01       	movw	r22, r12
    1eea:	90 e0       	ldi	r25, 0x00	; 0
    1eec:	0e 94 a4 0f 	call	0x1f48	; 0x1f48 <fputc>
    1ef0:	81 10       	cpse	r8, r1
    1ef2:	f5 cf       	rjmp	.-22     	; 0x1ede <vfprintf+0x384>
    1ef4:	22 20       	and	r2, r2
    1ef6:	09 f4       	brne	.+2      	; 0x1efa <vfprintf+0x3a0>
    1ef8:	42 ce       	rjmp	.-892    	; 0x1b7e <vfprintf+0x24>
    1efa:	b6 01       	movw	r22, r12
    1efc:	80 e2       	ldi	r24, 0x20	; 32
    1efe:	90 e0       	ldi	r25, 0x00	; 0
    1f00:	0e 94 a4 0f 	call	0x1f48	; 0x1f48 <fputc>
    1f04:	2a 94       	dec	r2
    1f06:	f6 cf       	rjmp	.-20     	; 0x1ef4 <vfprintf+0x39a>
    1f08:	f6 01       	movw	r30, r12
    1f0a:	86 81       	ldd	r24, Z+6	; 0x06
    1f0c:	97 81       	ldd	r25, Z+7	; 0x07
    1f0e:	02 c0       	rjmp	.+4      	; 0x1f14 <vfprintf+0x3ba>
    1f10:	8f ef       	ldi	r24, 0xFF	; 255
    1f12:	9f ef       	ldi	r25, 0xFF	; 255
    1f14:	2b 96       	adiw	r28, 0x0b	; 11
    1f16:	e2 e1       	ldi	r30, 0x12	; 18
    1f18:	0c 94 5a 10 	jmp	0x20b4	; 0x20b4 <__epilogue_restores__>

00001f1c <strnlen_P>:
    1f1c:	fc 01       	movw	r30, r24
    1f1e:	05 90       	lpm	r0, Z+
    1f20:	61 50       	subi	r22, 0x01	; 1
    1f22:	70 40       	sbci	r23, 0x00	; 0
    1f24:	01 10       	cpse	r0, r1
    1f26:	d8 f7       	brcc	.-10     	; 0x1f1e <strnlen_P+0x2>
    1f28:	80 95       	com	r24
    1f2a:	90 95       	com	r25
    1f2c:	8e 0f       	add	r24, r30
    1f2e:	9f 1f       	adc	r25, r31
    1f30:	08 95       	ret

00001f32 <strnlen>:
    1f32:	fc 01       	movw	r30, r24
    1f34:	61 50       	subi	r22, 0x01	; 1
    1f36:	70 40       	sbci	r23, 0x00	; 0
    1f38:	01 90       	ld	r0, Z+
    1f3a:	01 10       	cpse	r0, r1
    1f3c:	d8 f7       	brcc	.-10     	; 0x1f34 <strnlen+0x2>
    1f3e:	80 95       	com	r24
    1f40:	90 95       	com	r25
    1f42:	8e 0f       	add	r24, r30
    1f44:	9f 1f       	adc	r25, r31
    1f46:	08 95       	ret

00001f48 <fputc>:
    1f48:	0f 93       	push	r16
    1f4a:	1f 93       	push	r17
    1f4c:	cf 93       	push	r28
    1f4e:	df 93       	push	r29
    1f50:	fb 01       	movw	r30, r22
    1f52:	23 81       	ldd	r18, Z+3	; 0x03
    1f54:	21 fd       	sbrc	r18, 1
    1f56:	03 c0       	rjmp	.+6      	; 0x1f5e <fputc+0x16>
    1f58:	8f ef       	ldi	r24, 0xFF	; 255
    1f5a:	9f ef       	ldi	r25, 0xFF	; 255
    1f5c:	2c c0       	rjmp	.+88     	; 0x1fb6 <fputc+0x6e>
    1f5e:	22 ff       	sbrs	r18, 2
    1f60:	16 c0       	rjmp	.+44     	; 0x1f8e <fputc+0x46>
    1f62:	46 81       	ldd	r20, Z+6	; 0x06
    1f64:	57 81       	ldd	r21, Z+7	; 0x07
    1f66:	24 81       	ldd	r18, Z+4	; 0x04
    1f68:	35 81       	ldd	r19, Z+5	; 0x05
    1f6a:	42 17       	cp	r20, r18
    1f6c:	53 07       	cpc	r21, r19
    1f6e:	44 f4       	brge	.+16     	; 0x1f80 <fputc+0x38>
    1f70:	a0 81       	ld	r26, Z
    1f72:	b1 81       	ldd	r27, Z+1	; 0x01
    1f74:	9d 01       	movw	r18, r26
    1f76:	2f 5f       	subi	r18, 0xFF	; 255
    1f78:	3f 4f       	sbci	r19, 0xFF	; 255
    1f7a:	31 83       	std	Z+1, r19	; 0x01
    1f7c:	20 83       	st	Z, r18
    1f7e:	8c 93       	st	X, r24
    1f80:	26 81       	ldd	r18, Z+6	; 0x06
    1f82:	37 81       	ldd	r19, Z+7	; 0x07
    1f84:	2f 5f       	subi	r18, 0xFF	; 255
    1f86:	3f 4f       	sbci	r19, 0xFF	; 255
    1f88:	37 83       	std	Z+7, r19	; 0x07
    1f8a:	26 83       	std	Z+6, r18	; 0x06
    1f8c:	14 c0       	rjmp	.+40     	; 0x1fb6 <fputc+0x6e>
    1f8e:	8b 01       	movw	r16, r22
    1f90:	ec 01       	movw	r28, r24
    1f92:	fb 01       	movw	r30, r22
    1f94:	00 84       	ldd	r0, Z+8	; 0x08
    1f96:	f1 85       	ldd	r31, Z+9	; 0x09
    1f98:	e0 2d       	mov	r30, r0
    1f9a:	09 95       	icall
    1f9c:	89 2b       	or	r24, r25
    1f9e:	e1 f6       	brne	.-72     	; 0x1f58 <fputc+0x10>
    1fa0:	d8 01       	movw	r26, r16
    1fa2:	16 96       	adiw	r26, 0x06	; 6
    1fa4:	8d 91       	ld	r24, X+
    1fa6:	9c 91       	ld	r25, X
    1fa8:	17 97       	sbiw	r26, 0x07	; 7
    1faa:	01 96       	adiw	r24, 0x01	; 1
    1fac:	17 96       	adiw	r26, 0x07	; 7
    1fae:	9c 93       	st	X, r25
    1fb0:	8e 93       	st	-X, r24
    1fb2:	16 97       	sbiw	r26, 0x06	; 6
    1fb4:	ce 01       	movw	r24, r28
    1fb6:	df 91       	pop	r29
    1fb8:	cf 91       	pop	r28
    1fba:	1f 91       	pop	r17
    1fbc:	0f 91       	pop	r16
    1fbe:	08 95       	ret

00001fc0 <__ultoa_invert>:
    1fc0:	fa 01       	movw	r30, r20
    1fc2:	aa 27       	eor	r26, r26
    1fc4:	28 30       	cpi	r18, 0x08	; 8
    1fc6:	51 f1       	breq	.+84     	; 0x201c <__ultoa_invert+0x5c>
    1fc8:	20 31       	cpi	r18, 0x10	; 16
    1fca:	81 f1       	breq	.+96     	; 0x202c <__ultoa_invert+0x6c>
    1fcc:	e8 94       	clt
    1fce:	6f 93       	push	r22
    1fd0:	6e 7f       	andi	r22, 0xFE	; 254
    1fd2:	6e 5f       	subi	r22, 0xFE	; 254
    1fd4:	7f 4f       	sbci	r23, 0xFF	; 255
    1fd6:	8f 4f       	sbci	r24, 0xFF	; 255
    1fd8:	9f 4f       	sbci	r25, 0xFF	; 255
    1fda:	af 4f       	sbci	r26, 0xFF	; 255
    1fdc:	b1 e0       	ldi	r27, 0x01	; 1
    1fde:	3e d0       	rcall	.+124    	; 0x205c <__ultoa_invert+0x9c>
    1fe0:	b4 e0       	ldi	r27, 0x04	; 4
    1fe2:	3c d0       	rcall	.+120    	; 0x205c <__ultoa_invert+0x9c>
    1fe4:	67 0f       	add	r22, r23
    1fe6:	78 1f       	adc	r23, r24
    1fe8:	89 1f       	adc	r24, r25
    1fea:	9a 1f       	adc	r25, r26
    1fec:	a1 1d       	adc	r26, r1
    1fee:	68 0f       	add	r22, r24
    1ff0:	79 1f       	adc	r23, r25
    1ff2:	8a 1f       	adc	r24, r26
    1ff4:	91 1d       	adc	r25, r1
    1ff6:	a1 1d       	adc	r26, r1
    1ff8:	6a 0f       	add	r22, r26
    1ffa:	71 1d       	adc	r23, r1
    1ffc:	81 1d       	adc	r24, r1
    1ffe:	91 1d       	adc	r25, r1
    2000:	a1 1d       	adc	r26, r1
    2002:	20 d0       	rcall	.+64     	; 0x2044 <__ultoa_invert+0x84>
    2004:	09 f4       	brne	.+2      	; 0x2008 <__ultoa_invert+0x48>
    2006:	68 94       	set
    2008:	3f 91       	pop	r19
    200a:	2a e0       	ldi	r18, 0x0A	; 10
    200c:	26 9f       	mul	r18, r22
    200e:	11 24       	eor	r1, r1
    2010:	30 19       	sub	r19, r0
    2012:	30 5d       	subi	r19, 0xD0	; 208
    2014:	31 93       	st	Z+, r19
    2016:	de f6       	brtc	.-74     	; 0x1fce <__ultoa_invert+0xe>
    2018:	cf 01       	movw	r24, r30
    201a:	08 95       	ret
    201c:	46 2f       	mov	r20, r22
    201e:	47 70       	andi	r20, 0x07	; 7
    2020:	40 5d       	subi	r20, 0xD0	; 208
    2022:	41 93       	st	Z+, r20
    2024:	b3 e0       	ldi	r27, 0x03	; 3
    2026:	0f d0       	rcall	.+30     	; 0x2046 <__ultoa_invert+0x86>
    2028:	c9 f7       	brne	.-14     	; 0x201c <__ultoa_invert+0x5c>
    202a:	f6 cf       	rjmp	.-20     	; 0x2018 <__ultoa_invert+0x58>
    202c:	46 2f       	mov	r20, r22
    202e:	4f 70       	andi	r20, 0x0F	; 15
    2030:	40 5d       	subi	r20, 0xD0	; 208
    2032:	4a 33       	cpi	r20, 0x3A	; 58
    2034:	18 f0       	brcs	.+6      	; 0x203c <__ultoa_invert+0x7c>
    2036:	49 5d       	subi	r20, 0xD9	; 217
    2038:	31 fd       	sbrc	r19, 1
    203a:	40 52       	subi	r20, 0x20	; 32
    203c:	41 93       	st	Z+, r20
    203e:	02 d0       	rcall	.+4      	; 0x2044 <__ultoa_invert+0x84>
    2040:	a9 f7       	brne	.-22     	; 0x202c <__ultoa_invert+0x6c>
    2042:	ea cf       	rjmp	.-44     	; 0x2018 <__ultoa_invert+0x58>
    2044:	b4 e0       	ldi	r27, 0x04	; 4
    2046:	a6 95       	lsr	r26
    2048:	97 95       	ror	r25
    204a:	87 95       	ror	r24
    204c:	77 95       	ror	r23
    204e:	67 95       	ror	r22
    2050:	ba 95       	dec	r27
    2052:	c9 f7       	brne	.-14     	; 0x2046 <__ultoa_invert+0x86>
    2054:	00 97       	sbiw	r24, 0x00	; 0
    2056:	61 05       	cpc	r22, r1
    2058:	71 05       	cpc	r23, r1
    205a:	08 95       	ret
    205c:	9b 01       	movw	r18, r22
    205e:	ac 01       	movw	r20, r24
    2060:	0a 2e       	mov	r0, r26
    2062:	06 94       	lsr	r0
    2064:	57 95       	ror	r21
    2066:	47 95       	ror	r20
    2068:	37 95       	ror	r19
    206a:	27 95       	ror	r18
    206c:	ba 95       	dec	r27
    206e:	c9 f7       	brne	.-14     	; 0x2062 <__ultoa_invert+0xa2>
    2070:	62 0f       	add	r22, r18
    2072:	73 1f       	adc	r23, r19
    2074:	84 1f       	adc	r24, r20
    2076:	95 1f       	adc	r25, r21
    2078:	a0 1d       	adc	r26, r0
    207a:	08 95       	ret

0000207c <__prologue_saves__>:
    207c:	2f 92       	push	r2
    207e:	3f 92       	push	r3
    2080:	4f 92       	push	r4
    2082:	5f 92       	push	r5
    2084:	6f 92       	push	r6
    2086:	7f 92       	push	r7
    2088:	8f 92       	push	r8
    208a:	9f 92       	push	r9
    208c:	af 92       	push	r10
    208e:	bf 92       	push	r11
    2090:	cf 92       	push	r12
    2092:	df 92       	push	r13
    2094:	ef 92       	push	r14
    2096:	ff 92       	push	r15
    2098:	0f 93       	push	r16
    209a:	1f 93       	push	r17
    209c:	cf 93       	push	r28
    209e:	df 93       	push	r29
    20a0:	cd b7       	in	r28, 0x3d	; 61
    20a2:	de b7       	in	r29, 0x3e	; 62
    20a4:	ca 1b       	sub	r28, r26
    20a6:	db 0b       	sbc	r29, r27
    20a8:	0f b6       	in	r0, 0x3f	; 63
    20aa:	f8 94       	cli
    20ac:	de bf       	out	0x3e, r29	; 62
    20ae:	0f be       	out	0x3f, r0	; 63
    20b0:	cd bf       	out	0x3d, r28	; 61
    20b2:	09 94       	ijmp

000020b4 <__epilogue_restores__>:
    20b4:	2a 88       	ldd	r2, Y+18	; 0x12
    20b6:	39 88       	ldd	r3, Y+17	; 0x11
    20b8:	48 88       	ldd	r4, Y+16	; 0x10
    20ba:	5f 84       	ldd	r5, Y+15	; 0x0f
    20bc:	6e 84       	ldd	r6, Y+14	; 0x0e
    20be:	7d 84       	ldd	r7, Y+13	; 0x0d
    20c0:	8c 84       	ldd	r8, Y+12	; 0x0c
    20c2:	9b 84       	ldd	r9, Y+11	; 0x0b
    20c4:	aa 84       	ldd	r10, Y+10	; 0x0a
    20c6:	b9 84       	ldd	r11, Y+9	; 0x09
    20c8:	c8 84       	ldd	r12, Y+8	; 0x08
    20ca:	df 80       	ldd	r13, Y+7	; 0x07
    20cc:	ee 80       	ldd	r14, Y+6	; 0x06
    20ce:	fd 80       	ldd	r15, Y+5	; 0x05
    20d0:	0c 81       	ldd	r16, Y+4	; 0x04
    20d2:	1b 81       	ldd	r17, Y+3	; 0x03
    20d4:	aa 81       	ldd	r26, Y+2	; 0x02
    20d6:	b9 81       	ldd	r27, Y+1	; 0x01
    20d8:	ce 0f       	add	r28, r30
    20da:	d1 1d       	adc	r29, r1
    20dc:	0f b6       	in	r0, 0x3f	; 63
    20de:	f8 94       	cli
    20e0:	de bf       	out	0x3e, r29	; 62
    20e2:	0f be       	out	0x3f, r0	; 63
    20e4:	cd bf       	out	0x3d, r28	; 61
    20e6:	ed 01       	movw	r28, r26
    20e8:	08 95       	ret

000020ea <_exit>:
    20ea:	f8 94       	cli

000020ec <__stop_program>:
    20ec:	ff cf       	rjmp	.-2      	; 0x20ec <__stop_program>
